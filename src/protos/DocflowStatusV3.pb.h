// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DocflowStatusV3.proto

#ifndef PROTOBUF_DocflowStatusV3_2eproto__INCLUDED
#define PROTOBUF_DocflowStatusV3_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DocflowStatusV3_2eproto();
void protobuf_AssignDesc_DocflowStatusV3_2eproto();
void protobuf_ShutdownFile_DocflowStatusV3_2eproto();

class DocflowStatusV3;
class DocflowStatusModelV3;

// ===================================================================

class DocflowStatusV3 : public ::google::protobuf::Message {
 public:
  DocflowStatusV3();
  virtual ~DocflowStatusV3();

  DocflowStatusV3(const DocflowStatusV3& from);

  inline DocflowStatusV3& operator=(const DocflowStatusV3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocflowStatusV3& default_instance();

  void Swap(DocflowStatusV3* other);

  // implements Message ----------------------------------------------

  DocflowStatusV3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DocflowStatusV3& from);
  void MergeFrom(const DocflowStatusV3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Diadoc.Api.Proto.DocflowStatusModelV3 PrimaryStatus = 1;
  inline bool has_primarystatus() const;
  inline void clear_primarystatus();
  static const int kPrimaryStatusFieldNumber = 1;
  inline const ::Diadoc::Api::Proto::DocflowStatusModelV3& primarystatus() const;
  inline ::Diadoc::Api::Proto::DocflowStatusModelV3* mutable_primarystatus();
  inline ::Diadoc::Api::Proto::DocflowStatusModelV3* release_primarystatus();
  inline void set_allocated_primarystatus(::Diadoc::Api::Proto::DocflowStatusModelV3* primarystatus);

  // optional .Diadoc.Api.Proto.DocflowStatusModelV3 SecondaryStatus = 2;
  inline bool has_secondarystatus() const;
  inline void clear_secondarystatus();
  static const int kSecondaryStatusFieldNumber = 2;
  inline const ::Diadoc::Api::Proto::DocflowStatusModelV3& secondarystatus() const;
  inline ::Diadoc::Api::Proto::DocflowStatusModelV3* mutable_secondarystatus();
  inline ::Diadoc::Api::Proto::DocflowStatusModelV3* release_secondarystatus();
  inline void set_allocated_secondarystatus(::Diadoc::Api::Proto::DocflowStatusModelV3* secondarystatus);

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.DocflowStatusV3)
 private:
  inline void set_has_primarystatus();
  inline void clear_has_primarystatus();
  inline void set_has_secondarystatus();
  inline void clear_has_secondarystatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Diadoc::Api::Proto::DocflowStatusModelV3* primarystatus_;
  ::Diadoc::Api::Proto::DocflowStatusModelV3* secondarystatus_;
  friend void  protobuf_AddDesc_DocflowStatusV3_2eproto();
  friend void protobuf_AssignDesc_DocflowStatusV3_2eproto();
  friend void protobuf_ShutdownFile_DocflowStatusV3_2eproto();

  void InitAsDefaultInstance();
  static DocflowStatusV3* default_instance_;
};
// -------------------------------------------------------------------

class DocflowStatusModelV3 : public ::google::protobuf::Message {
 public:
  DocflowStatusModelV3();
  virtual ~DocflowStatusModelV3();

  DocflowStatusModelV3(const DocflowStatusModelV3& from);

  inline DocflowStatusModelV3& operator=(const DocflowStatusModelV3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocflowStatusModelV3& default_instance();

  void Swap(DocflowStatusModelV3* other);

  // implements Message ----------------------------------------------

  DocflowStatusModelV3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DocflowStatusModelV3& from);
  void MergeFrom(const DocflowStatusModelV3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Severity = 1;
  inline bool has_severity() const;
  inline void clear_severity();
  static const int kSeverityFieldNumber = 1;
  inline const ::std::string& severity() const;
  inline void set_severity(const ::std::string& value);
  inline void set_severity(const char* value);
  inline void set_severity(const char* value, size_t size);
  inline ::std::string* mutable_severity();
  inline ::std::string* release_severity();
  inline void set_allocated_severity(::std::string* severity);

  // optional string StatusText = 2;
  inline bool has_statustext() const;
  inline void clear_statustext();
  static const int kStatusTextFieldNumber = 2;
  inline const ::std::string& statustext() const;
  inline void set_statustext(const ::std::string& value);
  inline void set_statustext(const char* value);
  inline void set_statustext(const char* value, size_t size);
  inline ::std::string* mutable_statustext();
  inline ::std::string* release_statustext();
  inline void set_allocated_statustext(::std::string* statustext);

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.DocflowStatusModelV3)
 private:
  inline void set_has_severity();
  inline void clear_has_severity();
  inline void set_has_statustext();
  inline void clear_has_statustext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* severity_;
  ::std::string* statustext_;
  friend void  protobuf_AddDesc_DocflowStatusV3_2eproto();
  friend void protobuf_AssignDesc_DocflowStatusV3_2eproto();
  friend void protobuf_ShutdownFile_DocflowStatusV3_2eproto();

  void InitAsDefaultInstance();
  static DocflowStatusModelV3* default_instance_;
};
// ===================================================================


// ===================================================================

// DocflowStatusV3

// required .Diadoc.Api.Proto.DocflowStatusModelV3 PrimaryStatus = 1;
inline bool DocflowStatusV3::has_primarystatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocflowStatusV3::set_has_primarystatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocflowStatusV3::clear_has_primarystatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocflowStatusV3::clear_primarystatus() {
  if (primarystatus_ != NULL) primarystatus_->::Diadoc::Api::Proto::DocflowStatusModelV3::Clear();
  clear_has_primarystatus();
}
inline const ::Diadoc::Api::Proto::DocflowStatusModelV3& DocflowStatusV3::primarystatus() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.DocflowStatusV3.PrimaryStatus)
  return primarystatus_ != NULL ? *primarystatus_ : *default_instance_->primarystatus_;
}
inline ::Diadoc::Api::Proto::DocflowStatusModelV3* DocflowStatusV3::mutable_primarystatus() {
  set_has_primarystatus();
  if (primarystatus_ == NULL) primarystatus_ = new ::Diadoc::Api::Proto::DocflowStatusModelV3;
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.DocflowStatusV3.PrimaryStatus)
  return primarystatus_;
}
inline ::Diadoc::Api::Proto::DocflowStatusModelV3* DocflowStatusV3::release_primarystatus() {
  clear_has_primarystatus();
  ::Diadoc::Api::Proto::DocflowStatusModelV3* temp = primarystatus_;
  primarystatus_ = NULL;
  return temp;
}
inline void DocflowStatusV3::set_allocated_primarystatus(::Diadoc::Api::Proto::DocflowStatusModelV3* primarystatus) {
  delete primarystatus_;
  primarystatus_ = primarystatus;
  if (primarystatus) {
    set_has_primarystatus();
  } else {
    clear_has_primarystatus();
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.DocflowStatusV3.PrimaryStatus)
}

// optional .Diadoc.Api.Proto.DocflowStatusModelV3 SecondaryStatus = 2;
inline bool DocflowStatusV3::has_secondarystatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocflowStatusV3::set_has_secondarystatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocflowStatusV3::clear_has_secondarystatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocflowStatusV3::clear_secondarystatus() {
  if (secondarystatus_ != NULL) secondarystatus_->::Diadoc::Api::Proto::DocflowStatusModelV3::Clear();
  clear_has_secondarystatus();
}
inline const ::Diadoc::Api::Proto::DocflowStatusModelV3& DocflowStatusV3::secondarystatus() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.DocflowStatusV3.SecondaryStatus)
  return secondarystatus_ != NULL ? *secondarystatus_ : *default_instance_->secondarystatus_;
}
inline ::Diadoc::Api::Proto::DocflowStatusModelV3* DocflowStatusV3::mutable_secondarystatus() {
  set_has_secondarystatus();
  if (secondarystatus_ == NULL) secondarystatus_ = new ::Diadoc::Api::Proto::DocflowStatusModelV3;
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.DocflowStatusV3.SecondaryStatus)
  return secondarystatus_;
}
inline ::Diadoc::Api::Proto::DocflowStatusModelV3* DocflowStatusV3::release_secondarystatus() {
  clear_has_secondarystatus();
  ::Diadoc::Api::Proto::DocflowStatusModelV3* temp = secondarystatus_;
  secondarystatus_ = NULL;
  return temp;
}
inline void DocflowStatusV3::set_allocated_secondarystatus(::Diadoc::Api::Proto::DocflowStatusModelV3* secondarystatus) {
  delete secondarystatus_;
  secondarystatus_ = secondarystatus;
  if (secondarystatus) {
    set_has_secondarystatus();
  } else {
    clear_has_secondarystatus();
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.DocflowStatusV3.SecondaryStatus)
}

// -------------------------------------------------------------------

// DocflowStatusModelV3

// optional string Severity = 1;
inline bool DocflowStatusModelV3::has_severity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocflowStatusModelV3::set_has_severity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocflowStatusModelV3::clear_has_severity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocflowStatusModelV3::clear_severity() {
  if (severity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    severity_->clear();
  }
  clear_has_severity();
}
inline const ::std::string& DocflowStatusModelV3::severity() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.DocflowStatusModelV3.Severity)
  return *severity_;
}
inline void DocflowStatusModelV3::set_severity(const ::std::string& value) {
  set_has_severity();
  if (severity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    severity_ = new ::std::string;
  }
  severity_->assign(value);
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.DocflowStatusModelV3.Severity)
}
inline void DocflowStatusModelV3::set_severity(const char* value) {
  set_has_severity();
  if (severity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    severity_ = new ::std::string;
  }
  severity_->assign(value);
  // @@protoc_insertion_point(field_set_char:Diadoc.Api.Proto.DocflowStatusModelV3.Severity)
}
inline void DocflowStatusModelV3::set_severity(const char* value, size_t size) {
  set_has_severity();
  if (severity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    severity_ = new ::std::string;
  }
  severity_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Diadoc.Api.Proto.DocflowStatusModelV3.Severity)
}
inline ::std::string* DocflowStatusModelV3::mutable_severity() {
  set_has_severity();
  if (severity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    severity_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.DocflowStatusModelV3.Severity)
  return severity_;
}
inline ::std::string* DocflowStatusModelV3::release_severity() {
  clear_has_severity();
  if (severity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = severity_;
    severity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DocflowStatusModelV3::set_allocated_severity(::std::string* severity) {
  if (severity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete severity_;
  }
  if (severity) {
    set_has_severity();
    severity_ = severity;
  } else {
    clear_has_severity();
    severity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.DocflowStatusModelV3.Severity)
}

// optional string StatusText = 2;
inline bool DocflowStatusModelV3::has_statustext() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocflowStatusModelV3::set_has_statustext() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocflowStatusModelV3::clear_has_statustext() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocflowStatusModelV3::clear_statustext() {
  if (statustext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statustext_->clear();
  }
  clear_has_statustext();
}
inline const ::std::string& DocflowStatusModelV3::statustext() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.DocflowStatusModelV3.StatusText)
  return *statustext_;
}
inline void DocflowStatusModelV3::set_statustext(const ::std::string& value) {
  set_has_statustext();
  if (statustext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statustext_ = new ::std::string;
  }
  statustext_->assign(value);
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.DocflowStatusModelV3.StatusText)
}
inline void DocflowStatusModelV3::set_statustext(const char* value) {
  set_has_statustext();
  if (statustext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statustext_ = new ::std::string;
  }
  statustext_->assign(value);
  // @@protoc_insertion_point(field_set_char:Diadoc.Api.Proto.DocflowStatusModelV3.StatusText)
}
inline void DocflowStatusModelV3::set_statustext(const char* value, size_t size) {
  set_has_statustext();
  if (statustext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statustext_ = new ::std::string;
  }
  statustext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Diadoc.Api.Proto.DocflowStatusModelV3.StatusText)
}
inline ::std::string* DocflowStatusModelV3::mutable_statustext() {
  set_has_statustext();
  if (statustext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statustext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.DocflowStatusModelV3.StatusText)
  return statustext_;
}
inline ::std::string* DocflowStatusModelV3::release_statustext() {
  clear_has_statustext();
  if (statustext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = statustext_;
    statustext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DocflowStatusModelV3::set_allocated_statustext(::std::string* statustext) {
  if (statustext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete statustext_;
  }
  if (statustext) {
    set_has_statustext();
    statustext_ = statustext;
  } else {
    clear_has_statustext();
    statustext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.DocflowStatusModelV3.StatusText)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DocflowStatusV3_2eproto__INCLUDED
