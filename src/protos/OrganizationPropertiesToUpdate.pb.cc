// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrganizationPropertiesToUpdate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "OrganizationPropertiesToUpdate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {

namespace {

const ::google::protobuf::Descriptor* StringValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrganizationPropertiesToUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrganizationPropertiesToUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeadOrganizationPropertiesToUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeadOrganizationPropertiesToUpdate_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_OrganizationPropertiesToUpdate_2eproto() {
  protobuf_AddDesc_OrganizationPropertiesToUpdate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "OrganizationPropertiesToUpdate.proto");
  GOOGLE_CHECK(file != NULL);
  StringValue_descriptor_ = file->message_type(0);
  static const int StringValue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringValue, value_),
  };
  StringValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StringValue_descriptor_,
      StringValue::default_instance_,
      StringValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StringValue));
  OrganizationPropertiesToUpdate_descriptor_ = file->message_type(1);
  static const int OrganizationPropertiesToUpdate_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationPropertiesToUpdate, orgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationPropertiesToUpdate, ogrn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationPropertiesToUpdate, ifnscode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationPropertiesToUpdate, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationPropertiesToUpdate, headorganizationproperties_),
  };
  OrganizationPropertiesToUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrganizationPropertiesToUpdate_descriptor_,
      OrganizationPropertiesToUpdate::default_instance_,
      OrganizationPropertiesToUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationPropertiesToUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationPropertiesToUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrganizationPropertiesToUpdate));
  HeadOrganizationPropertiesToUpdate_descriptor_ = file->message_type(2);
  static const int HeadOrganizationPropertiesToUpdate_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeadOrganizationPropertiesToUpdate, kpp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeadOrganizationPropertiesToUpdate, fullname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeadOrganizationPropertiesToUpdate, address_),
  };
  HeadOrganizationPropertiesToUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeadOrganizationPropertiesToUpdate_descriptor_,
      HeadOrganizationPropertiesToUpdate::default_instance_,
      HeadOrganizationPropertiesToUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeadOrganizationPropertiesToUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeadOrganizationPropertiesToUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeadOrganizationPropertiesToUpdate));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_OrganizationPropertiesToUpdate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StringValue_descriptor_, &StringValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrganizationPropertiesToUpdate_descriptor_, &OrganizationPropertiesToUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeadOrganizationPropertiesToUpdate_descriptor_, &HeadOrganizationPropertiesToUpdate::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_OrganizationPropertiesToUpdate_2eproto() {
  delete StringValue::default_instance_;
  delete StringValue_reflection_;
  delete OrganizationPropertiesToUpdate::default_instance_;
  delete OrganizationPropertiesToUpdate_reflection_;
  delete HeadOrganizationPropertiesToUpdate::default_instance_;
  delete HeadOrganizationPropertiesToUpdate_reflection_;
}

void protobuf_AddDesc_OrganizationPropertiesToUpdate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::protobuf_AddDesc_Address_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$OrganizationPropertiesToUpdate.proto\022\020"
    "Diadoc.Api.Proto\032\rAddress.proto\"\034\n\013Strin"
    "gValue\022\r\n\005Value\030\001 \001(\t\"\223\002\n\036OrganizationPr"
    "opertiesToUpdate\022\r\n\005OrgId\030\001 \002(\t\022+\n\004Ogrn\030"
    "\002 \001(\0132\035.Diadoc.Api.Proto.StringValue\022/\n\010"
    "IfnsCode\030\003 \001(\0132\035.Diadoc.Api.Proto.String"
    "Value\022*\n\007Address\030\004 \001(\0132\031.Diadoc.Api.Prot"
    "o.Address\022X\n\032HeadOrganizationProperties\030"
    "\005 \001(\01324.Diadoc.Api.Proto.HeadOrganizatio"
    "nPropertiesToUpdate\"\255\001\n\"HeadOrganization"
    "PropertiesToUpdate\022*\n\003Kpp\030\001 \001(\0132\035.Diadoc"
    ".Api.Proto.StringValue\022/\n\010FullName\030\002 \001(\013"
    "2\035.Diadoc.Api.Proto.StringValue\022*\n\007Addre"
    "ss\030\003 \001(\0132\031.Diadoc.Api.Proto.Address", 555);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OrganizationPropertiesToUpdate.proto", &protobuf_RegisterTypes);
  StringValue::default_instance_ = new StringValue();
  OrganizationPropertiesToUpdate::default_instance_ = new OrganizationPropertiesToUpdate();
  HeadOrganizationPropertiesToUpdate::default_instance_ = new HeadOrganizationPropertiesToUpdate();
  StringValue::default_instance_->InitAsDefaultInstance();
  OrganizationPropertiesToUpdate::default_instance_->InitAsDefaultInstance();
  HeadOrganizationPropertiesToUpdate::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_OrganizationPropertiesToUpdate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_OrganizationPropertiesToUpdate_2eproto {
  StaticDescriptorInitializer_OrganizationPropertiesToUpdate_2eproto() {
    protobuf_AddDesc_OrganizationPropertiesToUpdate_2eproto();
  }
} static_descriptor_initializer_OrganizationPropertiesToUpdate_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int StringValue::kValueFieldNumber;
#endif  // !_MSC_VER

StringValue::StringValue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.StringValue)
}

void StringValue::InitAsDefaultInstance() {
}

StringValue::StringValue(const StringValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.StringValue)
}

void StringValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringValue::~StringValue() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.StringValue)
  SharedDtor();
}

void StringValue::SharedDtor() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void StringValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringValue_descriptor_;
}

const StringValue& StringValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OrganizationPropertiesToUpdate_2eproto();
  return *default_instance_;
}

StringValue* StringValue::default_instance_ = NULL;

StringValue* StringValue::New() const {
  return new StringValue;
}

void StringValue::Clear() {
  if (has_value()) {
    if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      value_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StringValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.StringValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.StringValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.StringValue)
  return false;
#undef DO_
}

void StringValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.StringValue)
  // optional string Value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.StringValue)
}

::google::protobuf::uint8* StringValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.StringValue)
  // optional string Value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.StringValue)
  return target;
}

int StringValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StringValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StringValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StringValue::MergeFrom(const StringValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StringValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringValue::CopyFrom(const StringValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringValue::IsInitialized() const {

  return true;
}

void StringValue::Swap(StringValue* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StringValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringValue_descriptor_;
  metadata.reflection = StringValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrganizationPropertiesToUpdate::kOrgIdFieldNumber;
const int OrganizationPropertiesToUpdate::kOgrnFieldNumber;
const int OrganizationPropertiesToUpdate::kIfnsCodeFieldNumber;
const int OrganizationPropertiesToUpdate::kAddressFieldNumber;
const int OrganizationPropertiesToUpdate::kHeadOrganizationPropertiesFieldNumber;
#endif  // !_MSC_VER

OrganizationPropertiesToUpdate::OrganizationPropertiesToUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
}

void OrganizationPropertiesToUpdate::InitAsDefaultInstance() {
  ogrn_ = const_cast< ::Diadoc::Api::Proto::StringValue*>(&::Diadoc::Api::Proto::StringValue::default_instance());
  ifnscode_ = const_cast< ::Diadoc::Api::Proto::StringValue*>(&::Diadoc::Api::Proto::StringValue::default_instance());
  address_ = const_cast< ::Diadoc::Api::Proto::Address*>(&::Diadoc::Api::Proto::Address::default_instance());
  headorganizationproperties_ = const_cast< ::Diadoc::Api::Proto::HeadOrganizationPropertiesToUpdate*>(&::Diadoc::Api::Proto::HeadOrganizationPropertiesToUpdate::default_instance());
}

OrganizationPropertiesToUpdate::OrganizationPropertiesToUpdate(const OrganizationPropertiesToUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
}

void OrganizationPropertiesToUpdate::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  orgid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ogrn_ = NULL;
  ifnscode_ = NULL;
  address_ = NULL;
  headorganizationproperties_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrganizationPropertiesToUpdate::~OrganizationPropertiesToUpdate() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
  SharedDtor();
}

void OrganizationPropertiesToUpdate::SharedDtor() {
  if (orgid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orgid_;
  }
  if (this != default_instance_) {
    delete ogrn_;
    delete ifnscode_;
    delete address_;
    delete headorganizationproperties_;
  }
}

void OrganizationPropertiesToUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrganizationPropertiesToUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrganizationPropertiesToUpdate_descriptor_;
}

const OrganizationPropertiesToUpdate& OrganizationPropertiesToUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OrganizationPropertiesToUpdate_2eproto();
  return *default_instance_;
}

OrganizationPropertiesToUpdate* OrganizationPropertiesToUpdate::default_instance_ = NULL;

OrganizationPropertiesToUpdate* OrganizationPropertiesToUpdate::New() const {
  return new OrganizationPropertiesToUpdate;
}

void OrganizationPropertiesToUpdate::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_orgid()) {
      if (orgid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        orgid_->clear();
      }
    }
    if (has_ogrn()) {
      if (ogrn_ != NULL) ogrn_->::Diadoc::Api::Proto::StringValue::Clear();
    }
    if (has_ifnscode()) {
      if (ifnscode_ != NULL) ifnscode_->::Diadoc::Api::Proto::StringValue::Clear();
    }
    if (has_address()) {
      if (address_ != NULL) address_->::Diadoc::Api::Proto::Address::Clear();
    }
    if (has_headorganizationproperties()) {
      if (headorganizationproperties_ != NULL) headorganizationproperties_->::Diadoc::Api::Proto::HeadOrganizationPropertiesToUpdate::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrganizationPropertiesToUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string OrgId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orgid().data(), this->orgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orgid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Ogrn;
        break;
      }

      // optional .Diadoc.Api.Proto.StringValue Ogrn = 2;
      case 2: {
        if (tag == 18) {
         parse_Ogrn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ogrn()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_IfnsCode;
        break;
      }

      // optional .Diadoc.Api.Proto.StringValue IfnsCode = 3;
      case 3: {
        if (tag == 26) {
         parse_IfnsCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ifnscode()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Address;
        break;
      }

      // optional .Diadoc.Api.Proto.Address Address = 4;
      case 4: {
        if (tag == 34) {
         parse_Address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_HeadOrganizationProperties;
        break;
      }

      // optional .Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate HeadOrganizationProperties = 5;
      case 5: {
        if (tag == 42) {
         parse_HeadOrganizationProperties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headorganizationproperties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
  return false;
#undef DO_
}

void OrganizationPropertiesToUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
  // required string OrgId = 1;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orgid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orgid(), output);
  }

  // optional .Diadoc.Api.Proto.StringValue Ogrn = 2;
  if (has_ogrn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ogrn(), output);
  }

  // optional .Diadoc.Api.Proto.StringValue IfnsCode = 3;
  if (has_ifnscode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ifnscode(), output);
  }

  // optional .Diadoc.Api.Proto.Address Address = 4;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->address(), output);
  }

  // optional .Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate HeadOrganizationProperties = 5;
  if (has_headorganizationproperties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->headorganizationproperties(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
}

::google::protobuf::uint8* OrganizationPropertiesToUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
  // required string OrgId = 1;
  if (has_orgid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orgid().data(), this->orgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orgid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->orgid(), target);
  }

  // optional .Diadoc.Api.Proto.StringValue Ogrn = 2;
  if (has_ogrn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->ogrn(), target);
  }

  // optional .Diadoc.Api.Proto.StringValue IfnsCode = 3;
  if (has_ifnscode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->ifnscode(), target);
  }

  // optional .Diadoc.Api.Proto.Address Address = 4;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->address(), target);
  }

  // optional .Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate HeadOrganizationProperties = 5;
  if (has_headorganizationproperties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->headorganizationproperties(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.OrganizationPropertiesToUpdate)
  return target;
}

int OrganizationPropertiesToUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string OrgId = 1;
    if (has_orgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orgid());
    }

    // optional .Diadoc.Api.Proto.StringValue Ogrn = 2;
    if (has_ogrn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ogrn());
    }

    // optional .Diadoc.Api.Proto.StringValue IfnsCode = 3;
    if (has_ifnscode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ifnscode());
    }

    // optional .Diadoc.Api.Proto.Address Address = 4;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->address());
    }

    // optional .Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate HeadOrganizationProperties = 5;
    if (has_headorganizationproperties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->headorganizationproperties());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrganizationPropertiesToUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrganizationPropertiesToUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrganizationPropertiesToUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrganizationPropertiesToUpdate::MergeFrom(const OrganizationPropertiesToUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orgid()) {
      set_orgid(from.orgid());
    }
    if (from.has_ogrn()) {
      mutable_ogrn()->::Diadoc::Api::Proto::StringValue::MergeFrom(from.ogrn());
    }
    if (from.has_ifnscode()) {
      mutable_ifnscode()->::Diadoc::Api::Proto::StringValue::MergeFrom(from.ifnscode());
    }
    if (from.has_address()) {
      mutable_address()->::Diadoc::Api::Proto::Address::MergeFrom(from.address());
    }
    if (from.has_headorganizationproperties()) {
      mutable_headorganizationproperties()->::Diadoc::Api::Proto::HeadOrganizationPropertiesToUpdate::MergeFrom(from.headorganizationproperties());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrganizationPropertiesToUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrganizationPropertiesToUpdate::CopyFrom(const OrganizationPropertiesToUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationPropertiesToUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_address()) {
    if (!this->address().IsInitialized()) return false;
  }
  if (has_headorganizationproperties()) {
    if (!this->headorganizationproperties().IsInitialized()) return false;
  }
  return true;
}

void OrganizationPropertiesToUpdate::Swap(OrganizationPropertiesToUpdate* other) {
  if (other != this) {
    std::swap(orgid_, other->orgid_);
    std::swap(ogrn_, other->ogrn_);
    std::swap(ifnscode_, other->ifnscode_);
    std::swap(address_, other->address_);
    std::swap(headorganizationproperties_, other->headorganizationproperties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrganizationPropertiesToUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrganizationPropertiesToUpdate_descriptor_;
  metadata.reflection = OrganizationPropertiesToUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeadOrganizationPropertiesToUpdate::kKppFieldNumber;
const int HeadOrganizationPropertiesToUpdate::kFullNameFieldNumber;
const int HeadOrganizationPropertiesToUpdate::kAddressFieldNumber;
#endif  // !_MSC_VER

HeadOrganizationPropertiesToUpdate::HeadOrganizationPropertiesToUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
}

void HeadOrganizationPropertiesToUpdate::InitAsDefaultInstance() {
  kpp_ = const_cast< ::Diadoc::Api::Proto::StringValue*>(&::Diadoc::Api::Proto::StringValue::default_instance());
  fullname_ = const_cast< ::Diadoc::Api::Proto::StringValue*>(&::Diadoc::Api::Proto::StringValue::default_instance());
  address_ = const_cast< ::Diadoc::Api::Proto::Address*>(&::Diadoc::Api::Proto::Address::default_instance());
}

HeadOrganizationPropertiesToUpdate::HeadOrganizationPropertiesToUpdate(const HeadOrganizationPropertiesToUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
}

void HeadOrganizationPropertiesToUpdate::SharedCtor() {
  _cached_size_ = 0;
  kpp_ = NULL;
  fullname_ = NULL;
  address_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeadOrganizationPropertiesToUpdate::~HeadOrganizationPropertiesToUpdate() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
  SharedDtor();
}

void HeadOrganizationPropertiesToUpdate::SharedDtor() {
  if (this != default_instance_) {
    delete kpp_;
    delete fullname_;
    delete address_;
  }
}

void HeadOrganizationPropertiesToUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeadOrganizationPropertiesToUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeadOrganizationPropertiesToUpdate_descriptor_;
}

const HeadOrganizationPropertiesToUpdate& HeadOrganizationPropertiesToUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OrganizationPropertiesToUpdate_2eproto();
  return *default_instance_;
}

HeadOrganizationPropertiesToUpdate* HeadOrganizationPropertiesToUpdate::default_instance_ = NULL;

HeadOrganizationPropertiesToUpdate* HeadOrganizationPropertiesToUpdate::New() const {
  return new HeadOrganizationPropertiesToUpdate;
}

void HeadOrganizationPropertiesToUpdate::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_kpp()) {
      if (kpp_ != NULL) kpp_->::Diadoc::Api::Proto::StringValue::Clear();
    }
    if (has_fullname()) {
      if (fullname_ != NULL) fullname_->::Diadoc::Api::Proto::StringValue::Clear();
    }
    if (has_address()) {
      if (address_ != NULL) address_->::Diadoc::Api::Proto::Address::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeadOrganizationPropertiesToUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Diadoc.Api.Proto.StringValue Kpp = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kpp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FullName;
        break;
      }

      // optional .Diadoc.Api.Proto.StringValue FullName = 2;
      case 2: {
        if (tag == 18) {
         parse_FullName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fullname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Address;
        break;
      }

      // optional .Diadoc.Api.Proto.Address Address = 3;
      case 3: {
        if (tag == 26) {
         parse_Address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
  return false;
#undef DO_
}

void HeadOrganizationPropertiesToUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
  // optional .Diadoc.Api.Proto.StringValue Kpp = 1;
  if (has_kpp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->kpp(), output);
  }

  // optional .Diadoc.Api.Proto.StringValue FullName = 2;
  if (has_fullname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fullname(), output);
  }

  // optional .Diadoc.Api.Proto.Address Address = 3;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->address(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
}

::google::protobuf::uint8* HeadOrganizationPropertiesToUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
  // optional .Diadoc.Api.Proto.StringValue Kpp = 1;
  if (has_kpp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->kpp(), target);
  }

  // optional .Diadoc.Api.Proto.StringValue FullName = 2;
  if (has_fullname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fullname(), target);
  }

  // optional .Diadoc.Api.Proto.Address Address = 3;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->address(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.HeadOrganizationPropertiesToUpdate)
  return target;
}

int HeadOrganizationPropertiesToUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Diadoc.Api.Proto.StringValue Kpp = 1;
    if (has_kpp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->kpp());
    }

    // optional .Diadoc.Api.Proto.StringValue FullName = 2;
    if (has_fullname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fullname());
    }

    // optional .Diadoc.Api.Proto.Address Address = 3;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->address());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeadOrganizationPropertiesToUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeadOrganizationPropertiesToUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeadOrganizationPropertiesToUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeadOrganizationPropertiesToUpdate::MergeFrom(const HeadOrganizationPropertiesToUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kpp()) {
      mutable_kpp()->::Diadoc::Api::Proto::StringValue::MergeFrom(from.kpp());
    }
    if (from.has_fullname()) {
      mutable_fullname()->::Diadoc::Api::Proto::StringValue::MergeFrom(from.fullname());
    }
    if (from.has_address()) {
      mutable_address()->::Diadoc::Api::Proto::Address::MergeFrom(from.address());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeadOrganizationPropertiesToUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeadOrganizationPropertiesToUpdate::CopyFrom(const HeadOrganizationPropertiesToUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeadOrganizationPropertiesToUpdate::IsInitialized() const {

  if (has_address()) {
    if (!this->address().IsInitialized()) return false;
  }
  return true;
}

void HeadOrganizationPropertiesToUpdate::Swap(HeadOrganizationPropertiesToUpdate* other) {
  if (other != this) {
    std::swap(kpp_, other->kpp_);
    std::swap(fullname_, other->fullname_);
    std::swap(address_, other->address_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeadOrganizationPropertiesToUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeadOrganizationPropertiesToUpdate_descriptor_;
  metadata.reflection = HeadOrganizationPropertiesToUpdate_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
