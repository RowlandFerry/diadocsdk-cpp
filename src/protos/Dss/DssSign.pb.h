// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Dss/DssSign.proto

#ifndef PROTOBUF_Dss_2fDssSign_2eproto__INCLUDED
#define PROTOBUF_Dss_2fDssSign_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Content_v3.pb.h"
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Dss {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Dss_2fDssSign_2eproto();
void protobuf_AssignDesc_Dss_2fDssSign_2eproto();
void protobuf_ShutdownFile_Dss_2fDssSign_2eproto();

class DssSignRequest;
class DssSignFile;
class DssSignResult;
class DssFileSigningResult;

enum DssConfirmType {
  ConfirmTypeUnknown = -1,
  None = 0,
  Sms = 1,
  MyDss = 2,
  Applet = 3,
  MobileSdk = 4
};
bool DssConfirmType_IsValid(int value);
const DssConfirmType DssConfirmType_MIN = ConfirmTypeUnknown;
const DssConfirmType DssConfirmType_MAX = MobileSdk;
const int DssConfirmType_ARRAYSIZE = DssConfirmType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DssConfirmType_descriptor();
inline const ::std::string& DssConfirmType_Name(DssConfirmType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DssConfirmType_descriptor(), value);
}
inline bool DssConfirmType_Parse(
    const ::std::string& name, DssConfirmType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DssConfirmType>(
    DssConfirmType_descriptor(), name, value);
}
enum DssOperator {
  OperatorUnknown = 0,
  Megafon = 1,
  Kontur = 2
};
bool DssOperator_IsValid(int value);
const DssOperator DssOperator_MIN = OperatorUnknown;
const DssOperator DssOperator_MAX = Kontur;
const int DssOperator_ARRAYSIZE = DssOperator_MAX + 1;

const ::google::protobuf::EnumDescriptor* DssOperator_descriptor();
inline const ::std::string& DssOperator_Name(DssOperator value) {
  return ::google::protobuf::internal::NameOfEnum(
    DssOperator_descriptor(), value);
}
inline bool DssOperator_Parse(
    const ::std::string& name, DssOperator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DssOperator>(
    DssOperator_descriptor(), name, value);
}
enum DssFileSigningStatus {
  UnknownSigningStatus = 0,
  SigningCompleted = 1,
  SigningError = 2
};
bool DssFileSigningStatus_IsValid(int value);
const DssFileSigningStatus DssFileSigningStatus_MIN = UnknownSigningStatus;
const DssFileSigningStatus DssFileSigningStatus_MAX = SigningError;
const int DssFileSigningStatus_ARRAYSIZE = DssFileSigningStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* DssFileSigningStatus_descriptor();
inline const ::std::string& DssFileSigningStatus_Name(DssFileSigningStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    DssFileSigningStatus_descriptor(), value);
}
inline bool DssFileSigningStatus_Parse(
    const ::std::string& name, DssFileSigningStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DssFileSigningStatus>(
    DssFileSigningStatus_descriptor(), name, value);
}
enum DssOperationStatus {
  Unknown = 0,
  InProgress = 1,
  Completed = 2,
  CanceledByUser = 3,
  Timeout = 4,
  Crashed = 5,
  UserHasUnconfirmedOperation = 6,
  OperationRetryRequired = 7
};
bool DssOperationStatus_IsValid(int value);
const DssOperationStatus DssOperationStatus_MIN = Unknown;
const DssOperationStatus DssOperationStatus_MAX = OperationRetryRequired;
const int DssOperationStatus_ARRAYSIZE = DssOperationStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* DssOperationStatus_descriptor();
inline const ::std::string& DssOperationStatus_Name(DssOperationStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    DssOperationStatus_descriptor(), value);
}
inline bool DssOperationStatus_Parse(
    const ::std::string& name, DssOperationStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DssOperationStatus>(
    DssOperationStatus_descriptor(), name, value);
}
// ===================================================================

class DssSignRequest : public ::google::protobuf::Message {
 public:
  DssSignRequest();
  virtual ~DssSignRequest();

  DssSignRequest(const DssSignRequest& from);

  inline DssSignRequest& operator=(const DssSignRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DssSignRequest& default_instance();

  void Swap(DssSignRequest* other);

  // implements Message ----------------------------------------------

  DssSignRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DssSignRequest& from);
  void MergeFrom(const DssSignRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Diadoc.Api.Proto.Dss.DssSignFile Files = 1;
  inline int files_size() const;
  inline void clear_files();
  static const int kFilesFieldNumber = 1;
  inline const ::Diadoc::Api::Proto::Dss::DssSignFile& files(int index) const;
  inline ::Diadoc::Api::Proto::Dss::DssSignFile* mutable_files(int index);
  inline ::Diadoc::Api::Proto::Dss::DssSignFile* add_files();
  inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssSignFile >&
      files() const;
  inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssSignFile >*
      mutable_files();

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Dss.DssSignRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssSignFile > files_;
  friend void  protobuf_AddDesc_Dss_2fDssSign_2eproto();
  friend void protobuf_AssignDesc_Dss_2fDssSign_2eproto();
  friend void protobuf_ShutdownFile_Dss_2fDssSign_2eproto();

  void InitAsDefaultInstance();
  static DssSignRequest* default_instance_;
};
// -------------------------------------------------------------------

class DssSignFile : public ::google::protobuf::Message {
 public:
  DssSignFile();
  virtual ~DssSignFile();

  DssSignFile(const DssSignFile& from);

  inline DssSignFile& operator=(const DssSignFile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DssSignFile& default_instance();

  void Swap(DssSignFile* other);

  // implements Message ----------------------------------------------

  DssSignFile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DssSignFile& from);
  void MergeFrom(const DssSignFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Diadoc.Api.Proto.Content_v3 Content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::Diadoc::Api::Proto::Content_v3& content() const;
  inline ::Diadoc::Api::Proto::Content_v3* mutable_content();
  inline ::Diadoc::Api::Proto::Content_v3* release_content();
  inline void set_allocated_content(::Diadoc::Api::Proto::Content_v3* content);

  // optional string FileName = 2;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 2;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Dss.DssSignFile)
 private:
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Diadoc::Api::Proto::Content_v3* content_;
  ::std::string* filename_;
  friend void  protobuf_AddDesc_Dss_2fDssSign_2eproto();
  friend void protobuf_AssignDesc_Dss_2fDssSign_2eproto();
  friend void protobuf_ShutdownFile_Dss_2fDssSign_2eproto();

  void InitAsDefaultInstance();
  static DssSignFile* default_instance_;
};
// -------------------------------------------------------------------

class DssSignResult : public ::google::protobuf::Message {
 public:
  DssSignResult();
  virtual ~DssSignResult();

  DssSignResult(const DssSignResult& from);

  inline DssSignResult& operator=(const DssSignResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DssSignResult& default_instance();

  void Swap(DssSignResult* other);

  // implements Message ----------------------------------------------

  DssSignResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DssSignResult& from);
  void MergeFrom(const DssSignResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Diadoc.Api.Proto.Dss.DssOperationStatus OperationStatus = 1 [default = Unknown];
  inline bool has_operationstatus() const;
  inline void clear_operationstatus();
  static const int kOperationStatusFieldNumber = 1;
  inline ::Diadoc::Api::Proto::Dss::DssOperationStatus operationstatus() const;
  inline void set_operationstatus(::Diadoc::Api::Proto::Dss::DssOperationStatus value);

  // repeated .Diadoc.Api.Proto.Dss.DssFileSigningResult FileSigningResults = 2;
  inline int filesigningresults_size() const;
  inline void clear_filesigningresults();
  static const int kFileSigningResultsFieldNumber = 2;
  inline const ::Diadoc::Api::Proto::Dss::DssFileSigningResult& filesigningresults(int index) const;
  inline ::Diadoc::Api::Proto::Dss::DssFileSigningResult* mutable_filesigningresults(int index);
  inline ::Diadoc::Api::Proto::Dss::DssFileSigningResult* add_filesigningresults();
  inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssFileSigningResult >&
      filesigningresults() const;
  inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssFileSigningResult >*
      mutable_filesigningresults();

  // optional .Diadoc.Api.Proto.Dss.DssConfirmType ConfirmType = 3 [default = ConfirmTypeUnknown];
  inline bool has_confirmtype() const;
  inline void clear_confirmtype();
  static const int kConfirmTypeFieldNumber = 3;
  inline ::Diadoc::Api::Proto::Dss::DssConfirmType confirmtype() const;
  inline void set_confirmtype(::Diadoc::Api::Proto::Dss::DssConfirmType value);

  // optional .Diadoc.Api.Proto.Dss.DssOperator Operator = 4 [default = OperatorUnknown];
  inline bool has_operator_() const;
  inline void clear_operator_();
  static const int kOperatorFieldNumber = 4;
  inline ::Diadoc::Api::Proto::Dss::DssOperator operator_() const;
  inline void set_operator_(::Diadoc::Api::Proto::Dss::DssOperator value);

  // optional string PhoneLastNumbers = 5;
  inline bool has_phonelastnumbers() const;
  inline void clear_phonelastnumbers();
  static const int kPhoneLastNumbersFieldNumber = 5;
  inline const ::std::string& phonelastnumbers() const;
  inline void set_phonelastnumbers(const ::std::string& value);
  inline void set_phonelastnumbers(const char* value);
  inline void set_phonelastnumbers(const char* value, size_t size);
  inline ::std::string* mutable_phonelastnumbers();
  inline ::std::string* release_phonelastnumbers();
  inline void set_allocated_phonelastnumbers(::std::string* phonelastnumbers);

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Dss.DssSignResult)
 private:
  inline void set_has_operationstatus();
  inline void clear_has_operationstatus();
  inline void set_has_confirmtype();
  inline void clear_has_confirmtype();
  inline void set_has_operator_();
  inline void clear_has_operator_();
  inline void set_has_phonelastnumbers();
  inline void clear_has_phonelastnumbers();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssFileSigningResult > filesigningresults_;
  int operationstatus_;
  int confirmtype_;
  ::std::string* phonelastnumbers_;
  int operator__;
  friend void  protobuf_AddDesc_Dss_2fDssSign_2eproto();
  friend void protobuf_AssignDesc_Dss_2fDssSign_2eproto();
  friend void protobuf_ShutdownFile_Dss_2fDssSign_2eproto();

  void InitAsDefaultInstance();
  static DssSignResult* default_instance_;
};
// -------------------------------------------------------------------

class DssFileSigningResult : public ::google::protobuf::Message {
 public:
  DssFileSigningResult();
  virtual ~DssFileSigningResult();

  DssFileSigningResult(const DssFileSigningResult& from);

  inline DssFileSigningResult& operator=(const DssFileSigningResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DssFileSigningResult& default_instance();

  void Swap(DssFileSigningResult* other);

  // implements Message ----------------------------------------------

  DssFileSigningResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DssFileSigningResult& from);
  void MergeFrom(const DssFileSigningResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Diadoc.Api.Proto.Dss.DssFileSigningStatus FileSigningStatus = 1 [default = UnknownSigningStatus];
  inline bool has_filesigningstatus() const;
  inline void clear_filesigningstatus();
  static const int kFileSigningStatusFieldNumber = 1;
  inline ::Diadoc::Api::Proto::Dss::DssFileSigningStatus filesigningstatus() const;
  inline void set_filesigningstatus(::Diadoc::Api::Proto::Dss::DssFileSigningStatus value);

  // optional bytes Signature = 2;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 2;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const void* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Dss.DssFileSigningResult)
 private:
  inline void set_has_filesigningstatus();
  inline void clear_has_filesigningstatus();
  inline void set_has_signature();
  inline void clear_has_signature();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* signature_;
  int filesigningstatus_;
  friend void  protobuf_AddDesc_Dss_2fDssSign_2eproto();
  friend void protobuf_AssignDesc_Dss_2fDssSign_2eproto();
  friend void protobuf_ShutdownFile_Dss_2fDssSign_2eproto();

  void InitAsDefaultInstance();
  static DssFileSigningResult* default_instance_;
};
// ===================================================================


// ===================================================================

// DssSignRequest

// repeated .Diadoc.Api.Proto.Dss.DssSignFile Files = 1;
inline int DssSignRequest::files_size() const {
  return files_.size();
}
inline void DssSignRequest::clear_files() {
  files_.Clear();
}
inline const ::Diadoc::Api::Proto::Dss::DssSignFile& DssSignRequest::files(int index) const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssSignRequest.Files)
  return files_.Get(index);
}
inline ::Diadoc::Api::Proto::Dss::DssSignFile* DssSignRequest::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.Dss.DssSignRequest.Files)
  return files_.Mutable(index);
}
inline ::Diadoc::Api::Proto::Dss::DssSignFile* DssSignRequest::add_files() {
  // @@protoc_insertion_point(field_add:Diadoc.Api.Proto.Dss.DssSignRequest.Files)
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssSignFile >&
DssSignRequest::files() const {
  // @@protoc_insertion_point(field_list:Diadoc.Api.Proto.Dss.DssSignRequest.Files)
  return files_;
}
inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssSignFile >*
DssSignRequest::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:Diadoc.Api.Proto.Dss.DssSignRequest.Files)
  return &files_;
}

// -------------------------------------------------------------------

// DssSignFile

// required .Diadoc.Api.Proto.Content_v3 Content = 1;
inline bool DssSignFile::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DssSignFile::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DssSignFile::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DssSignFile::clear_content() {
  if (content_ != NULL) content_->::Diadoc::Api::Proto::Content_v3::Clear();
  clear_has_content();
}
inline const ::Diadoc::Api::Proto::Content_v3& DssSignFile::content() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssSignFile.Content)
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::Diadoc::Api::Proto::Content_v3* DssSignFile::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::Diadoc::Api::Proto::Content_v3;
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.Dss.DssSignFile.Content)
  return content_;
}
inline ::Diadoc::Api::Proto::Content_v3* DssSignFile::release_content() {
  clear_has_content();
  ::Diadoc::Api::Proto::Content_v3* temp = content_;
  content_ = NULL;
  return temp;
}
inline void DssSignFile::set_allocated_content(::Diadoc::Api::Proto::Content_v3* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.Dss.DssSignFile.Content)
}

// optional string FileName = 2;
inline bool DssSignFile::has_filename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DssSignFile::set_has_filename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DssSignFile::clear_has_filename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DssSignFile::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& DssSignFile::filename() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssSignFile.FileName)
  return *filename_;
}
inline void DssSignFile::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.Dss.DssSignFile.FileName)
}
inline void DssSignFile::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Diadoc.Api.Proto.Dss.DssSignFile.FileName)
}
inline void DssSignFile::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Diadoc.Api.Proto.Dss.DssSignFile.FileName)
}
inline ::std::string* DssSignFile::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.Dss.DssSignFile.FileName)
  return filename_;
}
inline ::std::string* DssSignFile::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DssSignFile::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.Dss.DssSignFile.FileName)
}

// -------------------------------------------------------------------

// DssSignResult

// optional .Diadoc.Api.Proto.Dss.DssOperationStatus OperationStatus = 1 [default = Unknown];
inline bool DssSignResult::has_operationstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DssSignResult::set_has_operationstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DssSignResult::clear_has_operationstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DssSignResult::clear_operationstatus() {
  operationstatus_ = 0;
  clear_has_operationstatus();
}
inline ::Diadoc::Api::Proto::Dss::DssOperationStatus DssSignResult::operationstatus() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssSignResult.OperationStatus)
  return static_cast< ::Diadoc::Api::Proto::Dss::DssOperationStatus >(operationstatus_);
}
inline void DssSignResult::set_operationstatus(::Diadoc::Api::Proto::Dss::DssOperationStatus value) {
  assert(::Diadoc::Api::Proto::Dss::DssOperationStatus_IsValid(value));
  set_has_operationstatus();
  operationstatus_ = value;
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.Dss.DssSignResult.OperationStatus)
}

// repeated .Diadoc.Api.Proto.Dss.DssFileSigningResult FileSigningResults = 2;
inline int DssSignResult::filesigningresults_size() const {
  return filesigningresults_.size();
}
inline void DssSignResult::clear_filesigningresults() {
  filesigningresults_.Clear();
}
inline const ::Diadoc::Api::Proto::Dss::DssFileSigningResult& DssSignResult::filesigningresults(int index) const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssSignResult.FileSigningResults)
  return filesigningresults_.Get(index);
}
inline ::Diadoc::Api::Proto::Dss::DssFileSigningResult* DssSignResult::mutable_filesigningresults(int index) {
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.Dss.DssSignResult.FileSigningResults)
  return filesigningresults_.Mutable(index);
}
inline ::Diadoc::Api::Proto::Dss::DssFileSigningResult* DssSignResult::add_filesigningresults() {
  // @@protoc_insertion_point(field_add:Diadoc.Api.Proto.Dss.DssSignResult.FileSigningResults)
  return filesigningresults_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssFileSigningResult >&
DssSignResult::filesigningresults() const {
  // @@protoc_insertion_point(field_list:Diadoc.Api.Proto.Dss.DssSignResult.FileSigningResults)
  return filesigningresults_;
}
inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::Dss::DssFileSigningResult >*
DssSignResult::mutable_filesigningresults() {
  // @@protoc_insertion_point(field_mutable_list:Diadoc.Api.Proto.Dss.DssSignResult.FileSigningResults)
  return &filesigningresults_;
}

// optional .Diadoc.Api.Proto.Dss.DssConfirmType ConfirmType = 3 [default = ConfirmTypeUnknown];
inline bool DssSignResult::has_confirmtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DssSignResult::set_has_confirmtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DssSignResult::clear_has_confirmtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DssSignResult::clear_confirmtype() {
  confirmtype_ = -1;
  clear_has_confirmtype();
}
inline ::Diadoc::Api::Proto::Dss::DssConfirmType DssSignResult::confirmtype() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssSignResult.ConfirmType)
  return static_cast< ::Diadoc::Api::Proto::Dss::DssConfirmType >(confirmtype_);
}
inline void DssSignResult::set_confirmtype(::Diadoc::Api::Proto::Dss::DssConfirmType value) {
  assert(::Diadoc::Api::Proto::Dss::DssConfirmType_IsValid(value));
  set_has_confirmtype();
  confirmtype_ = value;
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.Dss.DssSignResult.ConfirmType)
}

// optional .Diadoc.Api.Proto.Dss.DssOperator Operator = 4 [default = OperatorUnknown];
inline bool DssSignResult::has_operator_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DssSignResult::set_has_operator_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DssSignResult::clear_has_operator_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DssSignResult::clear_operator_() {
  operator__ = 0;
  clear_has_operator_();
}
inline ::Diadoc::Api::Proto::Dss::DssOperator DssSignResult::operator_() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssSignResult.Operator)
  return static_cast< ::Diadoc::Api::Proto::Dss::DssOperator >(operator__);
}
inline void DssSignResult::set_operator_(::Diadoc::Api::Proto::Dss::DssOperator value) {
  assert(::Diadoc::Api::Proto::Dss::DssOperator_IsValid(value));
  set_has_operator_();
  operator__ = value;
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.Dss.DssSignResult.Operator)
}

// optional string PhoneLastNumbers = 5;
inline bool DssSignResult::has_phonelastnumbers() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DssSignResult::set_has_phonelastnumbers() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DssSignResult::clear_has_phonelastnumbers() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DssSignResult::clear_phonelastnumbers() {
  if (phonelastnumbers_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonelastnumbers_->clear();
  }
  clear_has_phonelastnumbers();
}
inline const ::std::string& DssSignResult::phonelastnumbers() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssSignResult.PhoneLastNumbers)
  return *phonelastnumbers_;
}
inline void DssSignResult::set_phonelastnumbers(const ::std::string& value) {
  set_has_phonelastnumbers();
  if (phonelastnumbers_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonelastnumbers_ = new ::std::string;
  }
  phonelastnumbers_->assign(value);
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.Dss.DssSignResult.PhoneLastNumbers)
}
inline void DssSignResult::set_phonelastnumbers(const char* value) {
  set_has_phonelastnumbers();
  if (phonelastnumbers_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonelastnumbers_ = new ::std::string;
  }
  phonelastnumbers_->assign(value);
  // @@protoc_insertion_point(field_set_char:Diadoc.Api.Proto.Dss.DssSignResult.PhoneLastNumbers)
}
inline void DssSignResult::set_phonelastnumbers(const char* value, size_t size) {
  set_has_phonelastnumbers();
  if (phonelastnumbers_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonelastnumbers_ = new ::std::string;
  }
  phonelastnumbers_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Diadoc.Api.Proto.Dss.DssSignResult.PhoneLastNumbers)
}
inline ::std::string* DssSignResult::mutable_phonelastnumbers() {
  set_has_phonelastnumbers();
  if (phonelastnumbers_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonelastnumbers_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.Dss.DssSignResult.PhoneLastNumbers)
  return phonelastnumbers_;
}
inline ::std::string* DssSignResult::release_phonelastnumbers() {
  clear_has_phonelastnumbers();
  if (phonelastnumbers_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonelastnumbers_;
    phonelastnumbers_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DssSignResult::set_allocated_phonelastnumbers(::std::string* phonelastnumbers) {
  if (phonelastnumbers_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonelastnumbers_;
  }
  if (phonelastnumbers) {
    set_has_phonelastnumbers();
    phonelastnumbers_ = phonelastnumbers;
  } else {
    clear_has_phonelastnumbers();
    phonelastnumbers_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.Dss.DssSignResult.PhoneLastNumbers)
}

// -------------------------------------------------------------------

// DssFileSigningResult

// optional .Diadoc.Api.Proto.Dss.DssFileSigningStatus FileSigningStatus = 1 [default = UnknownSigningStatus];
inline bool DssFileSigningResult::has_filesigningstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DssFileSigningResult::set_has_filesigningstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DssFileSigningResult::clear_has_filesigningstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DssFileSigningResult::clear_filesigningstatus() {
  filesigningstatus_ = 0;
  clear_has_filesigningstatus();
}
inline ::Diadoc::Api::Proto::Dss::DssFileSigningStatus DssFileSigningResult::filesigningstatus() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssFileSigningResult.FileSigningStatus)
  return static_cast< ::Diadoc::Api::Proto::Dss::DssFileSigningStatus >(filesigningstatus_);
}
inline void DssFileSigningResult::set_filesigningstatus(::Diadoc::Api::Proto::Dss::DssFileSigningStatus value) {
  assert(::Diadoc::Api::Proto::Dss::DssFileSigningStatus_IsValid(value));
  set_has_filesigningstatus();
  filesigningstatus_ = value;
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.Dss.DssFileSigningResult.FileSigningStatus)
}

// optional bytes Signature = 2;
inline bool DssFileSigningResult::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DssFileSigningResult::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DssFileSigningResult::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DssFileSigningResult::clear_signature() {
  if (signature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& DssFileSigningResult::signature() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Dss.DssFileSigningResult.Signature)
  return *signature_;
}
inline void DssFileSigningResult::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.Dss.DssFileSigningResult.Signature)
}
inline void DssFileSigningResult::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
  // @@protoc_insertion_point(field_set_char:Diadoc.Api.Proto.Dss.DssFileSigningResult.Signature)
}
inline void DssFileSigningResult::set_signature(const void* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Diadoc.Api.Proto.Dss.DssFileSigningResult.Signature)
}
inline ::std::string* DssFileSigningResult::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.Dss.DssFileSigningResult.Signature)
  return signature_;
}
inline ::std::string* DssFileSigningResult::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DssFileSigningResult::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.Dss.DssFileSigningResult.Signature)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Dss
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Diadoc::Api::Proto::Dss::DssConfirmType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Diadoc::Api::Proto::Dss::DssConfirmType>() {
  return ::Diadoc::Api::Proto::Dss::DssConfirmType_descriptor();
}
template <> struct is_proto_enum< ::Diadoc::Api::Proto::Dss::DssOperator> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Diadoc::Api::Proto::Dss::DssOperator>() {
  return ::Diadoc::Api::Proto::Dss::DssOperator_descriptor();
}
template <> struct is_proto_enum< ::Diadoc::Api::Proto::Dss::DssFileSigningStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Diadoc::Api::Proto::Dss::DssFileSigningStatus>() {
  return ::Diadoc::Api::Proto::Dss::DssFileSigningStatus_descriptor();
}
template <> struct is_proto_enum< ::Diadoc::Api::Proto::Dss::DssOperationStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Diadoc::Api::Proto::Dss::DssOperationStatus>() {
  return ::Diadoc::Api::Proto::Dss::DssOperationStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Dss_2fDssSign_2eproto__INCLUDED
