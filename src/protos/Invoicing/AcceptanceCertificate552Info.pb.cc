// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Invoicing/AcceptanceCertificate552Info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Invoicing/AcceptanceCertificate552Info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Invoicing {

namespace {

const ::google::protobuf::Descriptor* AcceptanceCertificate552SellerTitleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptanceCertificate552SellerTitleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptanceCertificate552TransferInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptanceCertificate552TransferInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptanceCertificate552WorkDescription_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptanceCertificate552WorkDescription_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptanceCertificate552WorkItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptanceCertificate552WorkItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptanceCertificate552BuyerTitleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptanceCertificate552BuyerTitleInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto() {
  protobuf_AddDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Invoicing/AcceptanceCertificate552Info.proto");
  GOOGLE_CHECK(file != NULL);
  AcceptanceCertificate552SellerTitleInfo_descriptor_ = file->message_type(0);
  static const int AcceptanceCertificate552SellerTitleInfo_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, seller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, buyer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, signers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, grounds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, currencyrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, works_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, documentdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, documentnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, revisiondate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, revisionnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, documentcreator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, documentcreatorbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, operationtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, operationtitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, governmentcontractinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, additionalinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, documentname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, transferinfo_),
  };
  AcceptanceCertificate552SellerTitleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AcceptanceCertificate552SellerTitleInfo_descriptor_,
      AcceptanceCertificate552SellerTitleInfo::default_instance_,
      AcceptanceCertificate552SellerTitleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552SellerTitleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AcceptanceCertificate552SellerTitleInfo));
  AcceptanceCertificate552TransferInfo_descriptor_ = file->message_type(1);
  static const int AcceptanceCertificate552TransferInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552TransferInfo, operationinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552TransferInfo, transferdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552TransferInfo, createdthingtransferdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552TransferInfo, createdthinginfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552TransferInfo, additionalinfos_),
  };
  AcceptanceCertificate552TransferInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AcceptanceCertificate552TransferInfo_descriptor_,
      AcceptanceCertificate552TransferInfo::default_instance_,
      AcceptanceCertificate552TransferInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552TransferInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552TransferInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AcceptanceCertificate552TransferInfo));
  AcceptanceCertificate552WorkDescription_descriptor_ = file->message_type(2);
  static const int AcceptanceCertificate552WorkDescription_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkDescription, startingdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkDescription, completiondate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkDescription, totalwithvatexcluded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkDescription, totalvat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkDescription, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkDescription, items_),
  };
  AcceptanceCertificate552WorkDescription_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AcceptanceCertificate552WorkDescription_descriptor_,
      AcceptanceCertificate552WorkDescription::default_instance_,
      AcceptanceCertificate552WorkDescription_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkDescription, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkDescription, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AcceptanceCertificate552WorkDescription));
  AcceptanceCertificate552WorkItem_descriptor_ = file->message_type(3);
  static const int AcceptanceCertificate552WorkItem_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, unitcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, unitname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, subtotalwithvatexcluded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, vat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, subtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, additionalinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, taxrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, itemaccountdebit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, itemaccountcredit_),
  };
  AcceptanceCertificate552WorkItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AcceptanceCertificate552WorkItem_descriptor_,
      AcceptanceCertificate552WorkItem::default_instance_,
      AcceptanceCertificate552WorkItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552WorkItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AcceptanceCertificate552WorkItem));
  AcceptanceCertificate552BuyerTitleInfo_descriptor_ = file->message_type(4);
  static const int AcceptanceCertificate552BuyerTitleInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, signers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, documentcreator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, documentcreatorbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, operationtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, operationcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, acceptancedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, createdthingacceptdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, createdthinginfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, additionalinfoid_),
  };
  AcceptanceCertificate552BuyerTitleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AcceptanceCertificate552BuyerTitleInfo_descriptor_,
      AcceptanceCertificate552BuyerTitleInfo::default_instance_,
      AcceptanceCertificate552BuyerTitleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptanceCertificate552BuyerTitleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AcceptanceCertificate552BuyerTitleInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AcceptanceCertificate552SellerTitleInfo_descriptor_, &AcceptanceCertificate552SellerTitleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AcceptanceCertificate552TransferInfo_descriptor_, &AcceptanceCertificate552TransferInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AcceptanceCertificate552WorkDescription_descriptor_, &AcceptanceCertificate552WorkDescription::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AcceptanceCertificate552WorkItem_descriptor_, &AcceptanceCertificate552WorkItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AcceptanceCertificate552BuyerTitleInfo_descriptor_, &AcceptanceCertificate552BuyerTitleInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Invoicing_2fAcceptanceCertificate552Info_2eproto() {
  delete AcceptanceCertificate552SellerTitleInfo::default_instance_;
  delete AcceptanceCertificate552SellerTitleInfo_reflection_;
  delete AcceptanceCertificate552TransferInfo::default_instance_;
  delete AcceptanceCertificate552TransferInfo_reflection_;
  delete AcceptanceCertificate552WorkDescription::default_instance_;
  delete AcceptanceCertificate552WorkDescription_reflection_;
  delete AcceptanceCertificate552WorkItem::default_instance_;
  delete AcceptanceCertificate552WorkItem_reflection_;
  delete AcceptanceCertificate552BuyerTitleInfo::default_instance_;
  delete AcceptanceCertificate552BuyerTitleInfo_reflection_;
}

void protobuf_AddDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::Invoicing::protobuf_AddDesc_Invoicing_2fInvoiceInfo_2eproto();
  ::Diadoc::Api::Proto::Invoicing::Signers::protobuf_AddDesc_Invoicing_2fExtendedSigner_2eproto();
  ::Diadoc::Api::Proto::Invoicing::Organizations::protobuf_AddDesc_Invoicing_2fExtendedOrganizationInfo_2eproto();
  ::Diadoc::Api::Proto::Invoicing::protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  ::Diadoc::Api::Proto::Invoicing::protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n,Invoicing/AcceptanceCertificate552Info"
    ".proto\022\032Diadoc.Api.Proto.Invoicing\032\033Invo"
    "icing/InvoiceInfo.proto\032\036Invoicing/Exten"
    "dedSigner.proto\032(Invoicing/ExtendedOrgan"
    "izationInfo.proto\032-Invoicing/UniversalTr"
    "ansferDocumentInfo.proto\032\033Invoicing/TovT"
    "orgInfo.proto\"\341\006\n\'AcceptanceCertificate5"
    "52SellerTitleInfo\022R\n\006Seller\030\001 \002(\0132B.Diad"
    "oc.Api.Proto.Invoicing.Organizations.Ext"
    "endedOrganizationInfo\022Q\n\005Buyer\030\002 \002(\0132B.D"
    "iadoc.Api.Proto.Invoicing.Organizations."
    "ExtendedOrganizationInfo\022C\n\007Signers\030\003 \003("
    "\01322.Diadoc.Api.Proto.Invoicing.Signers.E"
    "xtendedSigner\0227\n\007Grounds\030\004 \003(\0132&.Diadoc."
    "Api.Proto.Invoicing.GroundInfo\022\020\n\010Curren"
    "cy\030\005 \002(\t\022\024\n\014CurrencyRate\030\006 \001(\t\022R\n\005Works\030"
    "\007 \003(\0132C.Diadoc.Api.Proto.Invoicing.Accep"
    "tanceCertificate552WorkDescription\022\024\n\014Do"
    "cumentDate\030\010 \002(\t\022\026\n\016DocumentNumber\030\t \001(\t"
    "\022\024\n\014RevisionDate\030\n \001(\t\022\026\n\016RevisionNumber"
    "\030\013 \001(\t\022\027\n\017DocumentCreator\030\014 \002(\t\022\033\n\023Docum"
    "entCreatorBase\030\r \001(\t\022\025\n\rOperationType\030\016 "
    "\001(\t\022\026\n\016OperationTitle\030\017 \001(\t\022\036\n\026Governmen"
    "tContractInfo\030\020 \001(\t\022F\n\020AdditionalInfoId\030"
    "\021 \001(\0132,.Diadoc.Api.Proto.Invoicing.Addit"
    "ionalInfoId\022\024\n\014DocumentName\030\022 \002(\t\022V\n\014Tra"
    "nsferInfo\030\023 \002(\0132@.Diadoc.Api.Proto.Invoi"
    "cing.AcceptanceCertificate552TransferInf"
    "o\"\324\001\n$AcceptanceCertificate552TransferIn"
    "fo\022\025\n\rOperationInfo\030\001 \002(\t\022\024\n\014TransferDat"
    "e\030\002 \001(\t\022 \n\030CreatedThingTransferDate\030\003 \001("
    "\t\022\030\n\020CreatedThingInfo\030\004 \001(\t\022C\n\017Additiona"
    "lInfos\030\005 \003(\0132*.Diadoc.Api.Proto.Invoicin"
    "g.AdditionalInfo\"\343\001\n\'AcceptanceCertifica"
    "te552WorkDescription\022\024\n\014StartingDate\030\001 \001"
    "(\t\022\026\n\016CompletionDate\030\002 \001(\t\022\034\n\024TotalWithV"
    "atExcluded\030\003 \001(\t\022\020\n\010TotalVat\030\004 \001(\t\022\r\n\005To"
    "tal\030\005 \002(\t\022K\n\005Items\030\006 \003(\0132<.Diadoc.Api.Pr"
    "oto.Invoicing.AcceptanceCertificate552Wo"
    "rkItem\"\206\003\n AcceptanceCertificate552WorkI"
    "tem\022\014\n\004Name\030\001 \001(\t\022\023\n\013Description\030\002 \001(\t\022\020"
    "\n\010UnitCode\030\003 \001(\t\022\020\n\010UnitName\030\004 \001(\t\022\r\n\005Pr"
    "ice\030\005 \001(\t\022\020\n\010Quantity\030\006 \001(\t\022\037\n\027SubtotalW"
    "ithVatExcluded\030\007 \001(\t\022\013\n\003Vat\030\010 \001(\t\022\020\n\010Sub"
    "total\030\t \001(\t\022C\n\017AdditionalInfos\030\n \003(\0132*.D"
    "iadoc.Api.Proto.Invoicing.AdditionalInfo"
    "\022@\n\007TaxRate\030\013 \001(\0162#.Diadoc.Api.Proto.Inv"
    "oicing.TaxRate:\nPercent_18\022\030\n\020ItemAccoun"
    "tDebit\030\014 \001(\t\022\031\n\021ItemAccountCredit\030\r \001(\t\""
    "\356\002\n&AcceptanceCertificate552BuyerTitleIn"
    "fo\022C\n\007Signers\030\001 \003(\01322.Diadoc.Api.Proto.I"
    "nvoicing.Signers.ExtendedSigner\022\027\n\017Docum"
    "entCreator\030\002 \002(\t\022\033\n\023DocumentCreatorBase\030"
    "\003 \001(\t\022\025\n\rOperationType\030\004 \001(\t\022\030\n\020Operatio"
    "nContent\030\006 \002(\t\022\026\n\016AcceptanceDate\030\007 \001(\t\022\036"
    "\n\026CreatedThingAcceptDate\030\010 \001(\t\022\030\n\020Create"
    "dThingInfo\030\t \001(\t\022F\n\020AdditionalInfoId\030\n \001"
    "(\0132,.Diadoc.Api.Proto.Invoicing.Addition"
    "alInfoId", 2328);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Invoicing/AcceptanceCertificate552Info.proto", &protobuf_RegisterTypes);
  AcceptanceCertificate552SellerTitleInfo::default_instance_ = new AcceptanceCertificate552SellerTitleInfo();
  AcceptanceCertificate552TransferInfo::default_instance_ = new AcceptanceCertificate552TransferInfo();
  AcceptanceCertificate552WorkDescription::default_instance_ = new AcceptanceCertificate552WorkDescription();
  AcceptanceCertificate552WorkItem::default_instance_ = new AcceptanceCertificate552WorkItem();
  AcceptanceCertificate552BuyerTitleInfo::default_instance_ = new AcceptanceCertificate552BuyerTitleInfo();
  AcceptanceCertificate552SellerTitleInfo::default_instance_->InitAsDefaultInstance();
  AcceptanceCertificate552TransferInfo::default_instance_->InitAsDefaultInstance();
  AcceptanceCertificate552WorkDescription::default_instance_->InitAsDefaultInstance();
  AcceptanceCertificate552WorkItem::default_instance_->InitAsDefaultInstance();
  AcceptanceCertificate552BuyerTitleInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Invoicing_2fAcceptanceCertificate552Info_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Invoicing_2fAcceptanceCertificate552Info_2eproto {
  StaticDescriptorInitializer_Invoicing_2fAcceptanceCertificate552Info_2eproto() {
    protobuf_AddDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto();
  }
} static_descriptor_initializer_Invoicing_2fAcceptanceCertificate552Info_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AcceptanceCertificate552SellerTitleInfo::kSellerFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kBuyerFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kSignersFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kGroundsFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kCurrencyFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kCurrencyRateFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kWorksFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kDocumentDateFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kDocumentNumberFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kRevisionDateFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kRevisionNumberFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kDocumentCreatorFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kDocumentCreatorBaseFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kOperationTypeFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kOperationTitleFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kGovernmentContractInfoFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kAdditionalInfoIdFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kDocumentNameFieldNumber;
const int AcceptanceCertificate552SellerTitleInfo::kTransferInfoFieldNumber;
#endif  // !_MSC_VER

AcceptanceCertificate552SellerTitleInfo::AcceptanceCertificate552SellerTitleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
}

void AcceptanceCertificate552SellerTitleInfo::InitAsDefaultInstance() {
  seller_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  buyer_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  additionalinfoid_ = const_cast< ::Diadoc::Api::Proto::Invoicing::AdditionalInfoId*>(&::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::default_instance());
  transferinfo_ = const_cast< ::Diadoc::Api::Proto::Invoicing::AcceptanceCertificate552TransferInfo*>(&::Diadoc::Api::Proto::Invoicing::AcceptanceCertificate552TransferInfo::default_instance());
}

AcceptanceCertificate552SellerTitleInfo::AcceptanceCertificate552SellerTitleInfo(const AcceptanceCertificate552SellerTitleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
}

void AcceptanceCertificate552SellerTitleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  seller_ = NULL;
  buyer_ = NULL;
  currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyrate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revisiondate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revisionnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentcreator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentcreatorbase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  governmentcontractinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additionalinfoid_ = NULL;
  documentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptanceCertificate552SellerTitleInfo::~AcceptanceCertificate552SellerTitleInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
  SharedDtor();
}

void AcceptanceCertificate552SellerTitleInfo::SharedDtor() {
  if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currency_;
  }
  if (currencyrate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currencyrate_;
  }
  if (documentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentdate_;
  }
  if (documentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentnumber_;
  }
  if (revisiondate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revisiondate_;
  }
  if (revisionnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revisionnumber_;
  }
  if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreator_;
  }
  if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreatorbase_;
  }
  if (operationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationtype_;
  }
  if (operationtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationtitle_;
  }
  if (governmentcontractinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete governmentcontractinfo_;
  }
  if (documentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentname_;
  }
  if (this != default_instance_) {
    delete seller_;
    delete buyer_;
    delete additionalinfoid_;
    delete transferinfo_;
  }
}

void AcceptanceCertificate552SellerTitleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptanceCertificate552SellerTitleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptanceCertificate552SellerTitleInfo_descriptor_;
}

const AcceptanceCertificate552SellerTitleInfo& AcceptanceCertificate552SellerTitleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto();
  return *default_instance_;
}

AcceptanceCertificate552SellerTitleInfo* AcceptanceCertificate552SellerTitleInfo::default_instance_ = NULL;

AcceptanceCertificate552SellerTitleInfo* AcceptanceCertificate552SellerTitleInfo::New() const {
  return new AcceptanceCertificate552SellerTitleInfo;
}

void AcceptanceCertificate552SellerTitleInfo::Clear() {
  if (_has_bits_[0 / 32] & 179) {
    if (has_seller()) {
      if (seller_ != NULL) seller_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_buyer()) {
      if (buyer_ != NULL) buyer_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_currency()) {
      if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        currency_->clear();
      }
    }
    if (has_currencyrate()) {
      if (currencyrate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        currencyrate_->clear();
      }
    }
    if (has_documentdate()) {
      if (documentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentdate_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_documentnumber()) {
      if (documentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentnumber_->clear();
      }
    }
    if (has_revisiondate()) {
      if (revisiondate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revisiondate_->clear();
      }
    }
    if (has_revisionnumber()) {
      if (revisionnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revisionnumber_->clear();
      }
    }
    if (has_documentcreator()) {
      if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreator_->clear();
      }
    }
    if (has_documentcreatorbase()) {
      if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreatorbase_->clear();
      }
    }
    if (has_operationtype()) {
      if (operationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationtype_->clear();
      }
    }
    if (has_operationtitle()) {
      if (operationtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationtitle_->clear();
      }
    }
    if (has_governmentcontractinfo()) {
      if (governmentcontractinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        governmentcontractinfo_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 458752) {
    if (has_additionalinfoid()) {
      if (additionalinfoid_ != NULL) additionalinfoid_->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::Clear();
    }
    if (has_documentname()) {
      if (documentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentname_->clear();
      }
    }
    if (has_transferinfo()) {
      if (transferinfo_ != NULL) transferinfo_->::Diadoc::Api::Proto::Invoicing::AcceptanceCertificate552TransferInfo::Clear();
    }
  }
  signers_.Clear();
  grounds_.Clear();
  works_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AcceptanceCertificate552SellerTitleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seller()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Buyer;
        break;
      }

      // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 2;
      case 2: {
        if (tag == 18) {
         parse_Buyer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buyer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Signers;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 3;
      case 3: {
        if (tag == 26) {
         parse_Signers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Signers;
        if (input->ExpectTag(34)) goto parse_Grounds;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.GroundInfo Grounds = 4;
      case 4: {
        if (tag == 34) {
         parse_Grounds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grounds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Grounds;
        if (input->ExpectTag(42)) goto parse_Currency;
        break;
      }

      // required string Currency = 5;
      case 5: {
        if (tag == 42) {
         parse_Currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "currency");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_CurrencyRate;
        break;
      }

      // optional string CurrencyRate = 6;
      case 6: {
        if (tag == 50) {
         parse_CurrencyRate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currencyrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currencyrate().data(), this->currencyrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "currencyrate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Works;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription Works = 7;
      case 7: {
        if (tag == 58) {
         parse_Works:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_works()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Works;
        if (input->ExpectTag(66)) goto parse_DocumentDate;
        break;
      }

      // required string DocumentDate = 8;
      case 8: {
        if (tag == 66) {
         parse_DocumentDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentdate().data(), this->documentdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_DocumentNumber;
        break;
      }

      // optional string DocumentNumber = 9;
      case 9: {
        if (tag == 74) {
         parse_DocumentNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentnumber().data(), this->documentnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_RevisionDate;
        break;
      }

      // optional string RevisionDate = 10;
      case 10: {
        if (tag == 82) {
         parse_RevisionDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revisiondate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->revisiondate().data(), this->revisiondate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revisiondate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_RevisionNumber;
        break;
      }

      // optional string RevisionNumber = 11;
      case 11: {
        if (tag == 90) {
         parse_RevisionNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revisionnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->revisionnumber().data(), this->revisionnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revisionnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_DocumentCreator;
        break;
      }

      // required string DocumentCreator = 12;
      case 12: {
        if (tag == 98) {
         parse_DocumentCreator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreator().data(), this->documentcreator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_DocumentCreatorBase;
        break;
      }

      // optional string DocumentCreatorBase = 13;
      case 13: {
        if (tag == 106) {
         parse_DocumentCreatorBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreatorbase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreatorbase().data(), this->documentcreatorbase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreatorbase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_OperationType;
        break;
      }

      // optional string OperationType = 14;
      case 14: {
        if (tag == 114) {
         parse_OperationType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationtype().data(), this->operationtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_OperationTitle;
        break;
      }

      // optional string OperationTitle = 15;
      case 15: {
        if (tag == 122) {
         parse_OperationTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationtitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationtitle().data(), this->operationtitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationtitle");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_GovernmentContractInfo;
        break;
      }

      // optional string GovernmentContractInfo = 16;
      case 16: {
        if (tag == 130) {
         parse_GovernmentContractInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_governmentcontractinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->governmentcontractinfo().data(), this->governmentcontractinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "governmentcontractinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_AdditionalInfoId;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 17;
      case 17: {
        if (tag == 138) {
         parse_AdditionalInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_additionalinfoid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_DocumentName;
        break;
      }

      // required string DocumentName = 18;
      case 18: {
        if (tag == 146) {
         parse_DocumentName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentname().data(), this->documentname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_TransferInfo;
        break;
      }

      // required .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo TransferInfo = 19;
      case 19: {
        if (tag == 154) {
         parse_TransferInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transferinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
  return false;
#undef DO_
}

void AcceptanceCertificate552SellerTitleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 1;
  if (has_seller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->seller(), output);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 2;
  if (has_buyer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->buyer(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 3;
  for (int i = 0; i < this->signers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->signers(i), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.GroundInfo Grounds = 4;
  for (int i = 0; i < this->grounds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->grounds(i), output);
  }

  // required string Currency = 5;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->currency(), output);
  }

  // optional string CurrencyRate = 6;
  if (has_currencyrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currencyrate().data(), this->currencyrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currencyrate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->currencyrate(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription Works = 7;
  for (int i = 0; i < this->works_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->works(i), output);
  }

  // required string DocumentDate = 8;
  if (has_documentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentdate().data(), this->documentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->documentdate(), output);
  }

  // optional string DocumentNumber = 9;
  if (has_documentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentnumber().data(), this->documentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->documentnumber(), output);
  }

  // optional string RevisionDate = 10;
  if (has_revisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisiondate().data(), this->revisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisiondate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->revisiondate(), output);
  }

  // optional string RevisionNumber = 11;
  if (has_revisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisionnumber().data(), this->revisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisionnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->revisionnumber(), output);
  }

  // required string DocumentCreator = 12;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->documentcreator(), output);
  }

  // optional string DocumentCreatorBase = 13;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->documentcreatorbase(), output);
  }

  // optional string OperationType = 14;
  if (has_operationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtype().data(), this->operationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->operationtype(), output);
  }

  // optional string OperationTitle = 15;
  if (has_operationtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtitle().data(), this->operationtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->operationtitle(), output);
  }

  // optional string GovernmentContractInfo = 16;
  if (has_governmentcontractinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->governmentcontractinfo().data(), this->governmentcontractinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "governmentcontractinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->governmentcontractinfo(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 17;
  if (has_additionalinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->additionalinfoid(), output);
  }

  // required string DocumentName = 18;
  if (has_documentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentname().data(), this->documentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->documentname(), output);
  }

  // required .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo TransferInfo = 19;
  if (has_transferinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->transferinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
}

::google::protobuf::uint8* AcceptanceCertificate552SellerTitleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 1;
  if (has_seller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->seller(), target);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 2;
  if (has_buyer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->buyer(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 3;
  for (int i = 0; i < this->signers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->signers(i), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.GroundInfo Grounds = 4;
  for (int i = 0; i < this->grounds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->grounds(i), target);
  }

  // required string Currency = 5;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->currency(), target);
  }

  // optional string CurrencyRate = 6;
  if (has_currencyrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currencyrate().data(), this->currencyrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currencyrate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->currencyrate(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription Works = 7;
  for (int i = 0; i < this->works_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->works(i), target);
  }

  // required string DocumentDate = 8;
  if (has_documentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentdate().data(), this->documentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->documentdate(), target);
  }

  // optional string DocumentNumber = 9;
  if (has_documentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentnumber().data(), this->documentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->documentnumber(), target);
  }

  // optional string RevisionDate = 10;
  if (has_revisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisiondate().data(), this->revisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisiondate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->revisiondate(), target);
  }

  // optional string RevisionNumber = 11;
  if (has_revisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisionnumber().data(), this->revisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisionnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->revisionnumber(), target);
  }

  // required string DocumentCreator = 12;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->documentcreator(), target);
  }

  // optional string DocumentCreatorBase = 13;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->documentcreatorbase(), target);
  }

  // optional string OperationType = 14;
  if (has_operationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtype().data(), this->operationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->operationtype(), target);
  }

  // optional string OperationTitle = 15;
  if (has_operationtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtitle().data(), this->operationtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->operationtitle(), target);
  }

  // optional string GovernmentContractInfo = 16;
  if (has_governmentcontractinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->governmentcontractinfo().data(), this->governmentcontractinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "governmentcontractinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->governmentcontractinfo(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 17;
  if (has_additionalinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->additionalinfoid(), target);
  }

  // required string DocumentName = 18;
  if (has_documentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentname().data(), this->documentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->documentname(), target);
  }

  // required .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo TransferInfo = 19;
  if (has_transferinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->transferinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552SellerTitleInfo)
  return target;
}

int AcceptanceCertificate552SellerTitleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 1;
    if (has_seller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->seller());
    }

    // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 2;
    if (has_buyer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buyer());
    }

    // required string Currency = 5;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency());
    }

    // optional string CurrencyRate = 6;
    if (has_currencyrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currencyrate());
    }

    // required string DocumentDate = 8;
    if (has_documentdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentdate());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string DocumentNumber = 9;
    if (has_documentnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentnumber());
    }

    // optional string RevisionDate = 10;
    if (has_revisiondate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->revisiondate());
    }

    // optional string RevisionNumber = 11;
    if (has_revisionnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->revisionnumber());
    }

    // required string DocumentCreator = 12;
    if (has_documentcreator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreator());
    }

    // optional string DocumentCreatorBase = 13;
    if (has_documentcreatorbase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreatorbase());
    }

    // optional string OperationType = 14;
    if (has_operationtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationtype());
    }

    // optional string OperationTitle = 15;
    if (has_operationtitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationtitle());
    }

    // optional string GovernmentContractInfo = 16;
    if (has_governmentcontractinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->governmentcontractinfo());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 17;
    if (has_additionalinfoid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additionalinfoid());
    }

    // required string DocumentName = 18;
    if (has_documentname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentname());
    }

    // required .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo TransferInfo = 19;
    if (has_transferinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transferinfo());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 3;
  total_size += 1 * this->signers_size();
  for (int i = 0; i < this->signers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signers(i));
  }

  // repeated .Diadoc.Api.Proto.Invoicing.GroundInfo Grounds = 4;
  total_size += 1 * this->grounds_size();
  for (int i = 0; i < this->grounds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grounds(i));
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription Works = 7;
  total_size += 1 * this->works_size();
  for (int i = 0; i < this->works_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->works(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptanceCertificate552SellerTitleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AcceptanceCertificate552SellerTitleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AcceptanceCertificate552SellerTitleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AcceptanceCertificate552SellerTitleInfo::MergeFrom(const AcceptanceCertificate552SellerTitleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  signers_.MergeFrom(from.signers_);
  grounds_.MergeFrom(from.grounds_);
  works_.MergeFrom(from.works_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seller()) {
      mutable_seller()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.seller());
    }
    if (from.has_buyer()) {
      mutable_buyer()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.buyer());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_currencyrate()) {
      set_currencyrate(from.currencyrate());
    }
    if (from.has_documentdate()) {
      set_documentdate(from.documentdate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_documentnumber()) {
      set_documentnumber(from.documentnumber());
    }
    if (from.has_revisiondate()) {
      set_revisiondate(from.revisiondate());
    }
    if (from.has_revisionnumber()) {
      set_revisionnumber(from.revisionnumber());
    }
    if (from.has_documentcreator()) {
      set_documentcreator(from.documentcreator());
    }
    if (from.has_documentcreatorbase()) {
      set_documentcreatorbase(from.documentcreatorbase());
    }
    if (from.has_operationtype()) {
      set_operationtype(from.operationtype());
    }
    if (from.has_operationtitle()) {
      set_operationtitle(from.operationtitle());
    }
    if (from.has_governmentcontractinfo()) {
      set_governmentcontractinfo(from.governmentcontractinfo());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_additionalinfoid()) {
      mutable_additionalinfoid()->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::MergeFrom(from.additionalinfoid());
    }
    if (from.has_documentname()) {
      set_documentname(from.documentname());
    }
    if (from.has_transferinfo()) {
      mutable_transferinfo()->::Diadoc::Api::Proto::Invoicing::AcceptanceCertificate552TransferInfo::MergeFrom(from.transferinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AcceptanceCertificate552SellerTitleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptanceCertificate552SellerTitleInfo::CopyFrom(const AcceptanceCertificate552SellerTitleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptanceCertificate552SellerTitleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00060893) != 0x00060893) return false;

  if (has_seller()) {
    if (!this->seller().IsInitialized()) return false;
  }
  if (has_buyer()) {
    if (!this->buyer().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->signers())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->grounds())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->works())) return false;
  if (has_additionalinfoid()) {
    if (!this->additionalinfoid().IsInitialized()) return false;
  }
  if (has_transferinfo()) {
    if (!this->transferinfo().IsInitialized()) return false;
  }
  return true;
}

void AcceptanceCertificate552SellerTitleInfo::Swap(AcceptanceCertificate552SellerTitleInfo* other) {
  if (other != this) {
    std::swap(seller_, other->seller_);
    std::swap(buyer_, other->buyer_);
    signers_.Swap(&other->signers_);
    grounds_.Swap(&other->grounds_);
    std::swap(currency_, other->currency_);
    std::swap(currencyrate_, other->currencyrate_);
    works_.Swap(&other->works_);
    std::swap(documentdate_, other->documentdate_);
    std::swap(documentnumber_, other->documentnumber_);
    std::swap(revisiondate_, other->revisiondate_);
    std::swap(revisionnumber_, other->revisionnumber_);
    std::swap(documentcreator_, other->documentcreator_);
    std::swap(documentcreatorbase_, other->documentcreatorbase_);
    std::swap(operationtype_, other->operationtype_);
    std::swap(operationtitle_, other->operationtitle_);
    std::swap(governmentcontractinfo_, other->governmentcontractinfo_);
    std::swap(additionalinfoid_, other->additionalinfoid_);
    std::swap(documentname_, other->documentname_);
    std::swap(transferinfo_, other->transferinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AcceptanceCertificate552SellerTitleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptanceCertificate552SellerTitleInfo_descriptor_;
  metadata.reflection = AcceptanceCertificate552SellerTitleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AcceptanceCertificate552TransferInfo::kOperationInfoFieldNumber;
const int AcceptanceCertificate552TransferInfo::kTransferDateFieldNumber;
const int AcceptanceCertificate552TransferInfo::kCreatedThingTransferDateFieldNumber;
const int AcceptanceCertificate552TransferInfo::kCreatedThingInfoFieldNumber;
const int AcceptanceCertificate552TransferInfo::kAdditionalInfosFieldNumber;
#endif  // !_MSC_VER

AcceptanceCertificate552TransferInfo::AcceptanceCertificate552TransferInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
}

void AcceptanceCertificate552TransferInfo::InitAsDefaultInstance() {
}

AcceptanceCertificate552TransferInfo::AcceptanceCertificate552TransferInfo(const AcceptanceCertificate552TransferInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
}

void AcceptanceCertificate552TransferInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  operationinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdthingtransferdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdthinginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptanceCertificate552TransferInfo::~AcceptanceCertificate552TransferInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
  SharedDtor();
}

void AcceptanceCertificate552TransferInfo::SharedDtor() {
  if (operationinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationinfo_;
  }
  if (transferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferdate_;
  }
  if (createdthingtransferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createdthingtransferdate_;
  }
  if (createdthinginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createdthinginfo_;
  }
  if (this != default_instance_) {
  }
}

void AcceptanceCertificate552TransferInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptanceCertificate552TransferInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptanceCertificate552TransferInfo_descriptor_;
}

const AcceptanceCertificate552TransferInfo& AcceptanceCertificate552TransferInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto();
  return *default_instance_;
}

AcceptanceCertificate552TransferInfo* AcceptanceCertificate552TransferInfo::default_instance_ = NULL;

AcceptanceCertificate552TransferInfo* AcceptanceCertificate552TransferInfo::New() const {
  return new AcceptanceCertificate552TransferInfo;
}

void AcceptanceCertificate552TransferInfo::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_operationinfo()) {
      if (operationinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationinfo_->clear();
      }
    }
    if (has_transferdate()) {
      if (transferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferdate_->clear();
      }
    }
    if (has_createdthingtransferdate()) {
      if (createdthingtransferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createdthingtransferdate_->clear();
      }
    }
    if (has_createdthinginfo()) {
      if (createdthinginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createdthinginfo_->clear();
      }
    }
  }
  additionalinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AcceptanceCertificate552TransferInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string OperationInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationinfo().data(), this->operationinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TransferDate;
        break;
      }

      // optional string TransferDate = 2;
      case 2: {
        if (tag == 18) {
         parse_TransferDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferdate().data(), this->transferdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_CreatedThingTransferDate;
        break;
      }

      // optional string CreatedThingTransferDate = 3;
      case 3: {
        if (tag == 26) {
         parse_CreatedThingTransferDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdthingtransferdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdthingtransferdate().data(), this->createdthingtransferdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createdthingtransferdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_CreatedThingInfo;
        break;
      }

      // optional string CreatedThingInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_CreatedThingInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdthinginfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdthinginfo().data(), this->createdthinginfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createdthinginfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_AdditionalInfos;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 5;
      case 5: {
        if (tag == 42) {
         parse_AdditionalInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additionalinfos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_AdditionalInfos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
  return false;
#undef DO_
}

void AcceptanceCertificate552TransferInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
  // required string OperationInfo = 1;
  if (has_operationinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationinfo().data(), this->operationinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operationinfo(), output);
  }

  // optional string TransferDate = 2;
  if (has_transferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdate().data(), this->transferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transferdate(), output);
  }

  // optional string CreatedThingTransferDate = 3;
  if (has_createdthingtransferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthingtransferdate().data(), this->createdthingtransferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthingtransferdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->createdthingtransferdate(), output);
  }

  // optional string CreatedThingInfo = 4;
  if (has_createdthinginfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthinginfo().data(), this->createdthinginfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthinginfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->createdthinginfo(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 5;
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->additionalinfos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
}

::google::protobuf::uint8* AcceptanceCertificate552TransferInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
  // required string OperationInfo = 1;
  if (has_operationinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationinfo().data(), this->operationinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operationinfo(), target);
  }

  // optional string TransferDate = 2;
  if (has_transferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdate().data(), this->transferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transferdate(), target);
  }

  // optional string CreatedThingTransferDate = 3;
  if (has_createdthingtransferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthingtransferdate().data(), this->createdthingtransferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthingtransferdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->createdthingtransferdate(), target);
  }

  // optional string CreatedThingInfo = 4;
  if (has_createdthinginfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthinginfo().data(), this->createdthinginfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthinginfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->createdthinginfo(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 5;
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->additionalinfos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552TransferInfo)
  return target;
}

int AcceptanceCertificate552TransferInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string OperationInfo = 1;
    if (has_operationinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationinfo());
    }

    // optional string TransferDate = 2;
    if (has_transferdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferdate());
    }

    // optional string CreatedThingTransferDate = 3;
    if (has_createdthingtransferdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdthingtransferdate());
    }

    // optional string CreatedThingInfo = 4;
    if (has_createdthinginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdthinginfo());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 5;
  total_size += 1 * this->additionalinfos_size();
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additionalinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptanceCertificate552TransferInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AcceptanceCertificate552TransferInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AcceptanceCertificate552TransferInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AcceptanceCertificate552TransferInfo::MergeFrom(const AcceptanceCertificate552TransferInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  additionalinfos_.MergeFrom(from.additionalinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operationinfo()) {
      set_operationinfo(from.operationinfo());
    }
    if (from.has_transferdate()) {
      set_transferdate(from.transferdate());
    }
    if (from.has_createdthingtransferdate()) {
      set_createdthingtransferdate(from.createdthingtransferdate());
    }
    if (from.has_createdthinginfo()) {
      set_createdthinginfo(from.createdthinginfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AcceptanceCertificate552TransferInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptanceCertificate552TransferInfo::CopyFrom(const AcceptanceCertificate552TransferInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptanceCertificate552TransferInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->additionalinfos())) return false;
  return true;
}

void AcceptanceCertificate552TransferInfo::Swap(AcceptanceCertificate552TransferInfo* other) {
  if (other != this) {
    std::swap(operationinfo_, other->operationinfo_);
    std::swap(transferdate_, other->transferdate_);
    std::swap(createdthingtransferdate_, other->createdthingtransferdate_);
    std::swap(createdthinginfo_, other->createdthinginfo_);
    additionalinfos_.Swap(&other->additionalinfos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AcceptanceCertificate552TransferInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptanceCertificate552TransferInfo_descriptor_;
  metadata.reflection = AcceptanceCertificate552TransferInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AcceptanceCertificate552WorkDescription::kStartingDateFieldNumber;
const int AcceptanceCertificate552WorkDescription::kCompletionDateFieldNumber;
const int AcceptanceCertificate552WorkDescription::kTotalWithVatExcludedFieldNumber;
const int AcceptanceCertificate552WorkDescription::kTotalVatFieldNumber;
const int AcceptanceCertificate552WorkDescription::kTotalFieldNumber;
const int AcceptanceCertificate552WorkDescription::kItemsFieldNumber;
#endif  // !_MSC_VER

AcceptanceCertificate552WorkDescription::AcceptanceCertificate552WorkDescription()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
}

void AcceptanceCertificate552WorkDescription::InitAsDefaultInstance() {
}

AcceptanceCertificate552WorkDescription::AcceptanceCertificate552WorkDescription(const AcceptanceCertificate552WorkDescription& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
}

void AcceptanceCertificate552WorkDescription::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  startingdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  completiondate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalwithvatexcluded_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalvat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptanceCertificate552WorkDescription::~AcceptanceCertificate552WorkDescription() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
  SharedDtor();
}

void AcceptanceCertificate552WorkDescription::SharedDtor() {
  if (startingdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete startingdate_;
  }
  if (completiondate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete completiondate_;
  }
  if (totalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalwithvatexcluded_;
  }
  if (totalvat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalvat_;
  }
  if (total_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete total_;
  }
  if (this != default_instance_) {
  }
}

void AcceptanceCertificate552WorkDescription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptanceCertificate552WorkDescription::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptanceCertificate552WorkDescription_descriptor_;
}

const AcceptanceCertificate552WorkDescription& AcceptanceCertificate552WorkDescription::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto();
  return *default_instance_;
}

AcceptanceCertificate552WorkDescription* AcceptanceCertificate552WorkDescription::default_instance_ = NULL;

AcceptanceCertificate552WorkDescription* AcceptanceCertificate552WorkDescription::New() const {
  return new AcceptanceCertificate552WorkDescription;
}

void AcceptanceCertificate552WorkDescription::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_startingdate()) {
      if (startingdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        startingdate_->clear();
      }
    }
    if (has_completiondate()) {
      if (completiondate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        completiondate_->clear();
      }
    }
    if (has_totalwithvatexcluded()) {
      if (totalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalwithvatexcluded_->clear();
      }
    }
    if (has_totalvat()) {
      if (totalvat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalvat_->clear();
      }
    }
    if (has_total()) {
      if (total_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        total_->clear();
      }
    }
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AcceptanceCertificate552WorkDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string StartingDate = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_startingdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->startingdate().data(), this->startingdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "startingdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CompletionDate;
        break;
      }

      // optional string CompletionDate = 2;
      case 2: {
        if (tag == 18) {
         parse_CompletionDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_completiondate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->completiondate().data(), this->completiondate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "completiondate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TotalWithVatExcluded;
        break;
      }

      // optional string TotalWithVatExcluded = 3;
      case 3: {
        if (tag == 26) {
         parse_TotalWithVatExcluded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalwithvatexcluded()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalwithvatexcluded");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_TotalVat;
        break;
      }

      // optional string TotalVat = 4;
      case 4: {
        if (tag == 34) {
         parse_TotalVat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalvat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalvat().data(), this->totalvat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalvat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Total;
        break;
      }

      // required string Total = 5;
      case 5: {
        if (tag == 42) {
         parse_Total:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_total()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->total().data(), this->total().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "total");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Items;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem Items = 6;
      case 6: {
        if (tag == 50) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
  return false;
#undef DO_
}

void AcceptanceCertificate552WorkDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
  // optional string StartingDate = 1;
  if (has_startingdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->startingdate().data(), this->startingdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "startingdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->startingdate(), output);
  }

  // optional string CompletionDate = 2;
  if (has_completiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->completiondate().data(), this->completiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "completiondate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->completiondate(), output);
  }

  // optional string TotalWithVatExcluded = 3;
  if (has_totalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalwithvatexcluded");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->totalwithvatexcluded(), output);
  }

  // optional string TotalVat = 4;
  if (has_totalvat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalvat().data(), this->totalvat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalvat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->totalvat(), output);
  }

  // required string Total = 5;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "total");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->total(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem Items = 6;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
}

::google::protobuf::uint8* AcceptanceCertificate552WorkDescription::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
  // optional string StartingDate = 1;
  if (has_startingdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->startingdate().data(), this->startingdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "startingdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->startingdate(), target);
  }

  // optional string CompletionDate = 2;
  if (has_completiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->completiondate().data(), this->completiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "completiondate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->completiondate(), target);
  }

  // optional string TotalWithVatExcluded = 3;
  if (has_totalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalwithvatexcluded");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->totalwithvatexcluded(), target);
  }

  // optional string TotalVat = 4;
  if (has_totalvat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalvat().data(), this->totalvat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalvat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->totalvat(), target);
  }

  // required string Total = 5;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "total");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->total(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem Items = 6;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkDescription)
  return target;
}

int AcceptanceCertificate552WorkDescription::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string StartingDate = 1;
    if (has_startingdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->startingdate());
    }

    // optional string CompletionDate = 2;
    if (has_completiondate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->completiondate());
    }

    // optional string TotalWithVatExcluded = 3;
    if (has_totalwithvatexcluded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalwithvatexcluded());
    }

    // optional string TotalVat = 4;
    if (has_totalvat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalvat());
    }

    // required string Total = 5;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->total());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem Items = 6;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptanceCertificate552WorkDescription::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AcceptanceCertificate552WorkDescription* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AcceptanceCertificate552WorkDescription*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AcceptanceCertificate552WorkDescription::MergeFrom(const AcceptanceCertificate552WorkDescription& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_startingdate()) {
      set_startingdate(from.startingdate());
    }
    if (from.has_completiondate()) {
      set_completiondate(from.completiondate());
    }
    if (from.has_totalwithvatexcluded()) {
      set_totalwithvatexcluded(from.totalwithvatexcluded());
    }
    if (from.has_totalvat()) {
      set_totalvat(from.totalvat());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AcceptanceCertificate552WorkDescription::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptanceCertificate552WorkDescription::CopyFrom(const AcceptanceCertificate552WorkDescription& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptanceCertificate552WorkDescription::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void AcceptanceCertificate552WorkDescription::Swap(AcceptanceCertificate552WorkDescription* other) {
  if (other != this) {
    std::swap(startingdate_, other->startingdate_);
    std::swap(completiondate_, other->completiondate_);
    std::swap(totalwithvatexcluded_, other->totalwithvatexcluded_);
    std::swap(totalvat_, other->totalvat_);
    std::swap(total_, other->total_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AcceptanceCertificate552WorkDescription::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptanceCertificate552WorkDescription_descriptor_;
  metadata.reflection = AcceptanceCertificate552WorkDescription_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AcceptanceCertificate552WorkItem::kNameFieldNumber;
const int AcceptanceCertificate552WorkItem::kDescriptionFieldNumber;
const int AcceptanceCertificate552WorkItem::kUnitCodeFieldNumber;
const int AcceptanceCertificate552WorkItem::kUnitNameFieldNumber;
const int AcceptanceCertificate552WorkItem::kPriceFieldNumber;
const int AcceptanceCertificate552WorkItem::kQuantityFieldNumber;
const int AcceptanceCertificate552WorkItem::kSubtotalWithVatExcludedFieldNumber;
const int AcceptanceCertificate552WorkItem::kVatFieldNumber;
const int AcceptanceCertificate552WorkItem::kSubtotalFieldNumber;
const int AcceptanceCertificate552WorkItem::kAdditionalInfosFieldNumber;
const int AcceptanceCertificate552WorkItem::kTaxRateFieldNumber;
const int AcceptanceCertificate552WorkItem::kItemAccountDebitFieldNumber;
const int AcceptanceCertificate552WorkItem::kItemAccountCreditFieldNumber;
#endif  // !_MSC_VER

AcceptanceCertificate552WorkItem::AcceptanceCertificate552WorkItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
}

void AcceptanceCertificate552WorkItem::InitAsDefaultInstance() {
}

AcceptanceCertificate552WorkItem::AcceptanceCertificate552WorkItem(const AcceptanceCertificate552WorkItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
}

void AcceptanceCertificate552WorkItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unitcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unitname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtotalwithvatexcluded_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtotal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taxrate_ = 3;
  itemaccountdebit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemaccountcredit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptanceCertificate552WorkItem::~AcceptanceCertificate552WorkItem() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
  SharedDtor();
}

void AcceptanceCertificate552WorkItem::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (unitcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unitcode_;
  }
  if (unitname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unitname_;
  }
  if (price_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete price_;
  }
  if (quantity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete quantity_;
  }
  if (subtotalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subtotalwithvatexcluded_;
  }
  if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vat_;
  }
  if (subtotal_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subtotal_;
  }
  if (itemaccountdebit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemaccountdebit_;
  }
  if (itemaccountcredit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemaccountcredit_;
  }
  if (this != default_instance_) {
  }
}

void AcceptanceCertificate552WorkItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptanceCertificate552WorkItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptanceCertificate552WorkItem_descriptor_;
}

const AcceptanceCertificate552WorkItem& AcceptanceCertificate552WorkItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto();
  return *default_instance_;
}

AcceptanceCertificate552WorkItem* AcceptanceCertificate552WorkItem::default_instance_ = NULL;

AcceptanceCertificate552WorkItem* AcceptanceCertificate552WorkItem::New() const {
  return new AcceptanceCertificate552WorkItem;
}

void AcceptanceCertificate552WorkItem::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        description_->clear();
      }
    }
    if (has_unitcode()) {
      if (unitcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        unitcode_->clear();
      }
    }
    if (has_unitname()) {
      if (unitname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        unitname_->clear();
      }
    }
    if (has_price()) {
      if (price_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        price_->clear();
      }
    }
    if (has_quantity()) {
      if (quantity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        quantity_->clear();
      }
    }
    if (has_subtotalwithvatexcluded()) {
      if (subtotalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        subtotalwithvatexcluded_->clear();
      }
    }
    if (has_vat()) {
      if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        vat_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7424) {
    if (has_subtotal()) {
      if (subtotal_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        subtotal_->clear();
      }
    }
    taxrate_ = 3;
    if (has_itemaccountdebit()) {
      if (itemaccountdebit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemaccountdebit_->clear();
      }
    }
    if (has_itemaccountcredit()) {
      if (itemaccountcredit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemaccountcredit_->clear();
      }
    }
  }
  additionalinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AcceptanceCertificate552WorkItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Description;
        break;
      }

      // optional string Description = 2;
      case 2: {
        if (tag == 18) {
         parse_Description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UnitCode;
        break;
      }

      // optional string UnitCode = 3;
      case 3: {
        if (tag == 26) {
         parse_UnitCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unitcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unitcode().data(), this->unitcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unitcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_UnitName;
        break;
      }

      // optional string UnitName = 4;
      case 4: {
        if (tag == 34) {
         parse_UnitName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unitname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unitname().data(), this->unitname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unitname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Price;
        break;
      }

      // optional string Price = 5;
      case 5: {
        if (tag == 42) {
         parse_Price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->price().data(), this->price().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "price");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Quantity;
        break;
      }

      // optional string Quantity = 6;
      case 6: {
        if (tag == 50) {
         parse_Quantity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quantity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->quantity().data(), this->quantity().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "quantity");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_SubtotalWithVatExcluded;
        break;
      }

      // optional string SubtotalWithVatExcluded = 7;
      case 7: {
        if (tag == 58) {
         parse_SubtotalWithVatExcluded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtotalwithvatexcluded()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "subtotalwithvatexcluded");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Vat;
        break;
      }

      // optional string Vat = 8;
      case 8: {
        if (tag == 66) {
         parse_Vat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vat().data(), this->vat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Subtotal;
        break;
      }

      // optional string Subtotal = 9;
      case 9: {
        if (tag == 74) {
         parse_Subtotal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtotal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subtotal().data(), this->subtotal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "subtotal");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_AdditionalInfos;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 10;
      case 10: {
        if (tag == 82) {
         parse_AdditionalInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additionalinfos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_AdditionalInfos;
        if (input->ExpectTag(88)) goto parse_TaxRate;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 11 [default = Percent_18];
      case 11: {
        if (tag == 88) {
         parse_TaxRate:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Invoicing::TaxRate_IsValid(value)) {
            set_taxrate(static_cast< ::Diadoc::Api::Proto::Invoicing::TaxRate >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_ItemAccountDebit;
        break;
      }

      // optional string ItemAccountDebit = 12;
      case 12: {
        if (tag == 98) {
         parse_ItemAccountDebit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemaccountdebit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemaccountdebit().data(), this->itemaccountdebit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemaccountdebit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_ItemAccountCredit;
        break;
      }

      // optional string ItemAccountCredit = 13;
      case 13: {
        if (tag == 106) {
         parse_ItemAccountCredit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemaccountcredit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemaccountcredit().data(), this->itemaccountcredit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemaccountcredit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
  return false;
#undef DO_
}

void AcceptanceCertificate552WorkItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string Description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // optional string UnitCode = 3;
  if (has_unitcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unitcode().data(), this->unitcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unitcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->unitcode(), output);
  }

  // optional string UnitName = 4;
  if (has_unitname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unitname().data(), this->unitname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unitname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->unitname(), output);
  }

  // optional string Price = 5;
  if (has_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->price(), output);
  }

  // optional string Quantity = 6;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantity().data(), this->quantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "quantity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->quantity(), output);
  }

  // optional string SubtotalWithVatExcluded = 7;
  if (has_subtotalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotalwithvatexcluded");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->subtotalwithvatexcluded(), output);
  }

  // optional string Vat = 8;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->vat(), output);
  }

  // optional string Subtotal = 9;
  if (has_subtotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotal().data(), this->subtotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->subtotal(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 10;
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->additionalinfos(i), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 11 [default = Percent_18];
  if (has_taxrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->taxrate(), output);
  }

  // optional string ItemAccountDebit = 12;
  if (has_itemaccountdebit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountdebit().data(), this->itemaccountdebit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountdebit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->itemaccountdebit(), output);
  }

  // optional string ItemAccountCredit = 13;
  if (has_itemaccountcredit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountcredit().data(), this->itemaccountcredit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountcredit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->itemaccountcredit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
}

::google::protobuf::uint8* AcceptanceCertificate552WorkItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string Description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // optional string UnitCode = 3;
  if (has_unitcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unitcode().data(), this->unitcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unitcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->unitcode(), target);
  }

  // optional string UnitName = 4;
  if (has_unitname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unitname().data(), this->unitname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unitname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->unitname(), target);
  }

  // optional string Price = 5;
  if (has_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->price(), target);
  }

  // optional string Quantity = 6;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantity().data(), this->quantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "quantity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->quantity(), target);
  }

  // optional string SubtotalWithVatExcluded = 7;
  if (has_subtotalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotalwithvatexcluded");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->subtotalwithvatexcluded(), target);
  }

  // optional string Vat = 8;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->vat(), target);
  }

  // optional string Subtotal = 9;
  if (has_subtotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotal().data(), this->subtotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->subtotal(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 10;
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->additionalinfos(i), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 11 [default = Percent_18];
  if (has_taxrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->taxrate(), target);
  }

  // optional string ItemAccountDebit = 12;
  if (has_itemaccountdebit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountdebit().data(), this->itemaccountdebit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountdebit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->itemaccountdebit(), target);
  }

  // optional string ItemAccountCredit = 13;
  if (has_itemaccountcredit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountcredit().data(), this->itemaccountcredit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountcredit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->itemaccountcredit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552WorkItem)
  return target;
}

int AcceptanceCertificate552WorkItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string Description = 2;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string UnitCode = 3;
    if (has_unitcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unitcode());
    }

    // optional string UnitName = 4;
    if (has_unitname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unitname());
    }

    // optional string Price = 5;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->price());
    }

    // optional string Quantity = 6;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->quantity());
    }

    // optional string SubtotalWithVatExcluded = 7;
    if (has_subtotalwithvatexcluded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subtotalwithvatexcluded());
    }

    // optional string Vat = 8;
    if (has_vat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vat());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string Subtotal = 9;
    if (has_subtotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subtotal());
    }

    // optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 11 [default = Percent_18];
    if (has_taxrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->taxrate());
    }

    // optional string ItemAccountDebit = 12;
    if (has_itemaccountdebit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemaccountdebit());
    }

    // optional string ItemAccountCredit = 13;
    if (has_itemaccountcredit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemaccountcredit());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 10;
  total_size += 1 * this->additionalinfos_size();
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additionalinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptanceCertificate552WorkItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AcceptanceCertificate552WorkItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AcceptanceCertificate552WorkItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AcceptanceCertificate552WorkItem::MergeFrom(const AcceptanceCertificate552WorkItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  additionalinfos_.MergeFrom(from.additionalinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_unitcode()) {
      set_unitcode(from.unitcode());
    }
    if (from.has_unitname()) {
      set_unitname(from.unitname());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
    if (from.has_subtotalwithvatexcluded()) {
      set_subtotalwithvatexcluded(from.subtotalwithvatexcluded());
    }
    if (from.has_vat()) {
      set_vat(from.vat());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_subtotal()) {
      set_subtotal(from.subtotal());
    }
    if (from.has_taxrate()) {
      set_taxrate(from.taxrate());
    }
    if (from.has_itemaccountdebit()) {
      set_itemaccountdebit(from.itemaccountdebit());
    }
    if (from.has_itemaccountcredit()) {
      set_itemaccountcredit(from.itemaccountcredit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AcceptanceCertificate552WorkItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptanceCertificate552WorkItem::CopyFrom(const AcceptanceCertificate552WorkItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptanceCertificate552WorkItem::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->additionalinfos())) return false;
  return true;
}

void AcceptanceCertificate552WorkItem::Swap(AcceptanceCertificate552WorkItem* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(description_, other->description_);
    std::swap(unitcode_, other->unitcode_);
    std::swap(unitname_, other->unitname_);
    std::swap(price_, other->price_);
    std::swap(quantity_, other->quantity_);
    std::swap(subtotalwithvatexcluded_, other->subtotalwithvatexcluded_);
    std::swap(vat_, other->vat_);
    std::swap(subtotal_, other->subtotal_);
    additionalinfos_.Swap(&other->additionalinfos_);
    std::swap(taxrate_, other->taxrate_);
    std::swap(itemaccountdebit_, other->itemaccountdebit_);
    std::swap(itemaccountcredit_, other->itemaccountcredit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AcceptanceCertificate552WorkItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptanceCertificate552WorkItem_descriptor_;
  metadata.reflection = AcceptanceCertificate552WorkItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AcceptanceCertificate552BuyerTitleInfo::kSignersFieldNumber;
const int AcceptanceCertificate552BuyerTitleInfo::kDocumentCreatorFieldNumber;
const int AcceptanceCertificate552BuyerTitleInfo::kDocumentCreatorBaseFieldNumber;
const int AcceptanceCertificate552BuyerTitleInfo::kOperationTypeFieldNumber;
const int AcceptanceCertificate552BuyerTitleInfo::kOperationContentFieldNumber;
const int AcceptanceCertificate552BuyerTitleInfo::kAcceptanceDateFieldNumber;
const int AcceptanceCertificate552BuyerTitleInfo::kCreatedThingAcceptDateFieldNumber;
const int AcceptanceCertificate552BuyerTitleInfo::kCreatedThingInfoFieldNumber;
const int AcceptanceCertificate552BuyerTitleInfo::kAdditionalInfoIdFieldNumber;
#endif  // !_MSC_VER

AcceptanceCertificate552BuyerTitleInfo::AcceptanceCertificate552BuyerTitleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
}

void AcceptanceCertificate552BuyerTitleInfo::InitAsDefaultInstance() {
  additionalinfoid_ = const_cast< ::Diadoc::Api::Proto::Invoicing::AdditionalInfoId*>(&::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::default_instance());
}

AcceptanceCertificate552BuyerTitleInfo::AcceptanceCertificate552BuyerTitleInfo(const AcceptanceCertificate552BuyerTitleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
}

void AcceptanceCertificate552BuyerTitleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  documentcreator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentcreatorbase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acceptancedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdthingacceptdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdthinginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additionalinfoid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptanceCertificate552BuyerTitleInfo::~AcceptanceCertificate552BuyerTitleInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
  SharedDtor();
}

void AcceptanceCertificate552BuyerTitleInfo::SharedDtor() {
  if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreator_;
  }
  if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreatorbase_;
  }
  if (operationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationtype_;
  }
  if (operationcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationcontent_;
  }
  if (acceptancedate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete acceptancedate_;
  }
  if (createdthingacceptdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createdthingacceptdate_;
  }
  if (createdthinginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createdthinginfo_;
  }
  if (this != default_instance_) {
    delete additionalinfoid_;
  }
}

void AcceptanceCertificate552BuyerTitleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptanceCertificate552BuyerTitleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptanceCertificate552BuyerTitleInfo_descriptor_;
}

const AcceptanceCertificate552BuyerTitleInfo& AcceptanceCertificate552BuyerTitleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fAcceptanceCertificate552Info_2eproto();
  return *default_instance_;
}

AcceptanceCertificate552BuyerTitleInfo* AcceptanceCertificate552BuyerTitleInfo::default_instance_ = NULL;

AcceptanceCertificate552BuyerTitleInfo* AcceptanceCertificate552BuyerTitleInfo::New() const {
  return new AcceptanceCertificate552BuyerTitleInfo;
}

void AcceptanceCertificate552BuyerTitleInfo::Clear() {
  if (_has_bits_[0 / 32] & 254) {
    if (has_documentcreator()) {
      if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreator_->clear();
      }
    }
    if (has_documentcreatorbase()) {
      if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreatorbase_->clear();
      }
    }
    if (has_operationtype()) {
      if (operationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationtype_->clear();
      }
    }
    if (has_operationcontent()) {
      if (operationcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationcontent_->clear();
      }
    }
    if (has_acceptancedate()) {
      if (acceptancedate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        acceptancedate_->clear();
      }
    }
    if (has_createdthingacceptdate()) {
      if (createdthingacceptdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createdthingacceptdate_->clear();
      }
    }
    if (has_createdthinginfo()) {
      if (createdthinginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createdthinginfo_->clear();
      }
    }
  }
  if (has_additionalinfoid()) {
    if (additionalinfoid_ != NULL) additionalinfoid_->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::Clear();
  }
  signers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AcceptanceCertificate552BuyerTitleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 1;
      case 1: {
        if (tag == 10) {
         parse_Signers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Signers;
        if (input->ExpectTag(18)) goto parse_DocumentCreator;
        break;
      }

      // required string DocumentCreator = 2;
      case 2: {
        if (tag == 18) {
         parse_DocumentCreator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreator().data(), this->documentcreator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DocumentCreatorBase;
        break;
      }

      // optional string DocumentCreatorBase = 3;
      case 3: {
        if (tag == 26) {
         parse_DocumentCreatorBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreatorbase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreatorbase().data(), this->documentcreatorbase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreatorbase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_OperationType;
        break;
      }

      // optional string OperationType = 4;
      case 4: {
        if (tag == 34) {
         parse_OperationType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationtype().data(), this->operationtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_OperationContent;
        break;
      }

      // required string OperationContent = 6;
      case 6: {
        if (tag == 50) {
         parse_OperationContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationcontent().data(), this->operationcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationcontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_AcceptanceDate;
        break;
      }

      // optional string AcceptanceDate = 7;
      case 7: {
        if (tag == 58) {
         parse_AcceptanceDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acceptancedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->acceptancedate().data(), this->acceptancedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acceptancedate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_CreatedThingAcceptDate;
        break;
      }

      // optional string CreatedThingAcceptDate = 8;
      case 8: {
        if (tag == 66) {
         parse_CreatedThingAcceptDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdthingacceptdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdthingacceptdate().data(), this->createdthingacceptdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createdthingacceptdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_CreatedThingInfo;
        break;
      }

      // optional string CreatedThingInfo = 9;
      case 9: {
        if (tag == 74) {
         parse_CreatedThingInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdthinginfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdthinginfo().data(), this->createdthinginfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createdthinginfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_AdditionalInfoId;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 10;
      case 10: {
        if (tag == 82) {
         parse_AdditionalInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_additionalinfoid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
  return false;
#undef DO_
}

void AcceptanceCertificate552BuyerTitleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 1;
  for (int i = 0; i < this->signers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->signers(i), output);
  }

  // required string DocumentCreator = 2;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->documentcreator(), output);
  }

  // optional string DocumentCreatorBase = 3;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->documentcreatorbase(), output);
  }

  // optional string OperationType = 4;
  if (has_operationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtype().data(), this->operationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->operationtype(), output);
  }

  // required string OperationContent = 6;
  if (has_operationcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcontent().data(), this->operationcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->operationcontent(), output);
  }

  // optional string AcceptanceDate = 7;
  if (has_acceptancedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acceptancedate().data(), this->acceptancedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acceptancedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->acceptancedate(), output);
  }

  // optional string CreatedThingAcceptDate = 8;
  if (has_createdthingacceptdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthingacceptdate().data(), this->createdthingacceptdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthingacceptdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->createdthingacceptdate(), output);
  }

  // optional string CreatedThingInfo = 9;
  if (has_createdthinginfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthinginfo().data(), this->createdthinginfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthinginfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->createdthinginfo(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 10;
  if (has_additionalinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->additionalinfoid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
}

::google::protobuf::uint8* AcceptanceCertificate552BuyerTitleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 1;
  for (int i = 0; i < this->signers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->signers(i), target);
  }

  // required string DocumentCreator = 2;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->documentcreator(), target);
  }

  // optional string DocumentCreatorBase = 3;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->documentcreatorbase(), target);
  }

  // optional string OperationType = 4;
  if (has_operationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtype().data(), this->operationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->operationtype(), target);
  }

  // required string OperationContent = 6;
  if (has_operationcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcontent().data(), this->operationcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->operationcontent(), target);
  }

  // optional string AcceptanceDate = 7;
  if (has_acceptancedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acceptancedate().data(), this->acceptancedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acceptancedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->acceptancedate(), target);
  }

  // optional string CreatedThingAcceptDate = 8;
  if (has_createdthingacceptdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthingacceptdate().data(), this->createdthingacceptdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthingacceptdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->createdthingacceptdate(), target);
  }

  // optional string CreatedThingInfo = 9;
  if (has_createdthinginfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthinginfo().data(), this->createdthinginfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthinginfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->createdthinginfo(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 10;
  if (has_additionalinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->additionalinfoid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.AcceptanceCertificate552BuyerTitleInfo)
  return target;
}

int AcceptanceCertificate552BuyerTitleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string DocumentCreator = 2;
    if (has_documentcreator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreator());
    }

    // optional string DocumentCreatorBase = 3;
    if (has_documentcreatorbase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreatorbase());
    }

    // optional string OperationType = 4;
    if (has_operationtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationtype());
    }

    // required string OperationContent = 6;
    if (has_operationcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationcontent());
    }

    // optional string AcceptanceDate = 7;
    if (has_acceptancedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acceptancedate());
    }

    // optional string CreatedThingAcceptDate = 8;
    if (has_createdthingacceptdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdthingacceptdate());
    }

    // optional string CreatedThingInfo = 9;
    if (has_createdthinginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdthinginfo());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 10;
    if (has_additionalinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additionalinfoid());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 1;
  total_size += 1 * this->signers_size();
  for (int i = 0; i < this->signers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptanceCertificate552BuyerTitleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AcceptanceCertificate552BuyerTitleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AcceptanceCertificate552BuyerTitleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AcceptanceCertificate552BuyerTitleInfo::MergeFrom(const AcceptanceCertificate552BuyerTitleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  signers_.MergeFrom(from.signers_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_documentcreator()) {
      set_documentcreator(from.documentcreator());
    }
    if (from.has_documentcreatorbase()) {
      set_documentcreatorbase(from.documentcreatorbase());
    }
    if (from.has_operationtype()) {
      set_operationtype(from.operationtype());
    }
    if (from.has_operationcontent()) {
      set_operationcontent(from.operationcontent());
    }
    if (from.has_acceptancedate()) {
      set_acceptancedate(from.acceptancedate());
    }
    if (from.has_createdthingacceptdate()) {
      set_createdthingacceptdate(from.createdthingacceptdate());
    }
    if (from.has_createdthinginfo()) {
      set_createdthinginfo(from.createdthinginfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_additionalinfoid()) {
      mutable_additionalinfoid()->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::MergeFrom(from.additionalinfoid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AcceptanceCertificate552BuyerTitleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptanceCertificate552BuyerTitleInfo::CopyFrom(const AcceptanceCertificate552BuyerTitleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptanceCertificate552BuyerTitleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000012) != 0x00000012) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->signers())) return false;
  if (has_additionalinfoid()) {
    if (!this->additionalinfoid().IsInitialized()) return false;
  }
  return true;
}

void AcceptanceCertificate552BuyerTitleInfo::Swap(AcceptanceCertificate552BuyerTitleInfo* other) {
  if (other != this) {
    signers_.Swap(&other->signers_);
    std::swap(documentcreator_, other->documentcreator_);
    std::swap(documentcreatorbase_, other->documentcreatorbase_);
    std::swap(operationtype_, other->operationtype_);
    std::swap(operationcontent_, other->operationcontent_);
    std::swap(acceptancedate_, other->acceptancedate_);
    std::swap(createdthingacceptdate_, other->createdthingacceptdate_);
    std::swap(createdthinginfo_, other->createdthinginfo_);
    std::swap(additionalinfoid_, other->additionalinfoid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AcceptanceCertificate552BuyerTitleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptanceCertificate552BuyerTitleInfo_descriptor_;
  metadata.reflection = AcceptanceCertificate552BuyerTitleInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Invoicing
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
