// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Invoicing/TovTorgInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Invoicing/TovTorgInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Invoicing {

namespace {

const ::google::protobuf::Descriptor* TovTorgSellerTitleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TovTorgSellerTitleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TovTorgBuyerTitleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TovTorgBuyerTitleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TovTorgTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TovTorgTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* TovTorgItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TovTorgItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TovTorgTransferInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TovTorgTransferInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GroundInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GroundInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Invoicing_2fTovTorgInfo_2eproto() {
  protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Invoicing/TovTorgInfo.proto");
  GOOGLE_CHECK(file != NULL);
  TovTorgSellerTitleInfo_descriptor_ = file->message_type(0);
  static const int TovTorgSellerTitleInfo_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, seller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, buyer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, shipper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, consignee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, carrier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, signers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, grounds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, currencyrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, documentdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, documentnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, revisiondate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, revisionnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, transferinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, documentcreator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, documentcreatorbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, operationtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, governmentcontractinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, table_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, additionalinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, documentname_),
  };
  TovTorgSellerTitleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TovTorgSellerTitleInfo_descriptor_,
      TovTorgSellerTitleInfo::default_instance_,
      TovTorgSellerTitleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgSellerTitleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TovTorgSellerTitleInfo));
  TovTorgBuyerTitleInfo_descriptor_ = file->message_type(1);
  static const int TovTorgBuyerTitleInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, documentcreator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, documentcreatorbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, operationcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, operationcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, acceptancedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, employee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, otherissuer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, additionalinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, signers_),
  };
  TovTorgBuyerTitleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TovTorgBuyerTitleInfo_descriptor_,
      TovTorgBuyerTitleInfo::default_instance_,
      TovTorgBuyerTitleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgBuyerTitleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TovTorgBuyerTitleInfo));
  TovTorgTable_descriptor_ = file->message_type(2);
  static const int TovTorgTable_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, totalquantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, totalgross_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, totalnet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, totalwithvatexcluded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, totalvat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, total_),
  };
  TovTorgTable_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TovTorgTable_descriptor_,
      TovTorgTable::default_instance_,
      TovTorgTable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTable, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TovTorgTable));
  TovTorgItem_descriptor_ = file->message_type(3);
  static const int TovTorgItem_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, product_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, feature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, vendorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, productcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, unitname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, packagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, quantityinpack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, gross_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, net_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, itemtorelease_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, subtotalwithvatexcluded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, taxrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, vat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, subtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, itemaccountdebit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, itemaccountcredit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, additionalinfos_),
  };
  TovTorgItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TovTorgItem_descriptor_,
      TovTorgItem::default_instance_,
      TovTorgItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TovTorgItem));
  TovTorgTransferInfo_descriptor_ = file->message_type(4);
  static const int TovTorgTransferInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, operationinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, transferdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, attachment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, waybills_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, employee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, otherissuer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, additionalinfos_),
  };
  TovTorgTransferInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TovTorgTransferInfo_descriptor_,
      TovTorgTransferInfo::default_instance_,
      TovTorgTransferInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TovTorgTransferInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TovTorgTransferInfo));
  GroundInfo_descriptor_ = file->message_type(5);
  static const int GroundInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundInfo, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundInfo, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundInfo, info_),
  };
  GroundInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GroundInfo_descriptor_,
      GroundInfo::default_instance_,
      GroundInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GroundInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Invoicing_2fTovTorgInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TovTorgSellerTitleInfo_descriptor_, &TovTorgSellerTitleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TovTorgBuyerTitleInfo_descriptor_, &TovTorgBuyerTitleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TovTorgTable_descriptor_, &TovTorgTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TovTorgItem_descriptor_, &TovTorgItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TovTorgTransferInfo_descriptor_, &TovTorgTransferInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GroundInfo_descriptor_, &GroundInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Invoicing_2fTovTorgInfo_2eproto() {
  delete TovTorgSellerTitleInfo::default_instance_;
  delete TovTorgSellerTitleInfo_reflection_;
  delete TovTorgBuyerTitleInfo::default_instance_;
  delete TovTorgBuyerTitleInfo_reflection_;
  delete TovTorgTable::default_instance_;
  delete TovTorgTable_reflection_;
  delete TovTorgItem::default_instance_;
  delete TovTorgItem_reflection_;
  delete TovTorgTransferInfo::default_instance_;
  delete TovTorgTransferInfo_reflection_;
  delete GroundInfo::default_instance_;
  delete GroundInfo_reflection_;
}

void protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::Invoicing::protobuf_AddDesc_Invoicing_2fInvoiceInfo_2eproto();
  ::Diadoc::Api::Proto::Invoicing::Signers::protobuf_AddDesc_Invoicing_2fExtendedSigner_2eproto();
  ::Diadoc::Api::Proto::Invoicing::Organizations::protobuf_AddDesc_Invoicing_2fExtendedOrganizationInfo_2eproto();
  ::Diadoc::Api::Proto::Invoicing::protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033Invoicing/TovTorgInfo.proto\022\032Diadoc.Ap"
    "i.Proto.Invoicing\032\033Invoicing/InvoiceInfo"
    ".proto\032\036Invoicing/ExtendedSigner.proto\032("
    "Invoicing/ExtendedOrganizationInfo.proto"
    "\032-Invoicing/UniversalTransferDocumentInf"
    "o.proto\"\215\010\n\026TovTorgSellerTitleInfo\022R\n\006Se"
    "ller\030\001 \002(\0132B.Diadoc.Api.Proto.Invoicing."
    "Organizations.ExtendedOrganizationInfo\022Q"
    "\n\005Buyer\030\002 \002(\0132B.Diadoc.Api.Proto.Invoici"
    "ng.Organizations.ExtendedOrganizationInf"
    "o\022S\n\007Shipper\030\003 \001(\0132B.Diadoc.Api.Proto.In"
    "voicing.Organizations.ExtendedOrganizati"
    "onInfo\022U\n\tConsignee\030\004 \001(\0132B.Diadoc.Api.P"
    "roto.Invoicing.Organizations.ExtendedOrg"
    "anizationInfo\022S\n\007Carrier\030\005 \001(\0132B.Diadoc."
    "Api.Proto.Invoicing.Organizations.Extend"
    "edOrganizationInfo\022C\n\007Signers\030\006 \003(\01322.Di"
    "adoc.Api.Proto.Invoicing.Signers.Extende"
    "dSigner\0227\n\007Grounds\030\007 \003(\0132&.Diadoc.Api.Pr"
    "oto.Invoicing.GroundInfo\022\020\n\010Currency\030\010 \002"
    "(\t\022\024\n\014CurrencyRate\030\t \001(\t\022\024\n\014DocumentDate"
    "\030\n \002(\t\022\026\n\016DocumentNumber\030\013 \001(\t\022\024\n\014Revisi"
    "onDate\030\014 \001(\t\022\026\n\016RevisionNumber\030\r \001(\t\022E\n\014"
    "TransferInfo\030\016 \002(\0132/.Diadoc.Api.Proto.In"
    "voicing.TovTorgTransferInfo\022\027\n\017DocumentC"
    "reator\030\017 \002(\t\022\033\n\023DocumentCreatorBase\030\020 \001("
    "\t\022\025\n\rOperationType\030\021 \001(\t\022\036\n\026GovernmentCo"
    "ntractInfo\030\022 \001(\t\0227\n\005Table\030\023 \001(\0132(.Diadoc"
    ".Api.Proto.Invoicing.TovTorgTable\022F\n\020Add"
    "itionalInfoId\030\024 \001(\0132,.Diadoc.Api.Proto.I"
    "nvoicing.AdditionalInfoId\022\024\n\014DocumentNam"
    "e\030\025 \002(\t\"\231\003\n\025TovTorgBuyerTitleInfo\022\027\n\017Doc"
    "umentCreator\030\001 \002(\t\022\033\n\023DocumentCreatorBas"
    "e\030\002 \001(\t\022\025\n\rOperationCode\030\003 \001(\t\022\030\n\020Operat"
    "ionContent\030\004 \002(\t\022\026\n\016AcceptanceDate\030\005 \001(\t"
    "\0226\n\010Employee\030\006 \001(\0132$.Diadoc.Api.Proto.In"
    "voicing.Employee\022<\n\013OtherIssuer\030\007 \001(\0132\'."
    "Diadoc.Api.Proto.Invoicing.OtherIssuer\022F"
    "\n\020AdditionalInfoId\030\010 \001(\0132,.Diadoc.Api.Pr"
    "oto.Invoicing.AdditionalInfoId\022C\n\007Signer"
    "s\030\t \003(\01322.Diadoc.Api.Proto.Invoicing.Sig"
    "ners.ExtendedSigner\"\302\001\n\014TovTorgTable\0226\n\005"
    "Items\030\001 \003(\0132\'.Diadoc.Api.Proto.Invoicing"
    ".TovTorgItem\022\025\n\rTotalQuantity\030\002 \001(\t\022\022\n\nT"
    "otalGross\030\003 \001(\t\022\020\n\010TotalNet\030\004 \001(\t\022\034\n\024Tot"
    "alWithVatExcluded\030\005 \001(\t\022\020\n\010TotalVat\030\006 \001("
    "\t\022\r\n\005Total\030\007 \001(\t\"\203\004\n\013TovTorgItem\022\017\n\007Prod"
    "uct\030\001 \001(\t\022\017\n\007Feature\030\002 \001(\t\022\014\n\004Sort\030\003 \001(\t"
    "\022\022\n\nVendorCode\030\004 \001(\t\022\023\n\013ProductCode\030\005 \001("
    "\t\022\020\n\010UnitName\030\006 \001(\t\022\014\n\004Unit\030\007 \002(\t\022\023\n\013Pac"
    "kageType\030\010 \001(\t\022\026\n\016QuantityInPack\030\t \001(\t\022\020"
    "\n\010Quantity\030\n \001(\t\022\r\n\005Gross\030\013 \001(\t\022\013\n\003Net\030\014"
    " \002(\t\022\025\n\rItemToRelease\030\r \001(\t\022\r\n\005Price\030\016 \001"
    "(\t\022\037\n\027SubtotalWithVatExcluded\030\017 \001(\t\022@\n\007T"
    "axRate\030\020 \001(\0162#.Diadoc.Api.Proto.Invoicin"
    "g.TaxRate:\nPercent_18\022\013\n\003Vat\030\021 \001(\t\022\020\n\010Su"
    "btotal\030\022 \002(\t\022\030\n\020ItemAccountDebit\030\023 \001(\t\022\031"
    "\n\021ItemAccountCredit\030\024 \001(\t\022C\n\017AdditionalI"
    "nfos\030\025 \003(\0132*.Diadoc.Api.Proto.Invoicing."
    "AdditionalInfo\"\310\002\n\023TovTorgTransferInfo\022\025"
    "\n\rOperationInfo\030\001 \002(\t\022\024\n\014TransferDate\030\002 "
    "\001(\t\022\022\n\nAttachment\030\003 \001(\t\0225\n\010Waybills\030\004 \003("
    "\0132#.Diadoc.Api.Proto.Invoicing.Waybill\0226"
    "\n\010Employee\030\005 \001(\0132$.Diadoc.Api.Proto.Invo"
    "icing.Employee\022<\n\013OtherIssuer\030\006 \001(\0132\'.Di"
    "adoc.Api.Proto.Invoicing.OtherIssuer\022C\n\017"
    "AdditionalInfos\030\007 \003(\0132*.Diadoc.Api.Proto"
    ".Invoicing.AdditionalInfo\"F\n\nGroundInfo\022"
    "\014\n\004Name\030\001 \002(\t\022\016\n\006Number\030\002 \001(\t\022\014\n\004Date\030\003 "
    "\001(\t\022\014\n\004Info\030\004 \001(\t", 2777);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Invoicing/TovTorgInfo.proto", &protobuf_RegisterTypes);
  TovTorgSellerTitleInfo::default_instance_ = new TovTorgSellerTitleInfo();
  TovTorgBuyerTitleInfo::default_instance_ = new TovTorgBuyerTitleInfo();
  TovTorgTable::default_instance_ = new TovTorgTable();
  TovTorgItem::default_instance_ = new TovTorgItem();
  TovTorgTransferInfo::default_instance_ = new TovTorgTransferInfo();
  GroundInfo::default_instance_ = new GroundInfo();
  TovTorgSellerTitleInfo::default_instance_->InitAsDefaultInstance();
  TovTorgBuyerTitleInfo::default_instance_->InitAsDefaultInstance();
  TovTorgTable::default_instance_->InitAsDefaultInstance();
  TovTorgItem::default_instance_->InitAsDefaultInstance();
  TovTorgTransferInfo::default_instance_->InitAsDefaultInstance();
  GroundInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Invoicing_2fTovTorgInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Invoicing_2fTovTorgInfo_2eproto {
  StaticDescriptorInitializer_Invoicing_2fTovTorgInfo_2eproto() {
    protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  }
} static_descriptor_initializer_Invoicing_2fTovTorgInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TovTorgSellerTitleInfo::kSellerFieldNumber;
const int TovTorgSellerTitleInfo::kBuyerFieldNumber;
const int TovTorgSellerTitleInfo::kShipperFieldNumber;
const int TovTorgSellerTitleInfo::kConsigneeFieldNumber;
const int TovTorgSellerTitleInfo::kCarrierFieldNumber;
const int TovTorgSellerTitleInfo::kSignersFieldNumber;
const int TovTorgSellerTitleInfo::kGroundsFieldNumber;
const int TovTorgSellerTitleInfo::kCurrencyFieldNumber;
const int TovTorgSellerTitleInfo::kCurrencyRateFieldNumber;
const int TovTorgSellerTitleInfo::kDocumentDateFieldNumber;
const int TovTorgSellerTitleInfo::kDocumentNumberFieldNumber;
const int TovTorgSellerTitleInfo::kRevisionDateFieldNumber;
const int TovTorgSellerTitleInfo::kRevisionNumberFieldNumber;
const int TovTorgSellerTitleInfo::kTransferInfoFieldNumber;
const int TovTorgSellerTitleInfo::kDocumentCreatorFieldNumber;
const int TovTorgSellerTitleInfo::kDocumentCreatorBaseFieldNumber;
const int TovTorgSellerTitleInfo::kOperationTypeFieldNumber;
const int TovTorgSellerTitleInfo::kGovernmentContractInfoFieldNumber;
const int TovTorgSellerTitleInfo::kTableFieldNumber;
const int TovTorgSellerTitleInfo::kAdditionalInfoIdFieldNumber;
const int TovTorgSellerTitleInfo::kDocumentNameFieldNumber;
#endif  // !_MSC_VER

TovTorgSellerTitleInfo::TovTorgSellerTitleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
}

void TovTorgSellerTitleInfo::InitAsDefaultInstance() {
  seller_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  buyer_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  shipper_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  consignee_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  carrier_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  transferinfo_ = const_cast< ::Diadoc::Api::Proto::Invoicing::TovTorgTransferInfo*>(&::Diadoc::Api::Proto::Invoicing::TovTorgTransferInfo::default_instance());
  table_ = const_cast< ::Diadoc::Api::Proto::Invoicing::TovTorgTable*>(&::Diadoc::Api::Proto::Invoicing::TovTorgTable::default_instance());
  additionalinfoid_ = const_cast< ::Diadoc::Api::Proto::Invoicing::AdditionalInfoId*>(&::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::default_instance());
}

TovTorgSellerTitleInfo::TovTorgSellerTitleInfo(const TovTorgSellerTitleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
}

void TovTorgSellerTitleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  seller_ = NULL;
  buyer_ = NULL;
  shipper_ = NULL;
  consignee_ = NULL;
  carrier_ = NULL;
  currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyrate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revisiondate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revisionnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferinfo_ = NULL;
  documentcreator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentcreatorbase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  governmentcontractinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_ = NULL;
  additionalinfoid_ = NULL;
  documentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TovTorgSellerTitleInfo::~TovTorgSellerTitleInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
  SharedDtor();
}

void TovTorgSellerTitleInfo::SharedDtor() {
  if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currency_;
  }
  if (currencyrate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currencyrate_;
  }
  if (documentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentdate_;
  }
  if (documentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentnumber_;
  }
  if (revisiondate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revisiondate_;
  }
  if (revisionnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revisionnumber_;
  }
  if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreator_;
  }
  if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreatorbase_;
  }
  if (operationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationtype_;
  }
  if (governmentcontractinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete governmentcontractinfo_;
  }
  if (documentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentname_;
  }
  if (this != default_instance_) {
    delete seller_;
    delete buyer_;
    delete shipper_;
    delete consignee_;
    delete carrier_;
    delete transferinfo_;
    delete table_;
    delete additionalinfoid_;
  }
}

void TovTorgSellerTitleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TovTorgSellerTitleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TovTorgSellerTitleInfo_descriptor_;
}

const TovTorgSellerTitleInfo& TovTorgSellerTitleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  return *default_instance_;
}

TovTorgSellerTitleInfo* TovTorgSellerTitleInfo::default_instance_ = NULL;

TovTorgSellerTitleInfo* TovTorgSellerTitleInfo::New() const {
  return new TovTorgSellerTitleInfo;
}

void TovTorgSellerTitleInfo::Clear() {
  if (_has_bits_[0 / 32] & 159) {
    if (has_seller()) {
      if (seller_ != NULL) seller_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_buyer()) {
      if (buyer_ != NULL) buyer_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_shipper()) {
      if (shipper_ != NULL) shipper_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_consignee()) {
      if (consignee_ != NULL) consignee_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_carrier()) {
      if (carrier_ != NULL) carrier_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_currency()) {
      if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        currency_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_currencyrate()) {
      if (currencyrate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        currencyrate_->clear();
      }
    }
    if (has_documentdate()) {
      if (documentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentdate_->clear();
      }
    }
    if (has_documentnumber()) {
      if (documentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentnumber_->clear();
      }
    }
    if (has_revisiondate()) {
      if (revisiondate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revisiondate_->clear();
      }
    }
    if (has_revisionnumber()) {
      if (revisionnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revisionnumber_->clear();
      }
    }
    if (has_transferinfo()) {
      if (transferinfo_ != NULL) transferinfo_->::Diadoc::Api::Proto::Invoicing::TovTorgTransferInfo::Clear();
    }
    if (has_documentcreator()) {
      if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreator_->clear();
      }
    }
    if (has_documentcreatorbase()) {
      if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreatorbase_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 2031616) {
    if (has_operationtype()) {
      if (operationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationtype_->clear();
      }
    }
    if (has_governmentcontractinfo()) {
      if (governmentcontractinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        governmentcontractinfo_->clear();
      }
    }
    if (has_table()) {
      if (table_ != NULL) table_->::Diadoc::Api::Proto::Invoicing::TovTorgTable::Clear();
    }
    if (has_additionalinfoid()) {
      if (additionalinfoid_ != NULL) additionalinfoid_->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::Clear();
    }
    if (has_documentname()) {
      if (documentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentname_->clear();
      }
    }
  }
  signers_.Clear();
  grounds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TovTorgSellerTitleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seller()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Buyer;
        break;
      }

      // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 2;
      case 2: {
        if (tag == 18) {
         parse_Buyer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buyer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Shipper;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Shipper = 3;
      case 3: {
        if (tag == 26) {
         parse_Shipper:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shipper()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Consignee;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Consignee = 4;
      case 4: {
        if (tag == 34) {
         parse_Consignee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consignee()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Carrier;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Carrier = 5;
      case 5: {
        if (tag == 42) {
         parse_Carrier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_carrier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Signers;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 6;
      case 6: {
        if (tag == 50) {
         parse_Signers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Signers;
        if (input->ExpectTag(58)) goto parse_Grounds;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.GroundInfo Grounds = 7;
      case 7: {
        if (tag == 58) {
         parse_Grounds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grounds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Grounds;
        if (input->ExpectTag(66)) goto parse_Currency;
        break;
      }

      // required string Currency = 8;
      case 8: {
        if (tag == 66) {
         parse_Currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "currency");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_CurrencyRate;
        break;
      }

      // optional string CurrencyRate = 9;
      case 9: {
        if (tag == 74) {
         parse_CurrencyRate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currencyrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currencyrate().data(), this->currencyrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "currencyrate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_DocumentDate;
        break;
      }

      // required string DocumentDate = 10;
      case 10: {
        if (tag == 82) {
         parse_DocumentDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentdate().data(), this->documentdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_DocumentNumber;
        break;
      }

      // optional string DocumentNumber = 11;
      case 11: {
        if (tag == 90) {
         parse_DocumentNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentnumber().data(), this->documentnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_RevisionDate;
        break;
      }

      // optional string RevisionDate = 12;
      case 12: {
        if (tag == 98) {
         parse_RevisionDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revisiondate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->revisiondate().data(), this->revisiondate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revisiondate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_RevisionNumber;
        break;
      }

      // optional string RevisionNumber = 13;
      case 13: {
        if (tag == 106) {
         parse_RevisionNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revisionnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->revisionnumber().data(), this->revisionnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revisionnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_TransferInfo;
        break;
      }

      // required .Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo TransferInfo = 14;
      case 14: {
        if (tag == 114) {
         parse_TransferInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transferinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_DocumentCreator;
        break;
      }

      // required string DocumentCreator = 15;
      case 15: {
        if (tag == 122) {
         parse_DocumentCreator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreator().data(), this->documentcreator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_DocumentCreatorBase;
        break;
      }

      // optional string DocumentCreatorBase = 16;
      case 16: {
        if (tag == 130) {
         parse_DocumentCreatorBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreatorbase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreatorbase().data(), this->documentcreatorbase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreatorbase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_OperationType;
        break;
      }

      // optional string OperationType = 17;
      case 17: {
        if (tag == 138) {
         parse_OperationType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationtype().data(), this->operationtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_GovernmentContractInfo;
        break;
      }

      // optional string GovernmentContractInfo = 18;
      case 18: {
        if (tag == 146) {
         parse_GovernmentContractInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_governmentcontractinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->governmentcontractinfo().data(), this->governmentcontractinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "governmentcontractinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_Table;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.TovTorgTable Table = 19;
      case 19: {
        if (tag == 154) {
         parse_Table:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_table()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_AdditionalInfoId;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 20;
      case 20: {
        if (tag == 162) {
         parse_AdditionalInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_additionalinfoid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_DocumentName;
        break;
      }

      // required string DocumentName = 21;
      case 21: {
        if (tag == 170) {
         parse_DocumentName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentname().data(), this->documentname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
  return false;
#undef DO_
}

void TovTorgSellerTitleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 1;
  if (has_seller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->seller(), output);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 2;
  if (has_buyer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->buyer(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Shipper = 3;
  if (has_shipper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->shipper(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Consignee = 4;
  if (has_consignee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->consignee(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Carrier = 5;
  if (has_carrier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->carrier(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 6;
  for (int i = 0; i < this->signers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->signers(i), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.GroundInfo Grounds = 7;
  for (int i = 0; i < this->grounds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->grounds(i), output);
  }

  // required string Currency = 8;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->currency(), output);
  }

  // optional string CurrencyRate = 9;
  if (has_currencyrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currencyrate().data(), this->currencyrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currencyrate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->currencyrate(), output);
  }

  // required string DocumentDate = 10;
  if (has_documentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentdate().data(), this->documentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->documentdate(), output);
  }

  // optional string DocumentNumber = 11;
  if (has_documentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentnumber().data(), this->documentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->documentnumber(), output);
  }

  // optional string RevisionDate = 12;
  if (has_revisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisiondate().data(), this->revisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisiondate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->revisiondate(), output);
  }

  // optional string RevisionNumber = 13;
  if (has_revisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisionnumber().data(), this->revisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisionnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->revisionnumber(), output);
  }

  // required .Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo TransferInfo = 14;
  if (has_transferinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->transferinfo(), output);
  }

  // required string DocumentCreator = 15;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->documentcreator(), output);
  }

  // optional string DocumentCreatorBase = 16;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->documentcreatorbase(), output);
  }

  // optional string OperationType = 17;
  if (has_operationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtype().data(), this->operationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->operationtype(), output);
  }

  // optional string GovernmentContractInfo = 18;
  if (has_governmentcontractinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->governmentcontractinfo().data(), this->governmentcontractinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "governmentcontractinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->governmentcontractinfo(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.TovTorgTable Table = 19;
  if (has_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->table(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 20;
  if (has_additionalinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->additionalinfoid(), output);
  }

  // required string DocumentName = 21;
  if (has_documentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentname().data(), this->documentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->documentname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
}

::google::protobuf::uint8* TovTorgSellerTitleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 1;
  if (has_seller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->seller(), target);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 2;
  if (has_buyer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->buyer(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Shipper = 3;
  if (has_shipper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->shipper(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Consignee = 4;
  if (has_consignee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->consignee(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Carrier = 5;
  if (has_carrier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->carrier(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 6;
  for (int i = 0; i < this->signers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->signers(i), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.GroundInfo Grounds = 7;
  for (int i = 0; i < this->grounds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->grounds(i), target);
  }

  // required string Currency = 8;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->currency(), target);
  }

  // optional string CurrencyRate = 9;
  if (has_currencyrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currencyrate().data(), this->currencyrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currencyrate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->currencyrate(), target);
  }

  // required string DocumentDate = 10;
  if (has_documentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentdate().data(), this->documentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->documentdate(), target);
  }

  // optional string DocumentNumber = 11;
  if (has_documentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentnumber().data(), this->documentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->documentnumber(), target);
  }

  // optional string RevisionDate = 12;
  if (has_revisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisiondate().data(), this->revisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisiondate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->revisiondate(), target);
  }

  // optional string RevisionNumber = 13;
  if (has_revisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisionnumber().data(), this->revisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisionnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->revisionnumber(), target);
  }

  // required .Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo TransferInfo = 14;
  if (has_transferinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->transferinfo(), target);
  }

  // required string DocumentCreator = 15;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->documentcreator(), target);
  }

  // optional string DocumentCreatorBase = 16;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->documentcreatorbase(), target);
  }

  // optional string OperationType = 17;
  if (has_operationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtype().data(), this->operationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->operationtype(), target);
  }

  // optional string GovernmentContractInfo = 18;
  if (has_governmentcontractinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->governmentcontractinfo().data(), this->governmentcontractinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "governmentcontractinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->governmentcontractinfo(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.TovTorgTable Table = 19;
  if (has_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->table(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 20;
  if (has_additionalinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->additionalinfoid(), target);
  }

  // required string DocumentName = 21;
  if (has_documentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentname().data(), this->documentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->documentname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.TovTorgSellerTitleInfo)
  return target;
}

int TovTorgSellerTitleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 1;
    if (has_seller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->seller());
    }

    // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 2;
    if (has_buyer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buyer());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Shipper = 3;
    if (has_shipper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shipper());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Consignee = 4;
    if (has_consignee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consignee());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Carrier = 5;
    if (has_carrier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->carrier());
    }

    // required string Currency = 8;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string CurrencyRate = 9;
    if (has_currencyrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currencyrate());
    }

    // required string DocumentDate = 10;
    if (has_documentdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentdate());
    }

    // optional string DocumentNumber = 11;
    if (has_documentnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentnumber());
    }

    // optional string RevisionDate = 12;
    if (has_revisiondate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->revisiondate());
    }

    // optional string RevisionNumber = 13;
    if (has_revisionnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->revisionnumber());
    }

    // required .Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo TransferInfo = 14;
    if (has_transferinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transferinfo());
    }

    // required string DocumentCreator = 15;
    if (has_documentcreator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreator());
    }

    // optional string DocumentCreatorBase = 16;
    if (has_documentcreatorbase()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreatorbase());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string OperationType = 17;
    if (has_operationtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationtype());
    }

    // optional string GovernmentContractInfo = 18;
    if (has_governmentcontractinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->governmentcontractinfo());
    }

    // optional .Diadoc.Api.Proto.Invoicing.TovTorgTable Table = 19;
    if (has_table()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->table());
    }

    // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 20;
    if (has_additionalinfoid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additionalinfoid());
    }

    // required string DocumentName = 21;
    if (has_documentname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentname());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 6;
  total_size += 1 * this->signers_size();
  for (int i = 0; i < this->signers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signers(i));
  }

  // repeated .Diadoc.Api.Proto.Invoicing.GroundInfo Grounds = 7;
  total_size += 1 * this->grounds_size();
  for (int i = 0; i < this->grounds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grounds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TovTorgSellerTitleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TovTorgSellerTitleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TovTorgSellerTitleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TovTorgSellerTitleInfo::MergeFrom(const TovTorgSellerTitleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  signers_.MergeFrom(from.signers_);
  grounds_.MergeFrom(from.grounds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seller()) {
      mutable_seller()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.seller());
    }
    if (from.has_buyer()) {
      mutable_buyer()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.buyer());
    }
    if (from.has_shipper()) {
      mutable_shipper()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.shipper());
    }
    if (from.has_consignee()) {
      mutable_consignee()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.consignee());
    }
    if (from.has_carrier()) {
      mutable_carrier()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.carrier());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_currencyrate()) {
      set_currencyrate(from.currencyrate());
    }
    if (from.has_documentdate()) {
      set_documentdate(from.documentdate());
    }
    if (from.has_documentnumber()) {
      set_documentnumber(from.documentnumber());
    }
    if (from.has_revisiondate()) {
      set_revisiondate(from.revisiondate());
    }
    if (from.has_revisionnumber()) {
      set_revisionnumber(from.revisionnumber());
    }
    if (from.has_transferinfo()) {
      mutable_transferinfo()->::Diadoc::Api::Proto::Invoicing::TovTorgTransferInfo::MergeFrom(from.transferinfo());
    }
    if (from.has_documentcreator()) {
      set_documentcreator(from.documentcreator());
    }
    if (from.has_documentcreatorbase()) {
      set_documentcreatorbase(from.documentcreatorbase());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_operationtype()) {
      set_operationtype(from.operationtype());
    }
    if (from.has_governmentcontractinfo()) {
      set_governmentcontractinfo(from.governmentcontractinfo());
    }
    if (from.has_table()) {
      mutable_table()->::Diadoc::Api::Proto::Invoicing::TovTorgTable::MergeFrom(from.table());
    }
    if (from.has_additionalinfoid()) {
      mutable_additionalinfoid()->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::MergeFrom(from.additionalinfoid());
    }
    if (from.has_documentname()) {
      set_documentname(from.documentname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TovTorgSellerTitleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TovTorgSellerTitleInfo::CopyFrom(const TovTorgSellerTitleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TovTorgSellerTitleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00106283) != 0x00106283) return false;

  if (has_seller()) {
    if (!this->seller().IsInitialized()) return false;
  }
  if (has_buyer()) {
    if (!this->buyer().IsInitialized()) return false;
  }
  if (has_shipper()) {
    if (!this->shipper().IsInitialized()) return false;
  }
  if (has_consignee()) {
    if (!this->consignee().IsInitialized()) return false;
  }
  if (has_carrier()) {
    if (!this->carrier().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->signers())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->grounds())) return false;
  if (has_transferinfo()) {
    if (!this->transferinfo().IsInitialized()) return false;
  }
  if (has_table()) {
    if (!this->table().IsInitialized()) return false;
  }
  if (has_additionalinfoid()) {
    if (!this->additionalinfoid().IsInitialized()) return false;
  }
  return true;
}

void TovTorgSellerTitleInfo::Swap(TovTorgSellerTitleInfo* other) {
  if (other != this) {
    std::swap(seller_, other->seller_);
    std::swap(buyer_, other->buyer_);
    std::swap(shipper_, other->shipper_);
    std::swap(consignee_, other->consignee_);
    std::swap(carrier_, other->carrier_);
    signers_.Swap(&other->signers_);
    grounds_.Swap(&other->grounds_);
    std::swap(currency_, other->currency_);
    std::swap(currencyrate_, other->currencyrate_);
    std::swap(documentdate_, other->documentdate_);
    std::swap(documentnumber_, other->documentnumber_);
    std::swap(revisiondate_, other->revisiondate_);
    std::swap(revisionnumber_, other->revisionnumber_);
    std::swap(transferinfo_, other->transferinfo_);
    std::swap(documentcreator_, other->documentcreator_);
    std::swap(documentcreatorbase_, other->documentcreatorbase_);
    std::swap(operationtype_, other->operationtype_);
    std::swap(governmentcontractinfo_, other->governmentcontractinfo_);
    std::swap(table_, other->table_);
    std::swap(additionalinfoid_, other->additionalinfoid_);
    std::swap(documentname_, other->documentname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TovTorgSellerTitleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TovTorgSellerTitleInfo_descriptor_;
  metadata.reflection = TovTorgSellerTitleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TovTorgBuyerTitleInfo::kDocumentCreatorFieldNumber;
const int TovTorgBuyerTitleInfo::kDocumentCreatorBaseFieldNumber;
const int TovTorgBuyerTitleInfo::kOperationCodeFieldNumber;
const int TovTorgBuyerTitleInfo::kOperationContentFieldNumber;
const int TovTorgBuyerTitleInfo::kAcceptanceDateFieldNumber;
const int TovTorgBuyerTitleInfo::kEmployeeFieldNumber;
const int TovTorgBuyerTitleInfo::kOtherIssuerFieldNumber;
const int TovTorgBuyerTitleInfo::kAdditionalInfoIdFieldNumber;
const int TovTorgBuyerTitleInfo::kSignersFieldNumber;
#endif  // !_MSC_VER

TovTorgBuyerTitleInfo::TovTorgBuyerTitleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
}

void TovTorgBuyerTitleInfo::InitAsDefaultInstance() {
  employee_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Employee*>(&::Diadoc::Api::Proto::Invoicing::Employee::default_instance());
  otherissuer_ = const_cast< ::Diadoc::Api::Proto::Invoicing::OtherIssuer*>(&::Diadoc::Api::Proto::Invoicing::OtherIssuer::default_instance());
  additionalinfoid_ = const_cast< ::Diadoc::Api::Proto::Invoicing::AdditionalInfoId*>(&::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::default_instance());
}

TovTorgBuyerTitleInfo::TovTorgBuyerTitleInfo(const TovTorgBuyerTitleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
}

void TovTorgBuyerTitleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  documentcreator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentcreatorbase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acceptancedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_ = NULL;
  otherissuer_ = NULL;
  additionalinfoid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TovTorgBuyerTitleInfo::~TovTorgBuyerTitleInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
  SharedDtor();
}

void TovTorgBuyerTitleInfo::SharedDtor() {
  if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreator_;
  }
  if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreatorbase_;
  }
  if (operationcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationcode_;
  }
  if (operationcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationcontent_;
  }
  if (acceptancedate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete acceptancedate_;
  }
  if (this != default_instance_) {
    delete employee_;
    delete otherissuer_;
    delete additionalinfoid_;
  }
}

void TovTorgBuyerTitleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TovTorgBuyerTitleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TovTorgBuyerTitleInfo_descriptor_;
}

const TovTorgBuyerTitleInfo& TovTorgBuyerTitleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  return *default_instance_;
}

TovTorgBuyerTitleInfo* TovTorgBuyerTitleInfo::default_instance_ = NULL;

TovTorgBuyerTitleInfo* TovTorgBuyerTitleInfo::New() const {
  return new TovTorgBuyerTitleInfo;
}

void TovTorgBuyerTitleInfo::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_documentcreator()) {
      if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreator_->clear();
      }
    }
    if (has_documentcreatorbase()) {
      if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreatorbase_->clear();
      }
    }
    if (has_operationcode()) {
      if (operationcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationcode_->clear();
      }
    }
    if (has_operationcontent()) {
      if (operationcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationcontent_->clear();
      }
    }
    if (has_acceptancedate()) {
      if (acceptancedate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        acceptancedate_->clear();
      }
    }
    if (has_employee()) {
      if (employee_ != NULL) employee_->::Diadoc::Api::Proto::Invoicing::Employee::Clear();
    }
    if (has_otherissuer()) {
      if (otherissuer_ != NULL) otherissuer_->::Diadoc::Api::Proto::Invoicing::OtherIssuer::Clear();
    }
    if (has_additionalinfoid()) {
      if (additionalinfoid_ != NULL) additionalinfoid_->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::Clear();
    }
  }
  signers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TovTorgBuyerTitleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string DocumentCreator = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreator().data(), this->documentcreator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DocumentCreatorBase;
        break;
      }

      // optional string DocumentCreatorBase = 2;
      case 2: {
        if (tag == 18) {
         parse_DocumentCreatorBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreatorbase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreatorbase().data(), this->documentcreatorbase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreatorbase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_OperationCode;
        break;
      }

      // optional string OperationCode = 3;
      case 3: {
        if (tag == 26) {
         parse_OperationCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationcode().data(), this->operationcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_OperationContent;
        break;
      }

      // required string OperationContent = 4;
      case 4: {
        if (tag == 34) {
         parse_OperationContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationcontent().data(), this->operationcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationcontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_AcceptanceDate;
        break;
      }

      // optional string AcceptanceDate = 5;
      case 5: {
        if (tag == 42) {
         parse_AcceptanceDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acceptancedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->acceptancedate().data(), this->acceptancedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acceptancedate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Employee;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 6;
      case 6: {
        if (tag == 50) {
         parse_Employee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_employee()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_OtherIssuer;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 7;
      case 7: {
        if (tag == 58) {
         parse_OtherIssuer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_otherissuer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_AdditionalInfoId;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 8;
      case 8: {
        if (tag == 66) {
         parse_AdditionalInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_additionalinfoid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Signers;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
      case 9: {
        if (tag == 74) {
         parse_Signers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Signers;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
  return false;
#undef DO_
}

void TovTorgBuyerTitleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
  // required string DocumentCreator = 1;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->documentcreator(), output);
  }

  // optional string DocumentCreatorBase = 2;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->documentcreatorbase(), output);
  }

  // optional string OperationCode = 3;
  if (has_operationcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcode().data(), this->operationcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operationcode(), output);
  }

  // required string OperationContent = 4;
  if (has_operationcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcontent().data(), this->operationcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->operationcontent(), output);
  }

  // optional string AcceptanceDate = 5;
  if (has_acceptancedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acceptancedate().data(), this->acceptancedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acceptancedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->acceptancedate(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 6;
  if (has_employee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->employee(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 7;
  if (has_otherissuer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->otherissuer(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 8;
  if (has_additionalinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->additionalinfoid(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  for (int i = 0; i < this->signers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->signers(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
}

::google::protobuf::uint8* TovTorgBuyerTitleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
  // required string DocumentCreator = 1;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->documentcreator(), target);
  }

  // optional string DocumentCreatorBase = 2;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->documentcreatorbase(), target);
  }

  // optional string OperationCode = 3;
  if (has_operationcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcode().data(), this->operationcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operationcode(), target);
  }

  // required string OperationContent = 4;
  if (has_operationcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcontent().data(), this->operationcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->operationcontent(), target);
  }

  // optional string AcceptanceDate = 5;
  if (has_acceptancedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acceptancedate().data(), this->acceptancedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acceptancedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->acceptancedate(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 6;
  if (has_employee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->employee(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 7;
  if (has_otherissuer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->otherissuer(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 8;
  if (has_additionalinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->additionalinfoid(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  for (int i = 0; i < this->signers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->signers(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.TovTorgBuyerTitleInfo)
  return target;
}

int TovTorgBuyerTitleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string DocumentCreator = 1;
    if (has_documentcreator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreator());
    }

    // optional string DocumentCreatorBase = 2;
    if (has_documentcreatorbase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreatorbase());
    }

    // optional string OperationCode = 3;
    if (has_operationcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationcode());
    }

    // required string OperationContent = 4;
    if (has_operationcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationcontent());
    }

    // optional string AcceptanceDate = 5;
    if (has_acceptancedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acceptancedate());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 6;
    if (has_employee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->employee());
    }

    // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 7;
    if (has_otherissuer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->otherissuer());
    }

    // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 8;
    if (has_additionalinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additionalinfoid());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  total_size += 1 * this->signers_size();
  for (int i = 0; i < this->signers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TovTorgBuyerTitleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TovTorgBuyerTitleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TovTorgBuyerTitleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TovTorgBuyerTitleInfo::MergeFrom(const TovTorgBuyerTitleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  signers_.MergeFrom(from.signers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_documentcreator()) {
      set_documentcreator(from.documentcreator());
    }
    if (from.has_documentcreatorbase()) {
      set_documentcreatorbase(from.documentcreatorbase());
    }
    if (from.has_operationcode()) {
      set_operationcode(from.operationcode());
    }
    if (from.has_operationcontent()) {
      set_operationcontent(from.operationcontent());
    }
    if (from.has_acceptancedate()) {
      set_acceptancedate(from.acceptancedate());
    }
    if (from.has_employee()) {
      mutable_employee()->::Diadoc::Api::Proto::Invoicing::Employee::MergeFrom(from.employee());
    }
    if (from.has_otherissuer()) {
      mutable_otherissuer()->::Diadoc::Api::Proto::Invoicing::OtherIssuer::MergeFrom(from.otherissuer());
    }
    if (from.has_additionalinfoid()) {
      mutable_additionalinfoid()->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::MergeFrom(from.additionalinfoid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TovTorgBuyerTitleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TovTorgBuyerTitleInfo::CopyFrom(const TovTorgBuyerTitleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TovTorgBuyerTitleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  if (has_employee()) {
    if (!this->employee().IsInitialized()) return false;
  }
  if (has_otherissuer()) {
    if (!this->otherissuer().IsInitialized()) return false;
  }
  if (has_additionalinfoid()) {
    if (!this->additionalinfoid().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->signers())) return false;
  return true;
}

void TovTorgBuyerTitleInfo::Swap(TovTorgBuyerTitleInfo* other) {
  if (other != this) {
    std::swap(documentcreator_, other->documentcreator_);
    std::swap(documentcreatorbase_, other->documentcreatorbase_);
    std::swap(operationcode_, other->operationcode_);
    std::swap(operationcontent_, other->operationcontent_);
    std::swap(acceptancedate_, other->acceptancedate_);
    std::swap(employee_, other->employee_);
    std::swap(otherissuer_, other->otherissuer_);
    std::swap(additionalinfoid_, other->additionalinfoid_);
    signers_.Swap(&other->signers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TovTorgBuyerTitleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TovTorgBuyerTitleInfo_descriptor_;
  metadata.reflection = TovTorgBuyerTitleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TovTorgTable::kItemsFieldNumber;
const int TovTorgTable::kTotalQuantityFieldNumber;
const int TovTorgTable::kTotalGrossFieldNumber;
const int TovTorgTable::kTotalNetFieldNumber;
const int TovTorgTable::kTotalWithVatExcludedFieldNumber;
const int TovTorgTable::kTotalVatFieldNumber;
const int TovTorgTable::kTotalFieldNumber;
#endif  // !_MSC_VER

TovTorgTable::TovTorgTable()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.TovTorgTable)
}

void TovTorgTable::InitAsDefaultInstance() {
}

TovTorgTable::TovTorgTable(const TovTorgTable& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.TovTorgTable)
}

void TovTorgTable::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  totalquantity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalgross_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalnet_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalwithvatexcluded_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalvat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TovTorgTable::~TovTorgTable() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.TovTorgTable)
  SharedDtor();
}

void TovTorgTable::SharedDtor() {
  if (totalquantity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalquantity_;
  }
  if (totalgross_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalgross_;
  }
  if (totalnet_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalnet_;
  }
  if (totalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalwithvatexcluded_;
  }
  if (totalvat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalvat_;
  }
  if (total_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete total_;
  }
  if (this != default_instance_) {
  }
}

void TovTorgTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TovTorgTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TovTorgTable_descriptor_;
}

const TovTorgTable& TovTorgTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  return *default_instance_;
}

TovTorgTable* TovTorgTable::default_instance_ = NULL;

TovTorgTable* TovTorgTable::New() const {
  return new TovTorgTable;
}

void TovTorgTable::Clear() {
  if (_has_bits_[0 / 32] & 126) {
    if (has_totalquantity()) {
      if (totalquantity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalquantity_->clear();
      }
    }
    if (has_totalgross()) {
      if (totalgross_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalgross_->clear();
      }
    }
    if (has_totalnet()) {
      if (totalnet_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalnet_->clear();
      }
    }
    if (has_totalwithvatexcluded()) {
      if (totalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalwithvatexcluded_->clear();
      }
    }
    if (has_totalvat()) {
      if (totalvat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalvat_->clear();
      }
    }
    if (has_total()) {
      if (total_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        total_->clear();
      }
    }
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TovTorgTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.TovTorgTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Diadoc.Api.Proto.Invoicing.TovTorgItem Items = 1;
      case 1: {
        if (tag == 10) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Items;
        if (input->ExpectTag(18)) goto parse_TotalQuantity;
        break;
      }

      // optional string TotalQuantity = 2;
      case 2: {
        if (tag == 18) {
         parse_TotalQuantity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalquantity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalquantity().data(), this->totalquantity().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalquantity");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TotalGross;
        break;
      }

      // optional string TotalGross = 3;
      case 3: {
        if (tag == 26) {
         parse_TotalGross:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalgross()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalgross().data(), this->totalgross().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalgross");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_TotalNet;
        break;
      }

      // optional string TotalNet = 4;
      case 4: {
        if (tag == 34) {
         parse_TotalNet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalnet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalnet().data(), this->totalnet().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalnet");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TotalWithVatExcluded;
        break;
      }

      // optional string TotalWithVatExcluded = 5;
      case 5: {
        if (tag == 42) {
         parse_TotalWithVatExcluded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalwithvatexcluded()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalwithvatexcluded");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_TotalVat;
        break;
      }

      // optional string TotalVat = 6;
      case 6: {
        if (tag == 50) {
         parse_TotalVat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalvat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalvat().data(), this->totalvat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalvat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Total;
        break;
      }

      // optional string Total = 7;
      case 7: {
        if (tag == 58) {
         parse_Total:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_total()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->total().data(), this->total().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "total");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.TovTorgTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.TovTorgTable)
  return false;
#undef DO_
}

void TovTorgTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.TovTorgTable)
  // repeated .Diadoc.Api.Proto.Invoicing.TovTorgItem Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // optional string TotalQuantity = 2;
  if (has_totalquantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalquantity().data(), this->totalquantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalquantity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->totalquantity(), output);
  }

  // optional string TotalGross = 3;
  if (has_totalgross()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalgross().data(), this->totalgross().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalgross");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->totalgross(), output);
  }

  // optional string TotalNet = 4;
  if (has_totalnet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalnet().data(), this->totalnet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalnet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->totalnet(), output);
  }

  // optional string TotalWithVatExcluded = 5;
  if (has_totalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalwithvatexcluded");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->totalwithvatexcluded(), output);
  }

  // optional string TotalVat = 6;
  if (has_totalvat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalvat().data(), this->totalvat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalvat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->totalvat(), output);
  }

  // optional string Total = 7;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "total");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->total(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.TovTorgTable)
}

::google::protobuf::uint8* TovTorgTable::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.TovTorgTable)
  // repeated .Diadoc.Api.Proto.Invoicing.TovTorgItem Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // optional string TotalQuantity = 2;
  if (has_totalquantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalquantity().data(), this->totalquantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalquantity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->totalquantity(), target);
  }

  // optional string TotalGross = 3;
  if (has_totalgross()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalgross().data(), this->totalgross().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalgross");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->totalgross(), target);
  }

  // optional string TotalNet = 4;
  if (has_totalnet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalnet().data(), this->totalnet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalnet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->totalnet(), target);
  }

  // optional string TotalWithVatExcluded = 5;
  if (has_totalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalwithvatexcluded");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->totalwithvatexcluded(), target);
  }

  // optional string TotalVat = 6;
  if (has_totalvat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalvat().data(), this->totalvat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalvat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->totalvat(), target);
  }

  // optional string Total = 7;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "total");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->total(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.TovTorgTable)
  return target;
}

int TovTorgTable::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string TotalQuantity = 2;
    if (has_totalquantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalquantity());
    }

    // optional string TotalGross = 3;
    if (has_totalgross()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalgross());
    }

    // optional string TotalNet = 4;
    if (has_totalnet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalnet());
    }

    // optional string TotalWithVatExcluded = 5;
    if (has_totalwithvatexcluded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalwithvatexcluded());
    }

    // optional string TotalVat = 6;
    if (has_totalvat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalvat());
    }

    // optional string Total = 7;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->total());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.TovTorgItem Items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TovTorgTable::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TovTorgTable* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TovTorgTable*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TovTorgTable::MergeFrom(const TovTorgTable& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_totalquantity()) {
      set_totalquantity(from.totalquantity());
    }
    if (from.has_totalgross()) {
      set_totalgross(from.totalgross());
    }
    if (from.has_totalnet()) {
      set_totalnet(from.totalnet());
    }
    if (from.has_totalwithvatexcluded()) {
      set_totalwithvatexcluded(from.totalwithvatexcluded());
    }
    if (from.has_totalvat()) {
      set_totalvat(from.totalvat());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TovTorgTable::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TovTorgTable::CopyFrom(const TovTorgTable& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TovTorgTable::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void TovTorgTable::Swap(TovTorgTable* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(totalquantity_, other->totalquantity_);
    std::swap(totalgross_, other->totalgross_);
    std::swap(totalnet_, other->totalnet_);
    std::swap(totalwithvatexcluded_, other->totalwithvatexcluded_);
    std::swap(totalvat_, other->totalvat_);
    std::swap(total_, other->total_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TovTorgTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TovTorgTable_descriptor_;
  metadata.reflection = TovTorgTable_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TovTorgItem::kProductFieldNumber;
const int TovTorgItem::kFeatureFieldNumber;
const int TovTorgItem::kSortFieldNumber;
const int TovTorgItem::kVendorCodeFieldNumber;
const int TovTorgItem::kProductCodeFieldNumber;
const int TovTorgItem::kUnitNameFieldNumber;
const int TovTorgItem::kUnitFieldNumber;
const int TovTorgItem::kPackageTypeFieldNumber;
const int TovTorgItem::kQuantityInPackFieldNumber;
const int TovTorgItem::kQuantityFieldNumber;
const int TovTorgItem::kGrossFieldNumber;
const int TovTorgItem::kNetFieldNumber;
const int TovTorgItem::kItemToReleaseFieldNumber;
const int TovTorgItem::kPriceFieldNumber;
const int TovTorgItem::kSubtotalWithVatExcludedFieldNumber;
const int TovTorgItem::kTaxRateFieldNumber;
const int TovTorgItem::kVatFieldNumber;
const int TovTorgItem::kSubtotalFieldNumber;
const int TovTorgItem::kItemAccountDebitFieldNumber;
const int TovTorgItem::kItemAccountCreditFieldNumber;
const int TovTorgItem::kAdditionalInfosFieldNumber;
#endif  // !_MSC_VER

TovTorgItem::TovTorgItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.TovTorgItem)
}

void TovTorgItem::InitAsDefaultInstance() {
}

TovTorgItem::TovTorgItem(const TovTorgItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.TovTorgItem)
}

void TovTorgItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  product_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sort_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendorcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unitname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packagetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantityinpack_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gross_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  net_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemtorelease_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtotalwithvatexcluded_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taxrate_ = 3;
  vat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtotal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemaccountdebit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemaccountcredit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TovTorgItem::~TovTorgItem() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.TovTorgItem)
  SharedDtor();
}

void TovTorgItem::SharedDtor() {
  if (product_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete product_;
  }
  if (feature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete feature_;
  }
  if (sort_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sort_;
  }
  if (vendorcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vendorcode_;
  }
  if (productcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete productcode_;
  }
  if (unitname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unitname_;
  }
  if (unit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unit_;
  }
  if (packagetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packagetype_;
  }
  if (quantityinpack_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete quantityinpack_;
  }
  if (quantity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete quantity_;
  }
  if (gross_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gross_;
  }
  if (net_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete net_;
  }
  if (itemtorelease_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemtorelease_;
  }
  if (price_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete price_;
  }
  if (subtotalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subtotalwithvatexcluded_;
  }
  if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vat_;
  }
  if (subtotal_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subtotal_;
  }
  if (itemaccountdebit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemaccountdebit_;
  }
  if (itemaccountcredit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemaccountcredit_;
  }
  if (this != default_instance_) {
  }
}

void TovTorgItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TovTorgItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TovTorgItem_descriptor_;
}

const TovTorgItem& TovTorgItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  return *default_instance_;
}

TovTorgItem* TovTorgItem::default_instance_ = NULL;

TovTorgItem* TovTorgItem::New() const {
  return new TovTorgItem;
}

void TovTorgItem::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_product()) {
      if (product_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        product_->clear();
      }
    }
    if (has_feature()) {
      if (feature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        feature_->clear();
      }
    }
    if (has_sort()) {
      if (sort_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sort_->clear();
      }
    }
    if (has_vendorcode()) {
      if (vendorcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        vendorcode_->clear();
      }
    }
    if (has_productcode()) {
      if (productcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        productcode_->clear();
      }
    }
    if (has_unitname()) {
      if (unitname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        unitname_->clear();
      }
    }
    if (has_unit()) {
      if (unit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        unit_->clear();
      }
    }
    if (has_packagetype()) {
      if (packagetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        packagetype_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_quantityinpack()) {
      if (quantityinpack_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        quantityinpack_->clear();
      }
    }
    if (has_quantity()) {
      if (quantity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        quantity_->clear();
      }
    }
    if (has_gross()) {
      if (gross_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gross_->clear();
      }
    }
    if (has_net()) {
      if (net_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        net_->clear();
      }
    }
    if (has_itemtorelease()) {
      if (itemtorelease_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemtorelease_->clear();
      }
    }
    if (has_price()) {
      if (price_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        price_->clear();
      }
    }
    if (has_subtotalwithvatexcluded()) {
      if (subtotalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        subtotalwithvatexcluded_->clear();
      }
    }
    taxrate_ = 3;
  }
  if (_has_bits_[16 / 32] & 983040) {
    if (has_vat()) {
      if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        vat_->clear();
      }
    }
    if (has_subtotal()) {
      if (subtotal_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        subtotal_->clear();
      }
    }
    if (has_itemaccountdebit()) {
      if (itemaccountdebit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemaccountdebit_->clear();
      }
    }
    if (has_itemaccountcredit()) {
      if (itemaccountcredit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemaccountcredit_->clear();
      }
    }
  }
  additionalinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TovTorgItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.TovTorgItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Product = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product().data(), this->product().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "product");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Feature;
        break;
      }

      // optional string Feature = 2;
      case 2: {
        if (tag == 18) {
         parse_Feature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_feature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->feature().data(), this->feature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "feature");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Sort;
        break;
      }

      // optional string Sort = 3;
      case 3: {
        if (tag == 26) {
         parse_Sort:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sort()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sort().data(), this->sort().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sort");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_VendorCode;
        break;
      }

      // optional string VendorCode = 4;
      case 4: {
        if (tag == 34) {
         parse_VendorCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vendorcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vendorcode().data(), this->vendorcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vendorcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ProductCode;
        break;
      }

      // optional string ProductCode = 5;
      case 5: {
        if (tag == 42) {
         parse_ProductCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productcode().data(), this->productcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "productcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_UnitName;
        break;
      }

      // optional string UnitName = 6;
      case 6: {
        if (tag == 50) {
         parse_UnitName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unitname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unitname().data(), this->unitname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unitname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Unit;
        break;
      }

      // required string Unit = 7;
      case 7: {
        if (tag == 58) {
         parse_Unit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unit().data(), this->unit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_PackageType;
        break;
      }

      // optional string PackageType = 8;
      case 8: {
        if (tag == 66) {
         parse_PackageType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->packagetype().data(), this->packagetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "packagetype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_QuantityInPack;
        break;
      }

      // optional string QuantityInPack = 9;
      case 9: {
        if (tag == 74) {
         parse_QuantityInPack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quantityinpack()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->quantityinpack().data(), this->quantityinpack().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "quantityinpack");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Quantity;
        break;
      }

      // optional string Quantity = 10;
      case 10: {
        if (tag == 82) {
         parse_Quantity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quantity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->quantity().data(), this->quantity().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "quantity");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_Gross;
        break;
      }

      // optional string Gross = 11;
      case 11: {
        if (tag == 90) {
         parse_Gross:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gross()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gross().data(), this->gross().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gross");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_Net;
        break;
      }

      // required string Net = 12;
      case 12: {
        if (tag == 98) {
         parse_Net:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_net()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->net().data(), this->net().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_ItemToRelease;
        break;
      }

      // optional string ItemToRelease = 13;
      case 13: {
        if (tag == 106) {
         parse_ItemToRelease:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemtorelease()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemtorelease().data(), this->itemtorelease().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemtorelease");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_Price;
        break;
      }

      // optional string Price = 14;
      case 14: {
        if (tag == 114) {
         parse_Price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->price().data(), this->price().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "price");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_SubtotalWithVatExcluded;
        break;
      }

      // optional string SubtotalWithVatExcluded = 15;
      case 15: {
        if (tag == 122) {
         parse_SubtotalWithVatExcluded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtotalwithvatexcluded()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "subtotalwithvatexcluded");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_TaxRate;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 16 [default = Percent_18];
      case 16: {
        if (tag == 128) {
         parse_TaxRate:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Invoicing::TaxRate_IsValid(value)) {
            set_taxrate(static_cast< ::Diadoc::Api::Proto::Invoicing::TaxRate >(value));
          } else {
            mutable_unknown_fields()->AddVarint(16, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_Vat;
        break;
      }

      // optional string Vat = 17;
      case 17: {
        if (tag == 138) {
         parse_Vat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vat().data(), this->vat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_Subtotal;
        break;
      }

      // required string Subtotal = 18;
      case 18: {
        if (tag == 146) {
         parse_Subtotal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtotal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subtotal().data(), this->subtotal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "subtotal");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_ItemAccountDebit;
        break;
      }

      // optional string ItemAccountDebit = 19;
      case 19: {
        if (tag == 154) {
         parse_ItemAccountDebit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemaccountdebit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemaccountdebit().data(), this->itemaccountdebit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemaccountdebit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_ItemAccountCredit;
        break;
      }

      // optional string ItemAccountCredit = 20;
      case 20: {
        if (tag == 162) {
         parse_ItemAccountCredit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemaccountcredit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemaccountcredit().data(), this->itemaccountcredit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemaccountcredit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_AdditionalInfos;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 21;
      case 21: {
        if (tag == 170) {
         parse_AdditionalInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additionalinfos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_AdditionalInfos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.TovTorgItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.TovTorgItem)
  return false;
#undef DO_
}

void TovTorgItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.TovTorgItem)
  // optional string Product = 1;
  if (has_product()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), this->product().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product(), output);
  }

  // optional string Feature = 2;
  if (has_feature()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->feature().data(), this->feature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "feature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->feature(), output);
  }

  // optional string Sort = 3;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sort().data(), this->sort().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sort(), output);
  }

  // optional string VendorCode = 4;
  if (has_vendorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vendorcode().data(), this->vendorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vendorcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vendorcode(), output);
  }

  // optional string ProductCode = 5;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "productcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->productcode(), output);
  }

  // optional string UnitName = 6;
  if (has_unitname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unitname().data(), this->unitname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unitname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->unitname(), output);
  }

  // required string Unit = 7;
  if (has_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->unit(), output);
  }

  // optional string PackageType = 8;
  if (has_packagetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packagetype().data(), this->packagetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packagetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->packagetype(), output);
  }

  // optional string QuantityInPack = 9;
  if (has_quantityinpack()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantityinpack().data(), this->quantityinpack().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "quantityinpack");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->quantityinpack(), output);
  }

  // optional string Quantity = 10;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantity().data(), this->quantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "quantity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->quantity(), output);
  }

  // optional string Gross = 11;
  if (has_gross()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gross().data(), this->gross().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gross");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->gross(), output);
  }

  // required string Net = 12;
  if (has_net()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->net().data(), this->net().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->net(), output);
  }

  // optional string ItemToRelease = 13;
  if (has_itemtorelease()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemtorelease().data(), this->itemtorelease().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemtorelease");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->itemtorelease(), output);
  }

  // optional string Price = 14;
  if (has_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->price(), output);
  }

  // optional string SubtotalWithVatExcluded = 15;
  if (has_subtotalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotalwithvatexcluded");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->subtotalwithvatexcluded(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 16 [default = Percent_18];
  if (has_taxrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->taxrate(), output);
  }

  // optional string Vat = 17;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->vat(), output);
  }

  // required string Subtotal = 18;
  if (has_subtotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotal().data(), this->subtotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->subtotal(), output);
  }

  // optional string ItemAccountDebit = 19;
  if (has_itemaccountdebit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountdebit().data(), this->itemaccountdebit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountdebit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->itemaccountdebit(), output);
  }

  // optional string ItemAccountCredit = 20;
  if (has_itemaccountcredit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountcredit().data(), this->itemaccountcredit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountcredit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->itemaccountcredit(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 21;
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->additionalinfos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.TovTorgItem)
}

::google::protobuf::uint8* TovTorgItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.TovTorgItem)
  // optional string Product = 1;
  if (has_product()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), this->product().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product(), target);
  }

  // optional string Feature = 2;
  if (has_feature()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->feature().data(), this->feature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "feature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->feature(), target);
  }

  // optional string Sort = 3;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sort().data(), this->sort().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sort(), target);
  }

  // optional string VendorCode = 4;
  if (has_vendorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vendorcode().data(), this->vendorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vendorcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vendorcode(), target);
  }

  // optional string ProductCode = 5;
  if (has_productcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productcode().data(), this->productcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "productcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->productcode(), target);
  }

  // optional string UnitName = 6;
  if (has_unitname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unitname().data(), this->unitname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unitname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->unitname(), target);
  }

  // required string Unit = 7;
  if (has_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->unit(), target);
  }

  // optional string PackageType = 8;
  if (has_packagetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packagetype().data(), this->packagetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packagetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->packagetype(), target);
  }

  // optional string QuantityInPack = 9;
  if (has_quantityinpack()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantityinpack().data(), this->quantityinpack().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "quantityinpack");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->quantityinpack(), target);
  }

  // optional string Quantity = 10;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantity().data(), this->quantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "quantity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->quantity(), target);
  }

  // optional string Gross = 11;
  if (has_gross()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gross().data(), this->gross().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gross");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->gross(), target);
  }

  // required string Net = 12;
  if (has_net()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->net().data(), this->net().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->net(), target);
  }

  // optional string ItemToRelease = 13;
  if (has_itemtorelease()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemtorelease().data(), this->itemtorelease().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemtorelease");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->itemtorelease(), target);
  }

  // optional string Price = 14;
  if (has_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->price(), target);
  }

  // optional string SubtotalWithVatExcluded = 15;
  if (has_subtotalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotalwithvatexcluded");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->subtotalwithvatexcluded(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 16 [default = Percent_18];
  if (has_taxrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->taxrate(), target);
  }

  // optional string Vat = 17;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->vat(), target);
  }

  // required string Subtotal = 18;
  if (has_subtotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotal().data(), this->subtotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->subtotal(), target);
  }

  // optional string ItemAccountDebit = 19;
  if (has_itemaccountdebit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountdebit().data(), this->itemaccountdebit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountdebit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->itemaccountdebit(), target);
  }

  // optional string ItemAccountCredit = 20;
  if (has_itemaccountcredit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountcredit().data(), this->itemaccountcredit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountcredit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->itemaccountcredit(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 21;
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->additionalinfos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.TovTorgItem)
  return target;
}

int TovTorgItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Product = 1;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product());
    }

    // optional string Feature = 2;
    if (has_feature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->feature());
    }

    // optional string Sort = 3;
    if (has_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sort());
    }

    // optional string VendorCode = 4;
    if (has_vendorcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vendorcode());
    }

    // optional string ProductCode = 5;
    if (has_productcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productcode());
    }

    // optional string UnitName = 6;
    if (has_unitname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unitname());
    }

    // required string Unit = 7;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unit());
    }

    // optional string PackageType = 8;
    if (has_packagetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packagetype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string QuantityInPack = 9;
    if (has_quantityinpack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->quantityinpack());
    }

    // optional string Quantity = 10;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->quantity());
    }

    // optional string Gross = 11;
    if (has_gross()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gross());
    }

    // required string Net = 12;
    if (has_net()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->net());
    }

    // optional string ItemToRelease = 13;
    if (has_itemtorelease()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemtorelease());
    }

    // optional string Price = 14;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->price());
    }

    // optional string SubtotalWithVatExcluded = 15;
    if (has_subtotalwithvatexcluded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subtotalwithvatexcluded());
    }

    // optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 16 [default = Percent_18];
    if (has_taxrate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->taxrate());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string Vat = 17;
    if (has_vat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vat());
    }

    // required string Subtotal = 18;
    if (has_subtotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subtotal());
    }

    // optional string ItemAccountDebit = 19;
    if (has_itemaccountdebit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemaccountdebit());
    }

    // optional string ItemAccountCredit = 20;
    if (has_itemaccountcredit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemaccountcredit());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 21;
  total_size += 2 * this->additionalinfos_size();
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additionalinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TovTorgItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TovTorgItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TovTorgItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TovTorgItem::MergeFrom(const TovTorgItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  additionalinfos_.MergeFrom(from.additionalinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_product()) {
      set_product(from.product());
    }
    if (from.has_feature()) {
      set_feature(from.feature());
    }
    if (from.has_sort()) {
      set_sort(from.sort());
    }
    if (from.has_vendorcode()) {
      set_vendorcode(from.vendorcode());
    }
    if (from.has_productcode()) {
      set_productcode(from.productcode());
    }
    if (from.has_unitname()) {
      set_unitname(from.unitname());
    }
    if (from.has_unit()) {
      set_unit(from.unit());
    }
    if (from.has_packagetype()) {
      set_packagetype(from.packagetype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_quantityinpack()) {
      set_quantityinpack(from.quantityinpack());
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
    if (from.has_gross()) {
      set_gross(from.gross());
    }
    if (from.has_net()) {
      set_net(from.net());
    }
    if (from.has_itemtorelease()) {
      set_itemtorelease(from.itemtorelease());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_subtotalwithvatexcluded()) {
      set_subtotalwithvatexcluded(from.subtotalwithvatexcluded());
    }
    if (from.has_taxrate()) {
      set_taxrate(from.taxrate());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_vat()) {
      set_vat(from.vat());
    }
    if (from.has_subtotal()) {
      set_subtotal(from.subtotal());
    }
    if (from.has_itemaccountdebit()) {
      set_itemaccountdebit(from.itemaccountdebit());
    }
    if (from.has_itemaccountcredit()) {
      set_itemaccountcredit(from.itemaccountcredit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TovTorgItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TovTorgItem::CopyFrom(const TovTorgItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TovTorgItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00020840) != 0x00020840) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->additionalinfos())) return false;
  return true;
}

void TovTorgItem::Swap(TovTorgItem* other) {
  if (other != this) {
    std::swap(product_, other->product_);
    std::swap(feature_, other->feature_);
    std::swap(sort_, other->sort_);
    std::swap(vendorcode_, other->vendorcode_);
    std::swap(productcode_, other->productcode_);
    std::swap(unitname_, other->unitname_);
    std::swap(unit_, other->unit_);
    std::swap(packagetype_, other->packagetype_);
    std::swap(quantityinpack_, other->quantityinpack_);
    std::swap(quantity_, other->quantity_);
    std::swap(gross_, other->gross_);
    std::swap(net_, other->net_);
    std::swap(itemtorelease_, other->itemtorelease_);
    std::swap(price_, other->price_);
    std::swap(subtotalwithvatexcluded_, other->subtotalwithvatexcluded_);
    std::swap(taxrate_, other->taxrate_);
    std::swap(vat_, other->vat_);
    std::swap(subtotal_, other->subtotal_);
    std::swap(itemaccountdebit_, other->itemaccountdebit_);
    std::swap(itemaccountcredit_, other->itemaccountcredit_);
    additionalinfos_.Swap(&other->additionalinfos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TovTorgItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TovTorgItem_descriptor_;
  metadata.reflection = TovTorgItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TovTorgTransferInfo::kOperationInfoFieldNumber;
const int TovTorgTransferInfo::kTransferDateFieldNumber;
const int TovTorgTransferInfo::kAttachmentFieldNumber;
const int TovTorgTransferInfo::kWaybillsFieldNumber;
const int TovTorgTransferInfo::kEmployeeFieldNumber;
const int TovTorgTransferInfo::kOtherIssuerFieldNumber;
const int TovTorgTransferInfo::kAdditionalInfosFieldNumber;
#endif  // !_MSC_VER

TovTorgTransferInfo::TovTorgTransferInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
}

void TovTorgTransferInfo::InitAsDefaultInstance() {
  employee_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Employee*>(&::Diadoc::Api::Proto::Invoicing::Employee::default_instance());
  otherissuer_ = const_cast< ::Diadoc::Api::Proto::Invoicing::OtherIssuer*>(&::Diadoc::Api::Proto::Invoicing::OtherIssuer::default_instance());
}

TovTorgTransferInfo::TovTorgTransferInfo(const TovTorgTransferInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
}

void TovTorgTransferInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  operationinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attachment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_ = NULL;
  otherissuer_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TovTorgTransferInfo::~TovTorgTransferInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
  SharedDtor();
}

void TovTorgTransferInfo::SharedDtor() {
  if (operationinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationinfo_;
  }
  if (transferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferdate_;
  }
  if (attachment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attachment_;
  }
  if (this != default_instance_) {
    delete employee_;
    delete otherissuer_;
  }
}

void TovTorgTransferInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TovTorgTransferInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TovTorgTransferInfo_descriptor_;
}

const TovTorgTransferInfo& TovTorgTransferInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  return *default_instance_;
}

TovTorgTransferInfo* TovTorgTransferInfo::default_instance_ = NULL;

TovTorgTransferInfo* TovTorgTransferInfo::New() const {
  return new TovTorgTransferInfo;
}

void TovTorgTransferInfo::Clear() {
  if (_has_bits_[0 / 32] & 55) {
    if (has_operationinfo()) {
      if (operationinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationinfo_->clear();
      }
    }
    if (has_transferdate()) {
      if (transferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferdate_->clear();
      }
    }
    if (has_attachment()) {
      if (attachment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        attachment_->clear();
      }
    }
    if (has_employee()) {
      if (employee_ != NULL) employee_->::Diadoc::Api::Proto::Invoicing::Employee::Clear();
    }
    if (has_otherissuer()) {
      if (otherissuer_ != NULL) otherissuer_->::Diadoc::Api::Proto::Invoicing::OtherIssuer::Clear();
    }
  }
  waybills_.Clear();
  additionalinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TovTorgTransferInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string OperationInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationinfo().data(), this->operationinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TransferDate;
        break;
      }

      // optional string TransferDate = 2;
      case 2: {
        if (tag == 18) {
         parse_TransferDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferdate().data(), this->transferdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Attachment;
        break;
      }

      // optional string Attachment = 3;
      case 3: {
        if (tag == 26) {
         parse_Attachment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attachment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attachment().data(), this->attachment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "attachment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Waybills;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.Waybill Waybills = 4;
      case 4: {
        if (tag == 34) {
         parse_Waybills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_waybills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Waybills;
        if (input->ExpectTag(42)) goto parse_Employee;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 5;
      case 5: {
        if (tag == 42) {
         parse_Employee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_employee()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_OtherIssuer;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 6;
      case 6: {
        if (tag == 50) {
         parse_OtherIssuer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_otherissuer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_AdditionalInfos;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 7;
      case 7: {
        if (tag == 58) {
         parse_AdditionalInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additionalinfos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_AdditionalInfos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
  return false;
#undef DO_
}

void TovTorgTransferInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
  // required string OperationInfo = 1;
  if (has_operationinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationinfo().data(), this->operationinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operationinfo(), output);
  }

  // optional string TransferDate = 2;
  if (has_transferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdate().data(), this->transferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transferdate(), output);
  }

  // optional string Attachment = 3;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attachment().data(), this->attachment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attachment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->attachment(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Waybill Waybills = 4;
  for (int i = 0; i < this->waybills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->waybills(i), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 5;
  if (has_employee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->employee(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 6;
  if (has_otherissuer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->otherissuer(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 7;
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->additionalinfos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
}

::google::protobuf::uint8* TovTorgTransferInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
  // required string OperationInfo = 1;
  if (has_operationinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationinfo().data(), this->operationinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operationinfo(), target);
  }

  // optional string TransferDate = 2;
  if (has_transferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdate().data(), this->transferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transferdate(), target);
  }

  // optional string Attachment = 3;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attachment().data(), this->attachment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attachment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->attachment(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Waybill Waybills = 4;
  for (int i = 0; i < this->waybills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->waybills(i), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 5;
  if (has_employee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->employee(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 6;
  if (has_otherissuer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->otherissuer(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 7;
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->additionalinfos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.TovTorgTransferInfo)
  return target;
}

int TovTorgTransferInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string OperationInfo = 1;
    if (has_operationinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationinfo());
    }

    // optional string TransferDate = 2;
    if (has_transferdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferdate());
    }

    // optional string Attachment = 3;
    if (has_attachment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attachment());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 5;
    if (has_employee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->employee());
    }

    // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 6;
    if (has_otherissuer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->otherissuer());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.Waybill Waybills = 4;
  total_size += 1 * this->waybills_size();
  for (int i = 0; i < this->waybills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->waybills(i));
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 7;
  total_size += 1 * this->additionalinfos_size();
  for (int i = 0; i < this->additionalinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additionalinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TovTorgTransferInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TovTorgTransferInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TovTorgTransferInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TovTorgTransferInfo::MergeFrom(const TovTorgTransferInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  waybills_.MergeFrom(from.waybills_);
  additionalinfos_.MergeFrom(from.additionalinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operationinfo()) {
      set_operationinfo(from.operationinfo());
    }
    if (from.has_transferdate()) {
      set_transferdate(from.transferdate());
    }
    if (from.has_attachment()) {
      set_attachment(from.attachment());
    }
    if (from.has_employee()) {
      mutable_employee()->::Diadoc::Api::Proto::Invoicing::Employee::MergeFrom(from.employee());
    }
    if (from.has_otherissuer()) {
      mutable_otherissuer()->::Diadoc::Api::Proto::Invoicing::OtherIssuer::MergeFrom(from.otherissuer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TovTorgTransferInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TovTorgTransferInfo::CopyFrom(const TovTorgTransferInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TovTorgTransferInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->waybills())) return false;
  if (has_employee()) {
    if (!this->employee().IsInitialized()) return false;
  }
  if (has_otherissuer()) {
    if (!this->otherissuer().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->additionalinfos())) return false;
  return true;
}

void TovTorgTransferInfo::Swap(TovTorgTransferInfo* other) {
  if (other != this) {
    std::swap(operationinfo_, other->operationinfo_);
    std::swap(transferdate_, other->transferdate_);
    std::swap(attachment_, other->attachment_);
    waybills_.Swap(&other->waybills_);
    std::swap(employee_, other->employee_);
    std::swap(otherissuer_, other->otherissuer_);
    additionalinfos_.Swap(&other->additionalinfos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TovTorgTransferInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TovTorgTransferInfo_descriptor_;
  metadata.reflection = TovTorgTransferInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GroundInfo::kNameFieldNumber;
const int GroundInfo::kNumberFieldNumber;
const int GroundInfo::kDateFieldNumber;
const int GroundInfo::kInfoFieldNumber;
#endif  // !_MSC_VER

GroundInfo::GroundInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.GroundInfo)
}

void GroundInfo::InitAsDefaultInstance() {
}

GroundInfo::GroundInfo(const GroundInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.GroundInfo)
}

void GroundInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GroundInfo::~GroundInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.GroundInfo)
  SharedDtor();
}

void GroundInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete number_;
  }
  if (date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete date_;
  }
  if (info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete info_;
  }
  if (this != default_instance_) {
  }
}

void GroundInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroundInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GroundInfo_descriptor_;
}

const GroundInfo& GroundInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fTovTorgInfo_2eproto();
  return *default_instance_;
}

GroundInfo* GroundInfo::default_instance_ = NULL;

GroundInfo* GroundInfo::New() const {
  return new GroundInfo;
}

void GroundInfo::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_number()) {
      if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        number_->clear();
      }
    }
    if (has_date()) {
      if (date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        date_->clear();
      }
    }
    if (has_info()) {
      if (info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        info_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GroundInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.GroundInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Number;
        break;
      }

      // optional string Number = 2;
      case 2: {
        if (tag == 18) {
         parse_Number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->number().data(), this->number().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "number");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Date;
        break;
      }

      // optional string Date = 3;
      case 3: {
        if (tag == 26) {
         parse_Date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Info;
        break;
      }

      // optional string Info = 4;
      case 4: {
        if (tag == 34) {
         parse_Info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->info().data(), this->info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.GroundInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.GroundInfo)
  return false;
#undef DO_
}

void GroundInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.GroundInfo)
  // required string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string Number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->number(), output);
  }

  // optional string Date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->date(), output);
  }

  // optional string Info = 4;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.GroundInfo)
}

::google::protobuf::uint8* GroundInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.GroundInfo)
  // required string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string Number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->number(), target);
  }

  // optional string Date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->date(), target);
  }

  // optional string Info = 4;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.GroundInfo)
  return target;
}

int GroundInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string Number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }

    // optional string Date = 3;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional string Info = 4;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroundInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GroundInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GroundInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GroundInfo::MergeFrom(const GroundInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_date()) {
      set_date(from.date());
    }
    if (from.has_info()) {
      set_info(from.info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GroundInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroundInfo::CopyFrom(const GroundInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroundInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GroundInfo::Swap(GroundInfo* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(number_, other->number_);
    std::swap(date_, other->date_);
    std::swap(info_, other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GroundInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GroundInfo_descriptor_;
  metadata.reflection = GroundInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Invoicing
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
