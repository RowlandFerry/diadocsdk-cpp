// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Invoicing/ExtendedOrganizationInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Invoicing/ExtendedOrganizationInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Invoicing {
namespace Organizations {

namespace {

const ::google::protobuf::Descriptor* ExtendedOrganizationInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExtendedOrganizationInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* OrgType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Invoicing_2fExtendedOrganizationInfo_2eproto() {
  protobuf_AddDesc_Invoicing_2fExtendedOrganizationInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Invoicing/ExtendedOrganizationInfo.proto");
  GOOGLE_CHECK(file != NULL);
  ExtendedOrganizationInfo_descriptor_ = file->message_type(0);
  static const int ExtendedOrganizationInfo_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, orgname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, inn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, kpp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, fnsparticipantid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, orgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, okopf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, okpo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, okdp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, correspondentaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, bankaccountnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, bankname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, bankid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, department_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, organizationadditionalinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, organizationorpersoninfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, individualentityregistrationcertificate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, country_),
  };
  ExtendedOrganizationInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExtendedOrganizationInfo_descriptor_,
      ExtendedOrganizationInfo::default_instance_,
      ExtendedOrganizationInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedOrganizationInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExtendedOrganizationInfo));
  OrgType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Invoicing_2fExtendedOrganizationInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExtendedOrganizationInfo_descriptor_, &ExtendedOrganizationInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Invoicing_2fExtendedOrganizationInfo_2eproto() {
  delete ExtendedOrganizationInfo::default_instance_;
  delete ExtendedOrganizationInfo_reflection_;
}

void protobuf_AddDesc_Invoicing_2fExtendedOrganizationInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::protobuf_AddDesc_Address_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(Invoicing/ExtendedOrganizationInfo.pro"
    "to\022(Diadoc.Api.Proto.Invoicing.Organizat"
    "ions\032\rAddress.proto\"\236\004\n\030ExtendedOrganiza"
    "tionInfo\022\r\n\005BoxId\030\001 \001(\t\022\017\n\007OrgName\030\002 \001(\t"
    "\022\013\n\003Inn\030\003 \001(\t\022\013\n\003Kpp\030\004 \001(\t\022*\n\007Address\030\005 "
    "\001(\0132\031.Diadoc.Api.Proto.Address\022\030\n\020FnsPar"
    "ticipantId\030\006 \001(\t\022B\n\007OrgType\030\007 \002(\01621.Diad"
    "oc.Api.Proto.Invoicing.Organizations.Org"
    "Type\022\r\n\005Okopf\030\010 \001(\t\022\014\n\004Okpo\030\t \001(\t\022\014\n\004Okd"
    "p\030\n \001(\t\022\r\n\005Phone\030\013 \001(\t\022\r\n\005Email\030\014 \001(\t\022\034\n"
    "\024CorrespondentAccount\030\r \001(\t\022\031\n\021BankAccou"
    "ntNumber\030\016 \001(\t\022\020\n\010BankName\030\017 \001(\t\022\016\n\006Bank"
    "Id\030\020 \001(\t\022\022\n\nDepartment\030\021 \001(\t\022\"\n\032Organiza"
    "tionAdditionalInfo\030\022 \001(\t\022 \n\030Organization"
    "OrPersonInfo\030\023 \001(\t\022/\n\'IndividualEntityRe"
    "gistrationCertificate\030\024 \001(\t\022\017\n\007Country\030\025"
    " \001(\t*W\n\007OrgType\022\017\n\013LegalEntity\020\001\022\024\n\020Indi"
    "vidualEntity\020\002\022\021\n\rForeignEntity\020\003\022\022\n\016Phy"
    "sicalEntity\020\004", 733);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Invoicing/ExtendedOrganizationInfo.proto", &protobuf_RegisterTypes);
  ExtendedOrganizationInfo::default_instance_ = new ExtendedOrganizationInfo();
  ExtendedOrganizationInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Invoicing_2fExtendedOrganizationInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Invoicing_2fExtendedOrganizationInfo_2eproto {
  StaticDescriptorInitializer_Invoicing_2fExtendedOrganizationInfo_2eproto() {
    protobuf_AddDesc_Invoicing_2fExtendedOrganizationInfo_2eproto();
  }
} static_descriptor_initializer_Invoicing_2fExtendedOrganizationInfo_2eproto_;
const ::google::protobuf::EnumDescriptor* OrgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrgType_descriptor_;
}
bool OrgType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ExtendedOrganizationInfo::kBoxIdFieldNumber;
const int ExtendedOrganizationInfo::kOrgNameFieldNumber;
const int ExtendedOrganizationInfo::kInnFieldNumber;
const int ExtendedOrganizationInfo::kKppFieldNumber;
const int ExtendedOrganizationInfo::kAddressFieldNumber;
const int ExtendedOrganizationInfo::kFnsParticipantIdFieldNumber;
const int ExtendedOrganizationInfo::kOrgTypeFieldNumber;
const int ExtendedOrganizationInfo::kOkopfFieldNumber;
const int ExtendedOrganizationInfo::kOkpoFieldNumber;
const int ExtendedOrganizationInfo::kOkdpFieldNumber;
const int ExtendedOrganizationInfo::kPhoneFieldNumber;
const int ExtendedOrganizationInfo::kEmailFieldNumber;
const int ExtendedOrganizationInfo::kCorrespondentAccountFieldNumber;
const int ExtendedOrganizationInfo::kBankAccountNumberFieldNumber;
const int ExtendedOrganizationInfo::kBankNameFieldNumber;
const int ExtendedOrganizationInfo::kBankIdFieldNumber;
const int ExtendedOrganizationInfo::kDepartmentFieldNumber;
const int ExtendedOrganizationInfo::kOrganizationAdditionalInfoFieldNumber;
const int ExtendedOrganizationInfo::kOrganizationOrPersonInfoFieldNumber;
const int ExtendedOrganizationInfo::kIndividualEntityRegistrationCertificateFieldNumber;
const int ExtendedOrganizationInfo::kCountryFieldNumber;
#endif  // !_MSC_VER

ExtendedOrganizationInfo::ExtendedOrganizationInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
}

void ExtendedOrganizationInfo::InitAsDefaultInstance() {
  address_ = const_cast< ::Diadoc::Api::Proto::Address*>(&::Diadoc::Api::Proto::Address::default_instance());
}

ExtendedOrganizationInfo::ExtendedOrganizationInfo(const ExtendedOrganizationInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
}

void ExtendedOrganizationInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  boxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inn_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kpp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = NULL;
  fnsparticipantid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgtype_ = 1;
  okopf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  okpo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  okdp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  correspondentaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccountnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  department_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organizationadditionalinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organizationorpersoninfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  individualentityregistrationcertificate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExtendedOrganizationInfo::~ExtendedOrganizationInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
  SharedDtor();
}

void ExtendedOrganizationInfo::SharedDtor() {
  if (boxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete boxid_;
  }
  if (orgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orgname_;
  }
  if (inn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inn_;
  }
  if (kpp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete kpp_;
  }
  if (fnsparticipantid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fnsparticipantid_;
  }
  if (okopf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete okopf_;
  }
  if (okpo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete okpo_;
  }
  if (okdp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete okdp_;
  }
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phone_;
  }
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (correspondentaccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete correspondentaccount_;
  }
  if (bankaccountnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bankaccountnumber_;
  }
  if (bankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bankname_;
  }
  if (bankid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bankid_;
  }
  if (department_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete department_;
  }
  if (organizationadditionalinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete organizationadditionalinfo_;
  }
  if (organizationorpersoninfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete organizationorpersoninfo_;
  }
  if (individualentityregistrationcertificate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete individualentityregistrationcertificate_;
  }
  if (country_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_;
  }
  if (this != default_instance_) {
    delete address_;
  }
}

void ExtendedOrganizationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtendedOrganizationInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExtendedOrganizationInfo_descriptor_;
}

const ExtendedOrganizationInfo& ExtendedOrganizationInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fExtendedOrganizationInfo_2eproto();
  return *default_instance_;
}

ExtendedOrganizationInfo* ExtendedOrganizationInfo::default_instance_ = NULL;

ExtendedOrganizationInfo* ExtendedOrganizationInfo::New() const {
  return new ExtendedOrganizationInfo;
}

void ExtendedOrganizationInfo::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_boxid()) {
      if (boxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        boxid_->clear();
      }
    }
    if (has_orgname()) {
      if (orgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        orgname_->clear();
      }
    }
    if (has_inn()) {
      if (inn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        inn_->clear();
      }
    }
    if (has_kpp()) {
      if (kpp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        kpp_->clear();
      }
    }
    if (has_address()) {
      if (address_ != NULL) address_->::Diadoc::Api::Proto::Address::Clear();
    }
    if (has_fnsparticipantid()) {
      if (fnsparticipantid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        fnsparticipantid_->clear();
      }
    }
    orgtype_ = 1;
    if (has_okopf()) {
      if (okopf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        okopf_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_okpo()) {
      if (okpo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        okpo_->clear();
      }
    }
    if (has_okdp()) {
      if (okdp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        okdp_->clear();
      }
    }
    if (has_phone()) {
      if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        phone_->clear();
      }
    }
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        email_->clear();
      }
    }
    if (has_correspondentaccount()) {
      if (correspondentaccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        correspondentaccount_->clear();
      }
    }
    if (has_bankaccountnumber()) {
      if (bankaccountnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bankaccountnumber_->clear();
      }
    }
    if (has_bankname()) {
      if (bankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bankname_->clear();
      }
    }
    if (has_bankid()) {
      if (bankid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bankid_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 2031616) {
    if (has_department()) {
      if (department_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        department_->clear();
      }
    }
    if (has_organizationadditionalinfo()) {
      if (organizationadditionalinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        organizationadditionalinfo_->clear();
      }
    }
    if (has_organizationorpersoninfo()) {
      if (organizationorpersoninfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        organizationorpersoninfo_->clear();
      }
    }
    if (has_individualentityregistrationcertificate()) {
      if (individualentityregistrationcertificate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        individualentityregistrationcertificate_->clear();
      }
    }
    if (has_country()) {
      if (country_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        country_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExtendedOrganizationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string BoxId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_boxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->boxid().data(), this->boxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "boxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_OrgName;
        break;
      }

      // optional string OrgName = 2;
      case 2: {
        if (tag == 18) {
         parse_OrgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orgname().data(), this->orgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Inn;
        break;
      }

      // optional string Inn = 3;
      case 3: {
        if (tag == 26) {
         parse_Inn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inn().data(), this->inn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Kpp;
        break;
      }

      // optional string Kpp = 4;
      case 4: {
        if (tag == 34) {
         parse_Kpp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kpp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->kpp().data(), this->kpp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kpp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Address;
        break;
      }

      // optional .Diadoc.Api.Proto.Address Address = 5;
      case 5: {
        if (tag == 42) {
         parse_Address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_FnsParticipantId;
        break;
      }

      // optional string FnsParticipantId = 6;
      case 6: {
        if (tag == 50) {
         parse_FnsParticipantId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fnsparticipantid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fnsparticipantid().data(), this->fnsparticipantid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fnsparticipantid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_OrgType;
        break;
      }

      // required .Diadoc.Api.Proto.Invoicing.Organizations.OrgType OrgType = 7;
      case 7: {
        if (tag == 56) {
         parse_OrgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Invoicing::Organizations::OrgType_IsValid(value)) {
            set_orgtype(static_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::OrgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Okopf;
        break;
      }

      // optional string Okopf = 8;
      case 8: {
        if (tag == 66) {
         parse_Okopf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_okopf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->okopf().data(), this->okopf().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "okopf");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Okpo;
        break;
      }

      // optional string Okpo = 9;
      case 9: {
        if (tag == 74) {
         parse_Okpo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_okpo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->okpo().data(), this->okpo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "okpo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Okdp;
        break;
      }

      // optional string Okdp = 10;
      case 10: {
        if (tag == 82) {
         parse_Okdp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_okdp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->okdp().data(), this->okdp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "okdp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_Phone;
        break;
      }

      // optional string Phone = 11;
      case 11: {
        if (tag == 90) {
         parse_Phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "phone");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_Email;
        break;
      }

      // optional string Email = 12;
      case 12: {
        if (tag == 98) {
         parse_Email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_CorrespondentAccount;
        break;
      }

      // optional string CorrespondentAccount = 13;
      case 13: {
        if (tag == 106) {
         parse_CorrespondentAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_correspondentaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->correspondentaccount().data(), this->correspondentaccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "correspondentaccount");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_BankAccountNumber;
        break;
      }

      // optional string BankAccountNumber = 14;
      case 14: {
        if (tag == 114) {
         parse_BankAccountNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankaccountnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bankaccountnumber().data(), this->bankaccountnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bankaccountnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_BankName;
        break;
      }

      // optional string BankName = 15;
      case 15: {
        if (tag == 122) {
         parse_BankName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bankname().data(), this->bankname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bankname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_BankId;
        break;
      }

      // optional string BankId = 16;
      case 16: {
        if (tag == 130) {
         parse_BankId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bankid().data(), this->bankid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bankid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_Department;
        break;
      }

      // optional string Department = 17;
      case 17: {
        if (tag == 138) {
         parse_Department:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_department()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->department().data(), this->department().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "department");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_OrganizationAdditionalInfo;
        break;
      }

      // optional string OrganizationAdditionalInfo = 18;
      case 18: {
        if (tag == 146) {
         parse_OrganizationAdditionalInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_organizationadditionalinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->organizationadditionalinfo().data(), this->organizationadditionalinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "organizationadditionalinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_OrganizationOrPersonInfo;
        break;
      }

      // optional string OrganizationOrPersonInfo = 19;
      case 19: {
        if (tag == 154) {
         parse_OrganizationOrPersonInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_organizationorpersoninfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->organizationorpersoninfo().data(), this->organizationorpersoninfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "organizationorpersoninfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_IndividualEntityRegistrationCertificate;
        break;
      }

      // optional string IndividualEntityRegistrationCertificate = 20;
      case 20: {
        if (tag == 162) {
         parse_IndividualEntityRegistrationCertificate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_individualentityregistrationcertificate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->individualentityregistrationcertificate().data(), this->individualentityregistrationcertificate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "individualentityregistrationcertificate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_Country;
        break;
      }

      // optional string Country = 21;
      case 21: {
        if (tag == 170) {
         parse_Country:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "country");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
  return false;
#undef DO_
}

void ExtendedOrganizationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
  // optional string BoxId = 1;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->boxid().data(), this->boxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "boxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->boxid(), output);
  }

  // optional string OrgName = 2;
  if (has_orgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orgname().data(), this->orgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->orgname(), output);
  }

  // optional string Inn = 3;
  if (has_inn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inn().data(), this->inn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->inn(), output);
  }

  // optional string Kpp = 4;
  if (has_kpp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->kpp().data(), this->kpp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kpp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->kpp(), output);
  }

  // optional .Diadoc.Api.Proto.Address Address = 5;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->address(), output);
  }

  // optional string FnsParticipantId = 6;
  if (has_fnsparticipantid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fnsparticipantid().data(), this->fnsparticipantid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fnsparticipantid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->fnsparticipantid(), output);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.OrgType OrgType = 7;
  if (has_orgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->orgtype(), output);
  }

  // optional string Okopf = 8;
  if (has_okopf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->okopf().data(), this->okopf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "okopf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->okopf(), output);
  }

  // optional string Okpo = 9;
  if (has_okpo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->okpo().data(), this->okpo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "okpo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->okpo(), output);
  }

  // optional string Okdp = 10;
  if (has_okdp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->okdp().data(), this->okdp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "okdp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->okdp(), output);
  }

  // optional string Phone = 11;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->phone(), output);
  }

  // optional string Email = 12;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->email(), output);
  }

  // optional string CorrespondentAccount = 13;
  if (has_correspondentaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->correspondentaccount().data(), this->correspondentaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "correspondentaccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->correspondentaccount(), output);
  }

  // optional string BankAccountNumber = 14;
  if (has_bankaccountnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankaccountnumber().data(), this->bankaccountnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bankaccountnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->bankaccountnumber(), output);
  }

  // optional string BankName = 15;
  if (has_bankname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankname().data(), this->bankname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bankname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->bankname(), output);
  }

  // optional string BankId = 16;
  if (has_bankid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bankid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->bankid(), output);
  }

  // optional string Department = 17;
  if (has_department()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->department().data(), this->department().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "department");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->department(), output);
  }

  // optional string OrganizationAdditionalInfo = 18;
  if (has_organizationadditionalinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->organizationadditionalinfo().data(), this->organizationadditionalinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "organizationadditionalinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->organizationadditionalinfo(), output);
  }

  // optional string OrganizationOrPersonInfo = 19;
  if (has_organizationorpersoninfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->organizationorpersoninfo().data(), this->organizationorpersoninfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "organizationorpersoninfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->organizationorpersoninfo(), output);
  }

  // optional string IndividualEntityRegistrationCertificate = 20;
  if (has_individualentityregistrationcertificate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->individualentityregistrationcertificate().data(), this->individualentityregistrationcertificate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "individualentityregistrationcertificate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->individualentityregistrationcertificate(), output);
  }

  // optional string Country = 21;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->country(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
}

::google::protobuf::uint8* ExtendedOrganizationInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
  // optional string BoxId = 1;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->boxid().data(), this->boxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "boxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->boxid(), target);
  }

  // optional string OrgName = 2;
  if (has_orgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orgname().data(), this->orgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->orgname(), target);
  }

  // optional string Inn = 3;
  if (has_inn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inn().data(), this->inn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->inn(), target);
  }

  // optional string Kpp = 4;
  if (has_kpp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->kpp().data(), this->kpp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kpp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->kpp(), target);
  }

  // optional .Diadoc.Api.Proto.Address Address = 5;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->address(), target);
  }

  // optional string FnsParticipantId = 6;
  if (has_fnsparticipantid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fnsparticipantid().data(), this->fnsparticipantid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fnsparticipantid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->fnsparticipantid(), target);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.OrgType OrgType = 7;
  if (has_orgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->orgtype(), target);
  }

  // optional string Okopf = 8;
  if (has_okopf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->okopf().data(), this->okopf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "okopf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->okopf(), target);
  }

  // optional string Okpo = 9;
  if (has_okpo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->okpo().data(), this->okpo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "okpo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->okpo(), target);
  }

  // optional string Okdp = 10;
  if (has_okdp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->okdp().data(), this->okdp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "okdp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->okdp(), target);
  }

  // optional string Phone = 11;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->phone(), target);
  }

  // optional string Email = 12;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->email(), target);
  }

  // optional string CorrespondentAccount = 13;
  if (has_correspondentaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->correspondentaccount().data(), this->correspondentaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "correspondentaccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->correspondentaccount(), target);
  }

  // optional string BankAccountNumber = 14;
  if (has_bankaccountnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankaccountnumber().data(), this->bankaccountnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bankaccountnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->bankaccountnumber(), target);
  }

  // optional string BankName = 15;
  if (has_bankname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankname().data(), this->bankname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bankname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->bankname(), target);
  }

  // optional string BankId = 16;
  if (has_bankid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bankid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->bankid(), target);
  }

  // optional string Department = 17;
  if (has_department()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->department().data(), this->department().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "department");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->department(), target);
  }

  // optional string OrganizationAdditionalInfo = 18;
  if (has_organizationadditionalinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->organizationadditionalinfo().data(), this->organizationadditionalinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "organizationadditionalinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->organizationadditionalinfo(), target);
  }

  // optional string OrganizationOrPersonInfo = 19;
  if (has_organizationorpersoninfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->organizationorpersoninfo().data(), this->organizationorpersoninfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "organizationorpersoninfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->organizationorpersoninfo(), target);
  }

  // optional string IndividualEntityRegistrationCertificate = 20;
  if (has_individualentityregistrationcertificate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->individualentityregistrationcertificate().data(), this->individualentityregistrationcertificate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "individualentityregistrationcertificate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->individualentityregistrationcertificate(), target);
  }

  // optional string Country = 21;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->country(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo)
  return target;
}

int ExtendedOrganizationInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string BoxId = 1;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->boxid());
    }

    // optional string OrgName = 2;
    if (has_orgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orgname());
    }

    // optional string Inn = 3;
    if (has_inn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inn());
    }

    // optional string Kpp = 4;
    if (has_kpp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->kpp());
    }

    // optional .Diadoc.Api.Proto.Address Address = 5;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->address());
    }

    // optional string FnsParticipantId = 6;
    if (has_fnsparticipantid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fnsparticipantid());
    }

    // required .Diadoc.Api.Proto.Invoicing.Organizations.OrgType OrgType = 7;
    if (has_orgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->orgtype());
    }

    // optional string Okopf = 8;
    if (has_okopf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->okopf());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string Okpo = 9;
    if (has_okpo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->okpo());
    }

    // optional string Okdp = 10;
    if (has_okdp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->okdp());
    }

    // optional string Phone = 11;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional string Email = 12;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string CorrespondentAccount = 13;
    if (has_correspondentaccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->correspondentaccount());
    }

    // optional string BankAccountNumber = 14;
    if (has_bankaccountnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankaccountnumber());
    }

    // optional string BankName = 15;
    if (has_bankname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankname());
    }

    // optional string BankId = 16;
    if (has_bankid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankid());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string Department = 17;
    if (has_department()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->department());
    }

    // optional string OrganizationAdditionalInfo = 18;
    if (has_organizationadditionalinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->organizationadditionalinfo());
    }

    // optional string OrganizationOrPersonInfo = 19;
    if (has_organizationorpersoninfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->organizationorpersoninfo());
    }

    // optional string IndividualEntityRegistrationCertificate = 20;
    if (has_individualentityregistrationcertificate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->individualentityregistrationcertificate());
    }

    // optional string Country = 21;
    if (has_country()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtendedOrganizationInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExtendedOrganizationInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExtendedOrganizationInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExtendedOrganizationInfo::MergeFrom(const ExtendedOrganizationInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
    if (from.has_orgname()) {
      set_orgname(from.orgname());
    }
    if (from.has_inn()) {
      set_inn(from.inn());
    }
    if (from.has_kpp()) {
      set_kpp(from.kpp());
    }
    if (from.has_address()) {
      mutable_address()->::Diadoc::Api::Proto::Address::MergeFrom(from.address());
    }
    if (from.has_fnsparticipantid()) {
      set_fnsparticipantid(from.fnsparticipantid());
    }
    if (from.has_orgtype()) {
      set_orgtype(from.orgtype());
    }
    if (from.has_okopf()) {
      set_okopf(from.okopf());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_okpo()) {
      set_okpo(from.okpo());
    }
    if (from.has_okdp()) {
      set_okdp(from.okdp());
    }
    if (from.has_phone()) {
      set_phone(from.phone());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
    if (from.has_correspondentaccount()) {
      set_correspondentaccount(from.correspondentaccount());
    }
    if (from.has_bankaccountnumber()) {
      set_bankaccountnumber(from.bankaccountnumber());
    }
    if (from.has_bankname()) {
      set_bankname(from.bankname());
    }
    if (from.has_bankid()) {
      set_bankid(from.bankid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_department()) {
      set_department(from.department());
    }
    if (from.has_organizationadditionalinfo()) {
      set_organizationadditionalinfo(from.organizationadditionalinfo());
    }
    if (from.has_organizationorpersoninfo()) {
      set_organizationorpersoninfo(from.organizationorpersoninfo());
    }
    if (from.has_individualentityregistrationcertificate()) {
      set_individualentityregistrationcertificate(from.individualentityregistrationcertificate());
    }
    if (from.has_country()) {
      set_country(from.country());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExtendedOrganizationInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtendedOrganizationInfo::CopyFrom(const ExtendedOrganizationInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtendedOrganizationInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;

  if (has_address()) {
    if (!this->address().IsInitialized()) return false;
  }
  return true;
}

void ExtendedOrganizationInfo::Swap(ExtendedOrganizationInfo* other) {
  if (other != this) {
    std::swap(boxid_, other->boxid_);
    std::swap(orgname_, other->orgname_);
    std::swap(inn_, other->inn_);
    std::swap(kpp_, other->kpp_);
    std::swap(address_, other->address_);
    std::swap(fnsparticipantid_, other->fnsparticipantid_);
    std::swap(orgtype_, other->orgtype_);
    std::swap(okopf_, other->okopf_);
    std::swap(okpo_, other->okpo_);
    std::swap(okdp_, other->okdp_);
    std::swap(phone_, other->phone_);
    std::swap(email_, other->email_);
    std::swap(correspondentaccount_, other->correspondentaccount_);
    std::swap(bankaccountnumber_, other->bankaccountnumber_);
    std::swap(bankname_, other->bankname_);
    std::swap(bankid_, other->bankid_);
    std::swap(department_, other->department_);
    std::swap(organizationadditionalinfo_, other->organizationadditionalinfo_);
    std::swap(organizationorpersoninfo_, other->organizationorpersoninfo_);
    std::swap(individualentityregistrationcertificate_, other->individualentityregistrationcertificate_);
    std::swap(country_, other->country_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExtendedOrganizationInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExtendedOrganizationInfo_descriptor_;
  metadata.reflection = ExtendedOrganizationInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Organizations
}  // namespace Invoicing
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
