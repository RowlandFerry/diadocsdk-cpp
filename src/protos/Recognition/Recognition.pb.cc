// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Recognition/Recognition.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Recognition/Recognition.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Recognition {

namespace {

const ::google::protobuf::Descriptor* Recognized_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Recognized_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecognizedInvoice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecognizedInvoice_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RecognizedDocumentType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Recognition_2fRecognition_2eproto() {
  protobuf_AddDesc_Recognition_2fRecognition_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Recognition/Recognition.proto");
  GOOGLE_CHECK(file != NULL);
  Recognized_descriptor_ = file->message_type(0);
  static const int Recognized_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recognized, recognitionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recognized, errormessage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recognized, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recognized, documenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recognized, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recognized, invoice_),
  };
  Recognized_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Recognized_descriptor_,
      Recognized::default_instance_,
      Recognized_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recognized, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recognized, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Recognized));
  RecognizedInvoice_descriptor_ = file->message_type(1);
  static const int RecognizedInvoice_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizedInvoice, metadatajson_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizedInvoice, validationerrormessage_),
  };
  RecognizedInvoice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecognizedInvoice_descriptor_,
      RecognizedInvoice::default_instance_,
      RecognizedInvoice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizedInvoice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizedInvoice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecognizedInvoice));
  RecognizedDocumentType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Recognition_2fRecognition_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Recognized_descriptor_, &Recognized::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecognizedInvoice_descriptor_, &RecognizedInvoice::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Recognition_2fRecognition_2eproto() {
  delete Recognized::default_instance_;
  delete Recognized_reflection_;
  delete RecognizedInvoice::default_instance_;
  delete RecognizedInvoice_reflection_;
}

void protobuf_AddDesc_Recognition_2fRecognition_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035Recognition/Recognition.proto\022\034Diadoc."
    "Api.Proto.Recognition\"\211\002\n\nRecognized\022\025\n\r"
    "RecognitionId\030\001 \002(\t\022\024\n\014ErrorMessage\030\002 \001("
    "\t\022\020\n\010FileName\030\003 \001(\t\022i\n\014DocumentType\030\004 \001("
    "\01624.Diadoc.Api.Proto.Recognition.Recogni"
    "zedDocumentType:\035UnknownRecognizedDocume"
    "ntType\022\017\n\007Content\030\005 \001(\014\022@\n\007Invoice\030\006 \001(\013"
    "2/.Diadoc.Api.Proto.Recognition.Recogniz"
    "edInvoice\"I\n\021RecognizedInvoice\022\024\n\014Metada"
    "taJson\030\001 \002(\t\022\036\n\026ValidationErrorMessage\030\002"
    " \001(\t*Q\n\026RecognizedDocumentType\022*\n\035Unknow"
    "nRecognizedDocumentType\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007In"
    "voice\020\001", 487);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Recognition/Recognition.proto", &protobuf_RegisterTypes);
  Recognized::default_instance_ = new Recognized();
  RecognizedInvoice::default_instance_ = new RecognizedInvoice();
  Recognized::default_instance_->InitAsDefaultInstance();
  RecognizedInvoice::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Recognition_2fRecognition_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Recognition_2fRecognition_2eproto {
  StaticDescriptorInitializer_Recognition_2fRecognition_2eproto() {
    protobuf_AddDesc_Recognition_2fRecognition_2eproto();
  }
} static_descriptor_initializer_Recognition_2fRecognition_2eproto_;
const ::google::protobuf::EnumDescriptor* RecognizedDocumentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecognizedDocumentType_descriptor_;
}
bool RecognizedDocumentType_IsValid(int value) {
  switch(value) {
    case -1:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Recognized::kRecognitionIdFieldNumber;
const int Recognized::kErrorMessageFieldNumber;
const int Recognized::kFileNameFieldNumber;
const int Recognized::kDocumentTypeFieldNumber;
const int Recognized::kContentFieldNumber;
const int Recognized::kInvoiceFieldNumber;
#endif  // !_MSC_VER

Recognized::Recognized()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Recognition.Recognized)
}

void Recognized::InitAsDefaultInstance() {
  invoice_ = const_cast< ::Diadoc::Api::Proto::Recognition::RecognizedInvoice*>(&::Diadoc::Api::Proto::Recognition::RecognizedInvoice::default_instance());
}

Recognized::Recognized(const Recognized& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Recognition.Recognized)
}

void Recognized::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  recognitionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errormessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documenttype_ = -1;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invoice_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Recognized::~Recognized() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Recognition.Recognized)
  SharedDtor();
}

void Recognized::SharedDtor() {
  if (recognitionid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recognitionid_;
  }
  if (errormessage_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete errormessage_;
  }
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
    delete invoice_;
  }
}

void Recognized::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Recognized::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Recognized_descriptor_;
}

const Recognized& Recognized::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Recognition_2fRecognition_2eproto();
  return *default_instance_;
}

Recognized* Recognized::default_instance_ = NULL;

Recognized* Recognized::New() const {
  return new Recognized;
}

void Recognized::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    if (has_recognitionid()) {
      if (recognitionid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        recognitionid_->clear();
      }
    }
    if (has_errormessage()) {
      if (errormessage_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        errormessage_->clear();
      }
    }
    if (has_filename()) {
      if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filename_->clear();
      }
    }
    documenttype_ = -1;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
    if (has_invoice()) {
      if (invoice_ != NULL) invoice_->::Diadoc::Api::Proto::Recognition::RecognizedInvoice::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Recognized::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Recognition.Recognized)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string RecognitionId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recognitionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recognitionid().data(), this->recognitionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "recognitionid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ErrorMessage;
        break;
      }

      // optional string ErrorMessage = 2;
      case 2: {
        if (tag == 18) {
         parse_ErrorMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errormessage().data(), this->errormessage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "errormessage");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_FileName;
        break;
      }

      // optional string FileName = 3;
      case 3: {
        if (tag == 26) {
         parse_FileName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DocumentType;
        break;
      }

      // optional .Diadoc.Api.Proto.Recognition.RecognizedDocumentType DocumentType = 4 [default = UnknownRecognizedDocumentType];
      case 4: {
        if (tag == 32) {
         parse_DocumentType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Recognition::RecognizedDocumentType_IsValid(value)) {
            set_documenttype(static_cast< ::Diadoc::Api::Proto::Recognition::RecognizedDocumentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Content;
        break;
      }

      // optional bytes Content = 5;
      case 5: {
        if (tag == 42) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Invoice;
        break;
      }

      // optional .Diadoc.Api.Proto.Recognition.RecognizedInvoice Invoice = 6;
      case 6: {
        if (tag == 50) {
         parse_Invoice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invoice()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Recognition.Recognized)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Recognition.Recognized)
  return false;
#undef DO_
}

void Recognized::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Recognition.Recognized)
  // required string RecognitionId = 1;
  if (has_recognitionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recognitionid().data(), this->recognitionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recognitionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->recognitionid(), output);
  }

  // optional string ErrorMessage = 2;
  if (has_errormessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormessage().data(), this->errormessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "errormessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errormessage(), output);
  }

  // optional string FileName = 3;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // optional .Diadoc.Api.Proto.Recognition.RecognizedDocumentType DocumentType = 4 [default = UnknownRecognizedDocumentType];
  if (has_documenttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->documenttype(), output);
  }

  // optional bytes Content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->content(), output);
  }

  // optional .Diadoc.Api.Proto.Recognition.RecognizedInvoice Invoice = 6;
  if (has_invoice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->invoice(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Recognition.Recognized)
}

::google::protobuf::uint8* Recognized::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Recognition.Recognized)
  // required string RecognitionId = 1;
  if (has_recognitionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recognitionid().data(), this->recognitionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recognitionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->recognitionid(), target);
  }

  // optional string ErrorMessage = 2;
  if (has_errormessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormessage().data(), this->errormessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "errormessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errormessage(), target);
  }

  // optional string FileName = 3;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // optional .Diadoc.Api.Proto.Recognition.RecognizedDocumentType DocumentType = 4 [default = UnknownRecognizedDocumentType];
  if (has_documenttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->documenttype(), target);
  }

  // optional bytes Content = 5;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->content(), target);
  }

  // optional .Diadoc.Api.Proto.Recognition.RecognizedInvoice Invoice = 6;
  if (has_invoice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->invoice(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Recognition.Recognized)
  return target;
}

int Recognized::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string RecognitionId = 1;
    if (has_recognitionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recognitionid());
    }

    // optional string ErrorMessage = 2;
    if (has_errormessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errormessage());
    }

    // optional string FileName = 3;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional .Diadoc.Api.Proto.Recognition.RecognizedDocumentType DocumentType = 4 [default = UnknownRecognizedDocumentType];
    if (has_documenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->documenttype());
    }

    // optional bytes Content = 5;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

    // optional .Diadoc.Api.Proto.Recognition.RecognizedInvoice Invoice = 6;
    if (has_invoice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invoice());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Recognized::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Recognized* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Recognized*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Recognized::MergeFrom(const Recognized& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recognitionid()) {
      set_recognitionid(from.recognitionid());
    }
    if (from.has_errormessage()) {
      set_errormessage(from.errormessage());
    }
    if (from.has_filename()) {
      set_filename(from.filename());
    }
    if (from.has_documenttype()) {
      set_documenttype(from.documenttype());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_invoice()) {
      mutable_invoice()->::Diadoc::Api::Proto::Recognition::RecognizedInvoice::MergeFrom(from.invoice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Recognized::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Recognized::CopyFrom(const Recognized& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Recognized::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_invoice()) {
    if (!this->invoice().IsInitialized()) return false;
  }
  return true;
}

void Recognized::Swap(Recognized* other) {
  if (other != this) {
    std::swap(recognitionid_, other->recognitionid_);
    std::swap(errormessage_, other->errormessage_);
    std::swap(filename_, other->filename_);
    std::swap(documenttype_, other->documenttype_);
    std::swap(content_, other->content_);
    std::swap(invoice_, other->invoice_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Recognized::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Recognized_descriptor_;
  metadata.reflection = Recognized_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecognizedInvoice::kMetadataJsonFieldNumber;
const int RecognizedInvoice::kValidationErrorMessageFieldNumber;
#endif  // !_MSC_VER

RecognizedInvoice::RecognizedInvoice()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
}

void RecognizedInvoice::InitAsDefaultInstance() {
}

RecognizedInvoice::RecognizedInvoice(const RecognizedInvoice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
}

void RecognizedInvoice::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  metadatajson_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validationerrormessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecognizedInvoice::~RecognizedInvoice() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
  SharedDtor();
}

void RecognizedInvoice::SharedDtor() {
  if (metadatajson_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete metadatajson_;
  }
  if (validationerrormessage_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete validationerrormessage_;
  }
  if (this != default_instance_) {
  }
}

void RecognizedInvoice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecognizedInvoice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecognizedInvoice_descriptor_;
}

const RecognizedInvoice& RecognizedInvoice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Recognition_2fRecognition_2eproto();
  return *default_instance_;
}

RecognizedInvoice* RecognizedInvoice::default_instance_ = NULL;

RecognizedInvoice* RecognizedInvoice::New() const {
  return new RecognizedInvoice;
}

void RecognizedInvoice::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_metadatajson()) {
      if (metadatajson_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        metadatajson_->clear();
      }
    }
    if (has_validationerrormessage()) {
      if (validationerrormessage_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        validationerrormessage_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecognizedInvoice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string MetadataJson = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadatajson()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->metadatajson().data(), this->metadatajson().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metadatajson");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ValidationErrorMessage;
        break;
      }

      // optional string ValidationErrorMessage = 2;
      case 2: {
        if (tag == 18) {
         parse_ValidationErrorMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validationerrormessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->validationerrormessage().data(), this->validationerrormessage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "validationerrormessage");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
  return false;
#undef DO_
}

void RecognizedInvoice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
  // required string MetadataJson = 1;
  if (has_metadatajson()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadatajson().data(), this->metadatajson().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metadatajson");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metadatajson(), output);
  }

  // optional string ValidationErrorMessage = 2;
  if (has_validationerrormessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->validationerrormessage().data(), this->validationerrormessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "validationerrormessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->validationerrormessage(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
}

::google::protobuf::uint8* RecognizedInvoice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
  // required string MetadataJson = 1;
  if (has_metadatajson()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadatajson().data(), this->metadatajson().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metadatajson");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metadatajson(), target);
  }

  // optional string ValidationErrorMessage = 2;
  if (has_validationerrormessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->validationerrormessage().data(), this->validationerrormessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "validationerrormessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->validationerrormessage(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Recognition.RecognizedInvoice)
  return target;
}

int RecognizedInvoice::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string MetadataJson = 1;
    if (has_metadatajson()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->metadatajson());
    }

    // optional string ValidationErrorMessage = 2;
    if (has_validationerrormessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->validationerrormessage());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecognizedInvoice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecognizedInvoice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecognizedInvoice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecognizedInvoice::MergeFrom(const RecognizedInvoice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_metadatajson()) {
      set_metadatajson(from.metadatajson());
    }
    if (from.has_validationerrormessage()) {
      set_validationerrormessage(from.validationerrormessage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecognizedInvoice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizedInvoice::CopyFrom(const RecognizedInvoice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizedInvoice::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RecognizedInvoice::Swap(RecognizedInvoice* other) {
  if (other != this) {
    std::swap(metadatajson_, other->metadatajson_);
    std::swap(validationerrormessage_, other->validationerrormessage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecognizedInvoice::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecognizedInvoice_descriptor_;
  metadata.reflection = RecognizedInvoice_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Recognition
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
