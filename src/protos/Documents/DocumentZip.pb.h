// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Documents/DocumentZip.proto

#ifndef PROTOBUF_Documents_2fDocumentZip_2eproto__INCLUDED
#define PROTOBUF_Documents_2fDocumentZip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Documents {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Documents_2fDocumentZip_2eproto();
void protobuf_AssignDesc_Documents_2fDocumentZip_2eproto();
void protobuf_ShutdownFile_Documents_2fDocumentZip_2eproto();

class DocumentZipGenerationResult;

// ===================================================================

class DocumentZipGenerationResult : public ::google::protobuf::Message {
 public:
  DocumentZipGenerationResult();
  virtual ~DocumentZipGenerationResult();

  DocumentZipGenerationResult(const DocumentZipGenerationResult& from);

  inline DocumentZipGenerationResult& operator=(const DocumentZipGenerationResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentZipGenerationResult& default_instance();

  void Swap(DocumentZipGenerationResult* other);

  // implements Message ----------------------------------------------

  DocumentZipGenerationResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DocumentZipGenerationResult& from);
  void MergeFrom(const DocumentZipGenerationResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ZipFileNameOnShelf = 1;
  inline bool has_zipfilenameonshelf() const;
  inline void clear_zipfilenameonshelf();
  static const int kZipFileNameOnShelfFieldNumber = 1;
  inline const ::std::string& zipfilenameonshelf() const;
  inline void set_zipfilenameonshelf(const ::std::string& value);
  inline void set_zipfilenameonshelf(const char* value);
  inline void set_zipfilenameonshelf(const char* value, size_t size);
  inline ::std::string* mutable_zipfilenameonshelf();
  inline ::std::string* release_zipfilenameonshelf();
  inline void set_allocated_zipfilenameonshelf(::std::string* zipfilenameonshelf);

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Documents.DocumentZipGenerationResult)
 private:
  inline void set_has_zipfilenameonshelf();
  inline void clear_has_zipfilenameonshelf();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* zipfilenameonshelf_;
  friend void  protobuf_AddDesc_Documents_2fDocumentZip_2eproto();
  friend void protobuf_AssignDesc_Documents_2fDocumentZip_2eproto();
  friend void protobuf_ShutdownFile_Documents_2fDocumentZip_2eproto();

  void InitAsDefaultInstance();
  static DocumentZipGenerationResult* default_instance_;
};
// ===================================================================


// ===================================================================

// DocumentZipGenerationResult

// optional string ZipFileNameOnShelf = 1;
inline bool DocumentZipGenerationResult::has_zipfilenameonshelf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocumentZipGenerationResult::set_has_zipfilenameonshelf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocumentZipGenerationResult::clear_has_zipfilenameonshelf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocumentZipGenerationResult::clear_zipfilenameonshelf() {
  if (zipfilenameonshelf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zipfilenameonshelf_->clear();
  }
  clear_has_zipfilenameonshelf();
}
inline const ::std::string& DocumentZipGenerationResult::zipfilenameonshelf() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.Documents.DocumentZipGenerationResult.ZipFileNameOnShelf)
  return *zipfilenameonshelf_;
}
inline void DocumentZipGenerationResult::set_zipfilenameonshelf(const ::std::string& value) {
  set_has_zipfilenameonshelf();
  if (zipfilenameonshelf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zipfilenameonshelf_ = new ::std::string;
  }
  zipfilenameonshelf_->assign(value);
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.Documents.DocumentZipGenerationResult.ZipFileNameOnShelf)
}
inline void DocumentZipGenerationResult::set_zipfilenameonshelf(const char* value) {
  set_has_zipfilenameonshelf();
  if (zipfilenameonshelf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zipfilenameonshelf_ = new ::std::string;
  }
  zipfilenameonshelf_->assign(value);
  // @@protoc_insertion_point(field_set_char:Diadoc.Api.Proto.Documents.DocumentZipGenerationResult.ZipFileNameOnShelf)
}
inline void DocumentZipGenerationResult::set_zipfilenameonshelf(const char* value, size_t size) {
  set_has_zipfilenameonshelf();
  if (zipfilenameonshelf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zipfilenameonshelf_ = new ::std::string;
  }
  zipfilenameonshelf_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Diadoc.Api.Proto.Documents.DocumentZipGenerationResult.ZipFileNameOnShelf)
}
inline ::std::string* DocumentZipGenerationResult::mutable_zipfilenameonshelf() {
  set_has_zipfilenameonshelf();
  if (zipfilenameonshelf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zipfilenameonshelf_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.Documents.DocumentZipGenerationResult.ZipFileNameOnShelf)
  return zipfilenameonshelf_;
}
inline ::std::string* DocumentZipGenerationResult::release_zipfilenameonshelf() {
  clear_has_zipfilenameonshelf();
  if (zipfilenameonshelf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = zipfilenameonshelf_;
    zipfilenameonshelf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DocumentZipGenerationResult::set_allocated_zipfilenameonshelf(::std::string* zipfilenameonshelf) {
  if (zipfilenameonshelf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete zipfilenameonshelf_;
  }
  if (zipfilenameonshelf) {
    set_has_zipfilenameonshelf();
    zipfilenameonshelf_ = zipfilenameonshelf;
  } else {
    clear_has_zipfilenameonshelf();
    zipfilenameonshelf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.Documents.DocumentZipGenerationResult.ZipFileNameOnShelf)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Documents
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Documents_2fDocumentZip_2eproto__INCLUDED
