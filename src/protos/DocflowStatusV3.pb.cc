// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DocflowStatusV3.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DocflowStatusV3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {

namespace {

const ::google::protobuf::Descriptor* DocflowStatusV3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DocflowStatusV3_reflection_ = NULL;
const ::google::protobuf::Descriptor* DocflowStatusModelV3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DocflowStatusModelV3_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DocflowStatusV3_2eproto() {
  protobuf_AddDesc_DocflowStatusV3_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DocflowStatusV3.proto");
  GOOGLE_CHECK(file != NULL);
  DocflowStatusV3_descriptor_ = file->message_type(0);
  static const int DocflowStatusV3_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocflowStatusV3, primarystatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocflowStatusV3, secondarystatus_),
  };
  DocflowStatusV3_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DocflowStatusV3_descriptor_,
      DocflowStatusV3::default_instance_,
      DocflowStatusV3_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocflowStatusV3, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocflowStatusV3, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DocflowStatusV3));
  DocflowStatusModelV3_descriptor_ = file->message_type(1);
  static const int DocflowStatusModelV3_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocflowStatusModelV3, severity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocflowStatusModelV3, statustext_),
  };
  DocflowStatusModelV3_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DocflowStatusModelV3_descriptor_,
      DocflowStatusModelV3::default_instance_,
      DocflowStatusModelV3_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocflowStatusModelV3, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocflowStatusModelV3, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DocflowStatusModelV3));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DocflowStatusV3_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DocflowStatusV3_descriptor_, &DocflowStatusV3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DocflowStatusModelV3_descriptor_, &DocflowStatusModelV3::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DocflowStatusV3_2eproto() {
  delete DocflowStatusV3::default_instance_;
  delete DocflowStatusV3_reflection_;
  delete DocflowStatusModelV3::default_instance_;
  delete DocflowStatusModelV3_reflection_;
}

void protobuf_AddDesc_DocflowStatusV3_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025DocflowStatusV3.proto\022\020Diadoc.Api.Prot"
    "o\"\221\001\n\017DocflowStatusV3\022=\n\rPrimaryStatus\030\001"
    " \002(\0132&.Diadoc.Api.Proto.DocflowStatusMod"
    "elV3\022\?\n\017SecondaryStatus\030\002 \001(\0132&.Diadoc.A"
    "pi.Proto.DocflowStatusModelV3\"<\n\024Docflow"
    "StatusModelV3\022\020\n\010Severity\030\001 \001(\t\022\022\n\nStatu"
    "sText\030\002 \001(\t", 251);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DocflowStatusV3.proto", &protobuf_RegisterTypes);
  DocflowStatusV3::default_instance_ = new DocflowStatusV3();
  DocflowStatusModelV3::default_instance_ = new DocflowStatusModelV3();
  DocflowStatusV3::default_instance_->InitAsDefaultInstance();
  DocflowStatusModelV3::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DocflowStatusV3_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DocflowStatusV3_2eproto {
  StaticDescriptorInitializer_DocflowStatusV3_2eproto() {
    protobuf_AddDesc_DocflowStatusV3_2eproto();
  }
} static_descriptor_initializer_DocflowStatusV3_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DocflowStatusV3::kPrimaryStatusFieldNumber;
const int DocflowStatusV3::kSecondaryStatusFieldNumber;
#endif  // !_MSC_VER

DocflowStatusV3::DocflowStatusV3()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.DocflowStatusV3)
}

void DocflowStatusV3::InitAsDefaultInstance() {
  primarystatus_ = const_cast< ::Diadoc::Api::Proto::DocflowStatusModelV3*>(&::Diadoc::Api::Proto::DocflowStatusModelV3::default_instance());
  secondarystatus_ = const_cast< ::Diadoc::Api::Proto::DocflowStatusModelV3*>(&::Diadoc::Api::Proto::DocflowStatusModelV3::default_instance());
}

DocflowStatusV3::DocflowStatusV3(const DocflowStatusV3& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.DocflowStatusV3)
}

void DocflowStatusV3::SharedCtor() {
  _cached_size_ = 0;
  primarystatus_ = NULL;
  secondarystatus_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DocflowStatusV3::~DocflowStatusV3() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.DocflowStatusV3)
  SharedDtor();
}

void DocflowStatusV3::SharedDtor() {
  if (this != default_instance_) {
    delete primarystatus_;
    delete secondarystatus_;
  }
}

void DocflowStatusV3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocflowStatusV3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DocflowStatusV3_descriptor_;
}

const DocflowStatusV3& DocflowStatusV3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DocflowStatusV3_2eproto();
  return *default_instance_;
}

DocflowStatusV3* DocflowStatusV3::default_instance_ = NULL;

DocflowStatusV3* DocflowStatusV3::New() const {
  return new DocflowStatusV3;
}

void DocflowStatusV3::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_primarystatus()) {
      if (primarystatus_ != NULL) primarystatus_->::Diadoc::Api::Proto::DocflowStatusModelV3::Clear();
    }
    if (has_secondarystatus()) {
      if (secondarystatus_ != NULL) secondarystatus_->::Diadoc::Api::Proto::DocflowStatusModelV3::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DocflowStatusV3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.DocflowStatusV3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.DocflowStatusModelV3 PrimaryStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_primarystatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SecondaryStatus;
        break;
      }

      // optional .Diadoc.Api.Proto.DocflowStatusModelV3 SecondaryStatus = 2;
      case 2: {
        if (tag == 18) {
         parse_SecondaryStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_secondarystatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.DocflowStatusV3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.DocflowStatusV3)
  return false;
#undef DO_
}

void DocflowStatusV3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.DocflowStatusV3)
  // required .Diadoc.Api.Proto.DocflowStatusModelV3 PrimaryStatus = 1;
  if (has_primarystatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->primarystatus(), output);
  }

  // optional .Diadoc.Api.Proto.DocflowStatusModelV3 SecondaryStatus = 2;
  if (has_secondarystatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->secondarystatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.DocflowStatusV3)
}

::google::protobuf::uint8* DocflowStatusV3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.DocflowStatusV3)
  // required .Diadoc.Api.Proto.DocflowStatusModelV3 PrimaryStatus = 1;
  if (has_primarystatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->primarystatus(), target);
  }

  // optional .Diadoc.Api.Proto.DocflowStatusModelV3 SecondaryStatus = 2;
  if (has_secondarystatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->secondarystatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.DocflowStatusV3)
  return target;
}

int DocflowStatusV3::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.DocflowStatusModelV3 PrimaryStatus = 1;
    if (has_primarystatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->primarystatus());
    }

    // optional .Diadoc.Api.Proto.DocflowStatusModelV3 SecondaryStatus = 2;
    if (has_secondarystatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->secondarystatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DocflowStatusV3::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DocflowStatusV3* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DocflowStatusV3*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DocflowStatusV3::MergeFrom(const DocflowStatusV3& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_primarystatus()) {
      mutable_primarystatus()->::Diadoc::Api::Proto::DocflowStatusModelV3::MergeFrom(from.primarystatus());
    }
    if (from.has_secondarystatus()) {
      mutable_secondarystatus()->::Diadoc::Api::Proto::DocflowStatusModelV3::MergeFrom(from.secondarystatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DocflowStatusV3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocflowStatusV3::CopyFrom(const DocflowStatusV3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocflowStatusV3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DocflowStatusV3::Swap(DocflowStatusV3* other) {
  if (other != this) {
    std::swap(primarystatus_, other->primarystatus_);
    std::swap(secondarystatus_, other->secondarystatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DocflowStatusV3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DocflowStatusV3_descriptor_;
  metadata.reflection = DocflowStatusV3_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DocflowStatusModelV3::kSeverityFieldNumber;
const int DocflowStatusModelV3::kStatusTextFieldNumber;
#endif  // !_MSC_VER

DocflowStatusModelV3::DocflowStatusModelV3()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.DocflowStatusModelV3)
}

void DocflowStatusModelV3::InitAsDefaultInstance() {
}

DocflowStatusModelV3::DocflowStatusModelV3(const DocflowStatusModelV3& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.DocflowStatusModelV3)
}

void DocflowStatusModelV3::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  severity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statustext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DocflowStatusModelV3::~DocflowStatusModelV3() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.DocflowStatusModelV3)
  SharedDtor();
}

void DocflowStatusModelV3::SharedDtor() {
  if (severity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete severity_;
  }
  if (statustext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete statustext_;
  }
  if (this != default_instance_) {
  }
}

void DocflowStatusModelV3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocflowStatusModelV3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DocflowStatusModelV3_descriptor_;
}

const DocflowStatusModelV3& DocflowStatusModelV3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DocflowStatusV3_2eproto();
  return *default_instance_;
}

DocflowStatusModelV3* DocflowStatusModelV3::default_instance_ = NULL;

DocflowStatusModelV3* DocflowStatusModelV3::New() const {
  return new DocflowStatusModelV3;
}

void DocflowStatusModelV3::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_severity()) {
      if (severity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        severity_->clear();
      }
    }
    if (has_statustext()) {
      if (statustext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        statustext_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DocflowStatusModelV3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.DocflowStatusModelV3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Severity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_severity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->severity().data(), this->severity().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "severity");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StatusText;
        break;
      }

      // optional string StatusText = 2;
      case 2: {
        if (tag == 18) {
         parse_StatusText:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statustext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->statustext().data(), this->statustext().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "statustext");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.DocflowStatusModelV3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.DocflowStatusModelV3)
  return false;
#undef DO_
}

void DocflowStatusModelV3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.DocflowStatusModelV3)
  // optional string Severity = 1;
  if (has_severity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->severity().data(), this->severity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "severity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->severity(), output);
  }

  // optional string StatusText = 2;
  if (has_statustext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statustext().data(), this->statustext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "statustext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->statustext(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.DocflowStatusModelV3)
}

::google::protobuf::uint8* DocflowStatusModelV3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.DocflowStatusModelV3)
  // optional string Severity = 1;
  if (has_severity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->severity().data(), this->severity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "severity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->severity(), target);
  }

  // optional string StatusText = 2;
  if (has_statustext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statustext().data(), this->statustext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "statustext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->statustext(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.DocflowStatusModelV3)
  return target;
}

int DocflowStatusModelV3::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Severity = 1;
    if (has_severity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->severity());
    }

    // optional string StatusText = 2;
    if (has_statustext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->statustext());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DocflowStatusModelV3::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DocflowStatusModelV3* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DocflowStatusModelV3*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DocflowStatusModelV3::MergeFrom(const DocflowStatusModelV3& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_severity()) {
      set_severity(from.severity());
    }
    if (from.has_statustext()) {
      set_statustext(from.statustext());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DocflowStatusModelV3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocflowStatusModelV3::CopyFrom(const DocflowStatusModelV3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocflowStatusModelV3::IsInitialized() const {

  return true;
}

void DocflowStatusModelV3::Swap(DocflowStatusModelV3* other) {
  if (other != this) {
    std::swap(severity_, other->severity_);
    std::swap(statustext_, other->statustext_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DocflowStatusModelV3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DocflowStatusModelV3_descriptor_;
  metadata.reflection = DocflowStatusModelV3_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
