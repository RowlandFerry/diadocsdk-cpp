// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetOrganizationsByInnList.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GetOrganizationsByInnList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {

namespace {

const ::google::protobuf::Descriptor* GetOrganizationsByInnListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetOrganizationsByInnListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrganizationWithCounteragentStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrganizationWithCounteragentStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetOrganizationsByInnListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetOrganizationsByInnListResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GetOrganizationsByInnList_2eproto() {
  protobuf_AddDesc_GetOrganizationsByInnList_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GetOrganizationsByInnList.proto");
  GOOGLE_CHECK(file != NULL);
  GetOrganizationsByInnListRequest_descriptor_ = file->message_type(0);
  static const int GetOrganizationsByInnListRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrganizationsByInnListRequest, innlist_),
  };
  GetOrganizationsByInnListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetOrganizationsByInnListRequest_descriptor_,
      GetOrganizationsByInnListRequest::default_instance_,
      GetOrganizationsByInnListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrganizationsByInnListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrganizationsByInnListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetOrganizationsByInnListRequest));
  OrganizationWithCounteragentStatus_descriptor_ = file->message_type(1);
  static const int OrganizationWithCounteragentStatus_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationWithCounteragentStatus, organization_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationWithCounteragentStatus, counteragentstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationWithCounteragentStatus, lasteventtimestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationWithCounteragentStatus, messagefromcounteragent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationWithCounteragentStatus, messagetocounteragent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationWithCounteragentStatus, invitationdocumentid_),
  };
  OrganizationWithCounteragentStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrganizationWithCounteragentStatus_descriptor_,
      OrganizationWithCounteragentStatus::default_instance_,
      OrganizationWithCounteragentStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationWithCounteragentStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrganizationWithCounteragentStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrganizationWithCounteragentStatus));
  GetOrganizationsByInnListResponse_descriptor_ = file->message_type(2);
  static const int GetOrganizationsByInnListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrganizationsByInnListResponse, organizations_),
  };
  GetOrganizationsByInnListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetOrganizationsByInnListResponse_descriptor_,
      GetOrganizationsByInnListResponse::default_instance_,
      GetOrganizationsByInnListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrganizationsByInnListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrganizationsByInnListResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetOrganizationsByInnListResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GetOrganizationsByInnList_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetOrganizationsByInnListRequest_descriptor_, &GetOrganizationsByInnListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrganizationWithCounteragentStatus_descriptor_, &OrganizationWithCounteragentStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetOrganizationsByInnListResponse_descriptor_, &GetOrganizationsByInnListResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GetOrganizationsByInnList_2eproto() {
  delete GetOrganizationsByInnListRequest::default_instance_;
  delete GetOrganizationsByInnListRequest_reflection_;
  delete OrganizationWithCounteragentStatus::default_instance_;
  delete OrganizationWithCounteragentStatus_reflection_;
  delete GetOrganizationsByInnListResponse::default_instance_;
  delete GetOrganizationsByInnListResponse_reflection_;
}

void protobuf_AddDesc_GetOrganizationsByInnList_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::protobuf_AddDesc_Organization_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_Counteragent_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_DocumentId_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037GetOrganizationsByInnList.proto\022\020Diado"
    "c.Api.Proto\032\022Organization.proto\032\022Counter"
    "agent.proto\032\020DocumentId.proto\"3\n GetOrga"
    "nizationsByInnListRequest\022\017\n\007InnList\030\001 \003"
    "(\t\"\324\002\n\"OrganizationWithCounteragentStatu"
    "s\0224\n\014Organization\030\001 \002(\0132\036.Diadoc.Api.Pro"
    "to.Organization\022[\n\022CounteragentStatus\030\002 "
    "\001(\0162$.Diadoc.Api.Proto.CounteragentStatu"
    "s:\031UnknownCounteragentStatus\022\037\n\027LastEven"
    "tTimestampTicks\030\003 \001(\020\022\037\n\027MessageFromCoun"
    "teragent\030\004 \001(\t\022\035\n\025MessageToCounteragent\030"
    "\005 \001(\t\022:\n\024InvitationDocumentId\030\006 \001(\0132\034.Di"
    "adoc.Api.Proto.DocumentId\"p\n!GetOrganiza"
    "tionsByInnListResponse\022K\n\rOrganizations\030"
    "\001 \003(\01324.Diadoc.Api.Proto.OrganizationWit"
    "hCounteragentStatus", 619);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GetOrganizationsByInnList.proto", &protobuf_RegisterTypes);
  GetOrganizationsByInnListRequest::default_instance_ = new GetOrganizationsByInnListRequest();
  OrganizationWithCounteragentStatus::default_instance_ = new OrganizationWithCounteragentStatus();
  GetOrganizationsByInnListResponse::default_instance_ = new GetOrganizationsByInnListResponse();
  GetOrganizationsByInnListRequest::default_instance_->InitAsDefaultInstance();
  OrganizationWithCounteragentStatus::default_instance_->InitAsDefaultInstance();
  GetOrganizationsByInnListResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GetOrganizationsByInnList_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GetOrganizationsByInnList_2eproto {
  StaticDescriptorInitializer_GetOrganizationsByInnList_2eproto() {
    protobuf_AddDesc_GetOrganizationsByInnList_2eproto();
  }
} static_descriptor_initializer_GetOrganizationsByInnList_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int GetOrganizationsByInnListRequest::kInnListFieldNumber;
#endif  // !_MSC_VER

GetOrganizationsByInnListRequest::GetOrganizationsByInnListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
}

void GetOrganizationsByInnListRequest::InitAsDefaultInstance() {
}

GetOrganizationsByInnListRequest::GetOrganizationsByInnListRequest(const GetOrganizationsByInnListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
}

void GetOrganizationsByInnListRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetOrganizationsByInnListRequest::~GetOrganizationsByInnListRequest() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
  SharedDtor();
}

void GetOrganizationsByInnListRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetOrganizationsByInnListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOrganizationsByInnListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetOrganizationsByInnListRequest_descriptor_;
}

const GetOrganizationsByInnListRequest& GetOrganizationsByInnListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrganizationsByInnList_2eproto();
  return *default_instance_;
}

GetOrganizationsByInnListRequest* GetOrganizationsByInnListRequest::default_instance_ = NULL;

GetOrganizationsByInnListRequest* GetOrganizationsByInnListRequest::New() const {
  return new GetOrganizationsByInnListRequest;
}

void GetOrganizationsByInnListRequest::Clear() {
  innlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetOrganizationsByInnListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string InnList = 1;
      case 1: {
        if (tag == 10) {
         parse_InnList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_innlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->innlist(this->innlist_size() - 1).data(),
            this->innlist(this->innlist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "innlist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_InnList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
  return false;
#undef DO_
}

void GetOrganizationsByInnListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
  // repeated string InnList = 1;
  for (int i = 0; i < this->innlist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->innlist(i).data(), this->innlist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "innlist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->innlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
}

::google::protobuf::uint8* GetOrganizationsByInnListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
  // repeated string InnList = 1;
  for (int i = 0; i < this->innlist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->innlist(i).data(), this->innlist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "innlist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->innlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.GetOrganizationsByInnListRequest)
  return target;
}

int GetOrganizationsByInnListRequest::ByteSize() const {
  int total_size = 0;

  // repeated string InnList = 1;
  total_size += 1 * this->innlist_size();
  for (int i = 0; i < this->innlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->innlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOrganizationsByInnListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetOrganizationsByInnListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetOrganizationsByInnListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetOrganizationsByInnListRequest::MergeFrom(const GetOrganizationsByInnListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  innlist_.MergeFrom(from.innlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetOrganizationsByInnListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationsByInnListRequest::CopyFrom(const GetOrganizationsByInnListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsByInnListRequest::IsInitialized() const {

  return true;
}

void GetOrganizationsByInnListRequest::Swap(GetOrganizationsByInnListRequest* other) {
  if (other != this) {
    innlist_.Swap(&other->innlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetOrganizationsByInnListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetOrganizationsByInnListRequest_descriptor_;
  metadata.reflection = GetOrganizationsByInnListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrganizationWithCounteragentStatus::kOrganizationFieldNumber;
const int OrganizationWithCounteragentStatus::kCounteragentStatusFieldNumber;
const int OrganizationWithCounteragentStatus::kLastEventTimestampTicksFieldNumber;
const int OrganizationWithCounteragentStatus::kMessageFromCounteragentFieldNumber;
const int OrganizationWithCounteragentStatus::kMessageToCounteragentFieldNumber;
const int OrganizationWithCounteragentStatus::kInvitationDocumentIdFieldNumber;
#endif  // !_MSC_VER

OrganizationWithCounteragentStatus::OrganizationWithCounteragentStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
}

void OrganizationWithCounteragentStatus::InitAsDefaultInstance() {
  organization_ = const_cast< ::Diadoc::Api::Proto::Organization*>(&::Diadoc::Api::Proto::Organization::default_instance());
  invitationdocumentid_ = const_cast< ::Diadoc::Api::Proto::DocumentId*>(&::Diadoc::Api::Proto::DocumentId::default_instance());
}

OrganizationWithCounteragentStatus::OrganizationWithCounteragentStatus(const OrganizationWithCounteragentStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
}

void OrganizationWithCounteragentStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  organization_ = NULL;
  counteragentstatus_ = 0;
  lasteventtimestampticks_ = GOOGLE_LONGLONG(0);
  messagefromcounteragent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetocounteragent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitationdocumentid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrganizationWithCounteragentStatus::~OrganizationWithCounteragentStatus() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
  SharedDtor();
}

void OrganizationWithCounteragentStatus::SharedDtor() {
  if (messagefromcounteragent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messagefromcounteragent_;
  }
  if (messagetocounteragent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messagetocounteragent_;
  }
  if (this != default_instance_) {
    delete organization_;
    delete invitationdocumentid_;
  }
}

void OrganizationWithCounteragentStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrganizationWithCounteragentStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrganizationWithCounteragentStatus_descriptor_;
}

const OrganizationWithCounteragentStatus& OrganizationWithCounteragentStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrganizationsByInnList_2eproto();
  return *default_instance_;
}

OrganizationWithCounteragentStatus* OrganizationWithCounteragentStatus::default_instance_ = NULL;

OrganizationWithCounteragentStatus* OrganizationWithCounteragentStatus::New() const {
  return new OrganizationWithCounteragentStatus;
}

void OrganizationWithCounteragentStatus::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    if (has_organization()) {
      if (organization_ != NULL) organization_->::Diadoc::Api::Proto::Organization::Clear();
    }
    counteragentstatus_ = 0;
    lasteventtimestampticks_ = GOOGLE_LONGLONG(0);
    if (has_messagefromcounteragent()) {
      if (messagefromcounteragent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messagefromcounteragent_->clear();
      }
    }
    if (has_messagetocounteragent()) {
      if (messagetocounteragent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messagetocounteragent_->clear();
      }
    }
    if (has_invitationdocumentid()) {
      if (invitationdocumentid_ != NULL) invitationdocumentid_->::Diadoc::Api::Proto::DocumentId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrganizationWithCounteragentStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.Organization Organization = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_organization()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CounteragentStatus;
        break;
      }

      // optional .Diadoc.Api.Proto.CounteragentStatus CounteragentStatus = 2 [default = UnknownCounteragentStatus];
      case 2: {
        if (tag == 16) {
         parse_CounteragentStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::CounteragentStatus_IsValid(value)) {
            set_counteragentstatus(static_cast< ::Diadoc::Api::Proto::CounteragentStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_LastEventTimestampTicks;
        break;
      }

      // optional sfixed64 LastEventTimestampTicks = 3;
      case 3: {
        if (tag == 25) {
         parse_LastEventTimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &lasteventtimestampticks_)));
          set_has_lasteventtimestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_MessageFromCounteragent;
        break;
      }

      // optional string MessageFromCounteragent = 4;
      case 4: {
        if (tag == 34) {
         parse_MessageFromCounteragent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagefromcounteragent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagefromcounteragent().data(), this->messagefromcounteragent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messagefromcounteragent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_MessageToCounteragent;
        break;
      }

      // optional string MessageToCounteragent = 5;
      case 5: {
        if (tag == 42) {
         parse_MessageToCounteragent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagetocounteragent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagetocounteragent().data(), this->messagetocounteragent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messagetocounteragent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_InvitationDocumentId;
        break;
      }

      // optional .Diadoc.Api.Proto.DocumentId InvitationDocumentId = 6;
      case 6: {
        if (tag == 50) {
         parse_InvitationDocumentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invitationdocumentid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
  return false;
#undef DO_
}

void OrganizationWithCounteragentStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
  // required .Diadoc.Api.Proto.Organization Organization = 1;
  if (has_organization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->organization(), output);
  }

  // optional .Diadoc.Api.Proto.CounteragentStatus CounteragentStatus = 2 [default = UnknownCounteragentStatus];
  if (has_counteragentstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->counteragentstatus(), output);
  }

  // optional sfixed64 LastEventTimestampTicks = 3;
  if (has_lasteventtimestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->lasteventtimestampticks(), output);
  }

  // optional string MessageFromCounteragent = 4;
  if (has_messagefromcounteragent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagefromcounteragent().data(), this->messagefromcounteragent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagefromcounteragent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->messagefromcounteragent(), output);
  }

  // optional string MessageToCounteragent = 5;
  if (has_messagetocounteragent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagetocounteragent().data(), this->messagetocounteragent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagetocounteragent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->messagetocounteragent(), output);
  }

  // optional .Diadoc.Api.Proto.DocumentId InvitationDocumentId = 6;
  if (has_invitationdocumentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->invitationdocumentid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
}

::google::protobuf::uint8* OrganizationWithCounteragentStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
  // required .Diadoc.Api.Proto.Organization Organization = 1;
  if (has_organization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->organization(), target);
  }

  // optional .Diadoc.Api.Proto.CounteragentStatus CounteragentStatus = 2 [default = UnknownCounteragentStatus];
  if (has_counteragentstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->counteragentstatus(), target);
  }

  // optional sfixed64 LastEventTimestampTicks = 3;
  if (has_lasteventtimestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(3, this->lasteventtimestampticks(), target);
  }

  // optional string MessageFromCounteragent = 4;
  if (has_messagefromcounteragent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagefromcounteragent().data(), this->messagefromcounteragent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagefromcounteragent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->messagefromcounteragent(), target);
  }

  // optional string MessageToCounteragent = 5;
  if (has_messagetocounteragent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagetocounteragent().data(), this->messagetocounteragent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagetocounteragent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->messagetocounteragent(), target);
  }

  // optional .Diadoc.Api.Proto.DocumentId InvitationDocumentId = 6;
  if (has_invitationdocumentid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->invitationdocumentid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.OrganizationWithCounteragentStatus)
  return target;
}

int OrganizationWithCounteragentStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.Organization Organization = 1;
    if (has_organization()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->organization());
    }

    // optional .Diadoc.Api.Proto.CounteragentStatus CounteragentStatus = 2 [default = UnknownCounteragentStatus];
    if (has_counteragentstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->counteragentstatus());
    }

    // optional sfixed64 LastEventTimestampTicks = 3;
    if (has_lasteventtimestampticks()) {
      total_size += 1 + 8;
    }

    // optional string MessageFromCounteragent = 4;
    if (has_messagefromcounteragent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagefromcounteragent());
    }

    // optional string MessageToCounteragent = 5;
    if (has_messagetocounteragent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagetocounteragent());
    }

    // optional .Diadoc.Api.Proto.DocumentId InvitationDocumentId = 6;
    if (has_invitationdocumentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invitationdocumentid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrganizationWithCounteragentStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrganizationWithCounteragentStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrganizationWithCounteragentStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrganizationWithCounteragentStatus::MergeFrom(const OrganizationWithCounteragentStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_organization()) {
      mutable_organization()->::Diadoc::Api::Proto::Organization::MergeFrom(from.organization());
    }
    if (from.has_counteragentstatus()) {
      set_counteragentstatus(from.counteragentstatus());
    }
    if (from.has_lasteventtimestampticks()) {
      set_lasteventtimestampticks(from.lasteventtimestampticks());
    }
    if (from.has_messagefromcounteragent()) {
      set_messagefromcounteragent(from.messagefromcounteragent());
    }
    if (from.has_messagetocounteragent()) {
      set_messagetocounteragent(from.messagetocounteragent());
    }
    if (from.has_invitationdocumentid()) {
      mutable_invitationdocumentid()->::Diadoc::Api::Proto::DocumentId::MergeFrom(from.invitationdocumentid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrganizationWithCounteragentStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrganizationWithCounteragentStatus::CopyFrom(const OrganizationWithCounteragentStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationWithCounteragentStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_organization()) {
    if (!this->organization().IsInitialized()) return false;
  }
  if (has_invitationdocumentid()) {
    if (!this->invitationdocumentid().IsInitialized()) return false;
  }
  return true;
}

void OrganizationWithCounteragentStatus::Swap(OrganizationWithCounteragentStatus* other) {
  if (other != this) {
    std::swap(organization_, other->organization_);
    std::swap(counteragentstatus_, other->counteragentstatus_);
    std::swap(lasteventtimestampticks_, other->lasteventtimestampticks_);
    std::swap(messagefromcounteragent_, other->messagefromcounteragent_);
    std::swap(messagetocounteragent_, other->messagetocounteragent_);
    std::swap(invitationdocumentid_, other->invitationdocumentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrganizationWithCounteragentStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrganizationWithCounteragentStatus_descriptor_;
  metadata.reflection = OrganizationWithCounteragentStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetOrganizationsByInnListResponse::kOrganizationsFieldNumber;
#endif  // !_MSC_VER

GetOrganizationsByInnListResponse::GetOrganizationsByInnListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
}

void GetOrganizationsByInnListResponse::InitAsDefaultInstance() {
}

GetOrganizationsByInnListResponse::GetOrganizationsByInnListResponse(const GetOrganizationsByInnListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
}

void GetOrganizationsByInnListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetOrganizationsByInnListResponse::~GetOrganizationsByInnListResponse() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
  SharedDtor();
}

void GetOrganizationsByInnListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetOrganizationsByInnListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOrganizationsByInnListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetOrganizationsByInnListResponse_descriptor_;
}

const GetOrganizationsByInnListResponse& GetOrganizationsByInnListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrganizationsByInnList_2eproto();
  return *default_instance_;
}

GetOrganizationsByInnListResponse* GetOrganizationsByInnListResponse::default_instance_ = NULL;

GetOrganizationsByInnListResponse* GetOrganizationsByInnListResponse::New() const {
  return new GetOrganizationsByInnListResponse;
}

void GetOrganizationsByInnListResponse::Clear() {
  organizations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetOrganizationsByInnListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Diadoc.Api.Proto.OrganizationWithCounteragentStatus Organizations = 1;
      case 1: {
        if (tag == 10) {
         parse_Organizations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_organizations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Organizations;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
  return false;
#undef DO_
}

void GetOrganizationsByInnListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
  // repeated .Diadoc.Api.Proto.OrganizationWithCounteragentStatus Organizations = 1;
  for (int i = 0; i < this->organizations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->organizations(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
}

::google::protobuf::uint8* GetOrganizationsByInnListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
  // repeated .Diadoc.Api.Proto.OrganizationWithCounteragentStatus Organizations = 1;
  for (int i = 0; i < this->organizations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->organizations(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.GetOrganizationsByInnListResponse)
  return target;
}

int GetOrganizationsByInnListResponse::ByteSize() const {
  int total_size = 0;

  // repeated .Diadoc.Api.Proto.OrganizationWithCounteragentStatus Organizations = 1;
  total_size += 1 * this->organizations_size();
  for (int i = 0; i < this->organizations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->organizations(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOrganizationsByInnListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetOrganizationsByInnListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetOrganizationsByInnListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetOrganizationsByInnListResponse::MergeFrom(const GetOrganizationsByInnListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  organizations_.MergeFrom(from.organizations_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetOrganizationsByInnListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationsByInnListResponse::CopyFrom(const GetOrganizationsByInnListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsByInnListResponse::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->organizations())) return false;
  return true;
}

void GetOrganizationsByInnListResponse::Swap(GetOrganizationsByInnListResponse* other) {
  if (other != this) {
    organizations_.Swap(&other->organizations_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetOrganizationsByInnListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetOrganizationsByInnListResponse_descriptor_;
  metadata.reflection = GetOrganizationsByInnListResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
