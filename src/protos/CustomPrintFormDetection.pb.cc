// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CustomPrintFormDetection.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CustomPrintFormDetection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {

namespace {

const ::google::protobuf::Descriptor* CustomPrintFormDetectionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CustomPrintFormDetectionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CustomPrintFormDetectionResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CustomPrintFormDetectionResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* CustomPrintFormDetectionItemResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CustomPrintFormDetectionItemResult_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CustomPrintFormDetection_2eproto() {
  protobuf_AddDesc_CustomPrintFormDetection_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CustomPrintFormDetection.proto");
  GOOGLE_CHECK(file != NULL);
  CustomPrintFormDetectionRequest_descriptor_ = file->message_type(0);
  static const int CustomPrintFormDetectionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionRequest, documentids_),
  };
  CustomPrintFormDetectionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CustomPrintFormDetectionRequest_descriptor_,
      CustomPrintFormDetectionRequest::default_instance_,
      CustomPrintFormDetectionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CustomPrintFormDetectionRequest));
  CustomPrintFormDetectionResult_descriptor_ = file->message_type(1);
  static const int CustomPrintFormDetectionResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionResult, items_),
  };
  CustomPrintFormDetectionResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CustomPrintFormDetectionResult_descriptor_,
      CustomPrintFormDetectionResult::default_instance_,
      CustomPrintFormDetectionResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CustomPrintFormDetectionResult));
  CustomPrintFormDetectionItemResult_descriptor_ = file->message_type(2);
  static const int CustomPrintFormDetectionItemResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionItemResult, documentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionItemResult, hascustomprintform_),
  };
  CustomPrintFormDetectionItemResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CustomPrintFormDetectionItemResult_descriptor_,
      CustomPrintFormDetectionItemResult::default_instance_,
      CustomPrintFormDetectionItemResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionItemResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomPrintFormDetectionItemResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CustomPrintFormDetectionItemResult));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CustomPrintFormDetection_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CustomPrintFormDetectionRequest_descriptor_, &CustomPrintFormDetectionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CustomPrintFormDetectionResult_descriptor_, &CustomPrintFormDetectionResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CustomPrintFormDetectionItemResult_descriptor_, &CustomPrintFormDetectionItemResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CustomPrintFormDetection_2eproto() {
  delete CustomPrintFormDetectionRequest::default_instance_;
  delete CustomPrintFormDetectionRequest_reflection_;
  delete CustomPrintFormDetectionResult::default_instance_;
  delete CustomPrintFormDetectionResult_reflection_;
  delete CustomPrintFormDetectionItemResult::default_instance_;
  delete CustomPrintFormDetectionItemResult_reflection_;
}

void protobuf_AddDesc_CustomPrintFormDetection_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::protobuf_AddDesc_DocumentId_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036CustomPrintFormDetection.proto\022\020Diadoc"
    ".Api.Proto\032\020DocumentId.proto\"T\n\037CustomPr"
    "intFormDetectionRequest\0221\n\013DocumentIds\030\001"
    " \003(\0132\034.Diadoc.Api.Proto.DocumentId\"e\n\036Cu"
    "stomPrintFormDetectionResult\022C\n\005Items\030\001 "
    "\003(\01324.Diadoc.Api.Proto.CustomPrintFormDe"
    "tectionItemResult\"r\n\"CustomPrintFormDete"
    "ctionItemResult\0220\n\nDocumentId\030\001 \002(\0132\034.Di"
    "adoc.Api.Proto.DocumentId\022\032\n\022HasCustomPr"
    "intForm\030\002 \002(\010", 373);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CustomPrintFormDetection.proto", &protobuf_RegisterTypes);
  CustomPrintFormDetectionRequest::default_instance_ = new CustomPrintFormDetectionRequest();
  CustomPrintFormDetectionResult::default_instance_ = new CustomPrintFormDetectionResult();
  CustomPrintFormDetectionItemResult::default_instance_ = new CustomPrintFormDetectionItemResult();
  CustomPrintFormDetectionRequest::default_instance_->InitAsDefaultInstance();
  CustomPrintFormDetectionResult::default_instance_->InitAsDefaultInstance();
  CustomPrintFormDetectionItemResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CustomPrintFormDetection_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CustomPrintFormDetection_2eproto {
  StaticDescriptorInitializer_CustomPrintFormDetection_2eproto() {
    protobuf_AddDesc_CustomPrintFormDetection_2eproto();
  }
} static_descriptor_initializer_CustomPrintFormDetection_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CustomPrintFormDetectionRequest::kDocumentIdsFieldNumber;
#endif  // !_MSC_VER

CustomPrintFormDetectionRequest::CustomPrintFormDetectionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
}

void CustomPrintFormDetectionRequest::InitAsDefaultInstance() {
}

CustomPrintFormDetectionRequest::CustomPrintFormDetectionRequest(const CustomPrintFormDetectionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
}

void CustomPrintFormDetectionRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CustomPrintFormDetectionRequest::~CustomPrintFormDetectionRequest() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
  SharedDtor();
}

void CustomPrintFormDetectionRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CustomPrintFormDetectionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomPrintFormDetectionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CustomPrintFormDetectionRequest_descriptor_;
}

const CustomPrintFormDetectionRequest& CustomPrintFormDetectionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CustomPrintFormDetection_2eproto();
  return *default_instance_;
}

CustomPrintFormDetectionRequest* CustomPrintFormDetectionRequest::default_instance_ = NULL;

CustomPrintFormDetectionRequest* CustomPrintFormDetectionRequest::New() const {
  return new CustomPrintFormDetectionRequest;
}

void CustomPrintFormDetectionRequest::Clear() {
  documentids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CustomPrintFormDetectionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Diadoc.Api.Proto.DocumentId DocumentIds = 1;
      case 1: {
        if (tag == 10) {
         parse_DocumentIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_documentids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DocumentIds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
  return false;
#undef DO_
}

void CustomPrintFormDetectionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
  // repeated .Diadoc.Api.Proto.DocumentId DocumentIds = 1;
  for (int i = 0; i < this->documentids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->documentids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
}

::google::protobuf::uint8* CustomPrintFormDetectionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
  // repeated .Diadoc.Api.Proto.DocumentId DocumentIds = 1;
  for (int i = 0; i < this->documentids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->documentids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.CustomPrintFormDetectionRequest)
  return target;
}

int CustomPrintFormDetectionRequest::ByteSize() const {
  int total_size = 0;

  // repeated .Diadoc.Api.Proto.DocumentId DocumentIds = 1;
  total_size += 1 * this->documentids_size();
  for (int i = 0; i < this->documentids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->documentids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomPrintFormDetectionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CustomPrintFormDetectionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CustomPrintFormDetectionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CustomPrintFormDetectionRequest::MergeFrom(const CustomPrintFormDetectionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  documentids_.MergeFrom(from.documentids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CustomPrintFormDetectionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomPrintFormDetectionRequest::CopyFrom(const CustomPrintFormDetectionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomPrintFormDetectionRequest::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->documentids())) return false;
  return true;
}

void CustomPrintFormDetectionRequest::Swap(CustomPrintFormDetectionRequest* other) {
  if (other != this) {
    documentids_.Swap(&other->documentids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CustomPrintFormDetectionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CustomPrintFormDetectionRequest_descriptor_;
  metadata.reflection = CustomPrintFormDetectionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CustomPrintFormDetectionResult::kItemsFieldNumber;
#endif  // !_MSC_VER

CustomPrintFormDetectionResult::CustomPrintFormDetectionResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
}

void CustomPrintFormDetectionResult::InitAsDefaultInstance() {
}

CustomPrintFormDetectionResult::CustomPrintFormDetectionResult(const CustomPrintFormDetectionResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
}

void CustomPrintFormDetectionResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CustomPrintFormDetectionResult::~CustomPrintFormDetectionResult() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
  SharedDtor();
}

void CustomPrintFormDetectionResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CustomPrintFormDetectionResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomPrintFormDetectionResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CustomPrintFormDetectionResult_descriptor_;
}

const CustomPrintFormDetectionResult& CustomPrintFormDetectionResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CustomPrintFormDetection_2eproto();
  return *default_instance_;
}

CustomPrintFormDetectionResult* CustomPrintFormDetectionResult::default_instance_ = NULL;

CustomPrintFormDetectionResult* CustomPrintFormDetectionResult::New() const {
  return new CustomPrintFormDetectionResult;
}

void CustomPrintFormDetectionResult::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CustomPrintFormDetectionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Diadoc.Api.Proto.CustomPrintFormDetectionItemResult Items = 1;
      case 1: {
        if (tag == 10) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
  return false;
#undef DO_
}

void CustomPrintFormDetectionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
  // repeated .Diadoc.Api.Proto.CustomPrintFormDetectionItemResult Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
}

::google::protobuf::uint8* CustomPrintFormDetectionResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
  // repeated .Diadoc.Api.Proto.CustomPrintFormDetectionItemResult Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.CustomPrintFormDetectionResult)
  return target;
}

int CustomPrintFormDetectionResult::ByteSize() const {
  int total_size = 0;

  // repeated .Diadoc.Api.Proto.CustomPrintFormDetectionItemResult Items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomPrintFormDetectionResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CustomPrintFormDetectionResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CustomPrintFormDetectionResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CustomPrintFormDetectionResult::MergeFrom(const CustomPrintFormDetectionResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CustomPrintFormDetectionResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomPrintFormDetectionResult::CopyFrom(const CustomPrintFormDetectionResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomPrintFormDetectionResult::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void CustomPrintFormDetectionResult::Swap(CustomPrintFormDetectionResult* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CustomPrintFormDetectionResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CustomPrintFormDetectionResult_descriptor_;
  metadata.reflection = CustomPrintFormDetectionResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CustomPrintFormDetectionItemResult::kDocumentIdFieldNumber;
const int CustomPrintFormDetectionItemResult::kHasCustomPrintFormFieldNumber;
#endif  // !_MSC_VER

CustomPrintFormDetectionItemResult::CustomPrintFormDetectionItemResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
}

void CustomPrintFormDetectionItemResult::InitAsDefaultInstance() {
  documentid_ = const_cast< ::Diadoc::Api::Proto::DocumentId*>(&::Diadoc::Api::Proto::DocumentId::default_instance());
}

CustomPrintFormDetectionItemResult::CustomPrintFormDetectionItemResult(const CustomPrintFormDetectionItemResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
}

void CustomPrintFormDetectionItemResult::SharedCtor() {
  _cached_size_ = 0;
  documentid_ = NULL;
  hascustomprintform_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CustomPrintFormDetectionItemResult::~CustomPrintFormDetectionItemResult() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
  SharedDtor();
}

void CustomPrintFormDetectionItemResult::SharedDtor() {
  if (this != default_instance_) {
    delete documentid_;
  }
}

void CustomPrintFormDetectionItemResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomPrintFormDetectionItemResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CustomPrintFormDetectionItemResult_descriptor_;
}

const CustomPrintFormDetectionItemResult& CustomPrintFormDetectionItemResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CustomPrintFormDetection_2eproto();
  return *default_instance_;
}

CustomPrintFormDetectionItemResult* CustomPrintFormDetectionItemResult::default_instance_ = NULL;

CustomPrintFormDetectionItemResult* CustomPrintFormDetectionItemResult::New() const {
  return new CustomPrintFormDetectionItemResult;
}

void CustomPrintFormDetectionItemResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_documentid()) {
      if (documentid_ != NULL) documentid_->::Diadoc::Api::Proto::DocumentId::Clear();
    }
    hascustomprintform_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CustomPrintFormDetectionItemResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.DocumentId DocumentId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_documentid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HasCustomPrintForm;
        break;
      }

      // required bool HasCustomPrintForm = 2;
      case 2: {
        if (tag == 16) {
         parse_HasCustomPrintForm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hascustomprintform_)));
          set_has_hascustomprintform();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
  return false;
#undef DO_
}

void CustomPrintFormDetectionItemResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
  // required .Diadoc.Api.Proto.DocumentId DocumentId = 1;
  if (has_documentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->documentid(), output);
  }

  // required bool HasCustomPrintForm = 2;
  if (has_hascustomprintform()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->hascustomprintform(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
}

::google::protobuf::uint8* CustomPrintFormDetectionItemResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
  // required .Diadoc.Api.Proto.DocumentId DocumentId = 1;
  if (has_documentid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->documentid(), target);
  }

  // required bool HasCustomPrintForm = 2;
  if (has_hascustomprintform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->hascustomprintform(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.CustomPrintFormDetectionItemResult)
  return target;
}

int CustomPrintFormDetectionItemResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.DocumentId DocumentId = 1;
    if (has_documentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->documentid());
    }

    // required bool HasCustomPrintForm = 2;
    if (has_hascustomprintform()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomPrintFormDetectionItemResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CustomPrintFormDetectionItemResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CustomPrintFormDetectionItemResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CustomPrintFormDetectionItemResult::MergeFrom(const CustomPrintFormDetectionItemResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_documentid()) {
      mutable_documentid()->::Diadoc::Api::Proto::DocumentId::MergeFrom(from.documentid());
    }
    if (from.has_hascustomprintform()) {
      set_hascustomprintform(from.hascustomprintform());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CustomPrintFormDetectionItemResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomPrintFormDetectionItemResult::CopyFrom(const CustomPrintFormDetectionItemResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomPrintFormDetectionItemResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_documentid()) {
    if (!this->documentid().IsInitialized()) return false;
  }
  return true;
}

void CustomPrintFormDetectionItemResult::Swap(CustomPrintFormDetectionItemResult* other) {
  if (other != this) {
    std::swap(documentid_, other->documentid_);
    std::swap(hascustomprintform_, other->hascustomprintform_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CustomPrintFormDetectionItemResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CustomPrintFormDetectionItemResult_descriptor_;
  metadata.reflection = CustomPrintFormDetectionItemResult_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
