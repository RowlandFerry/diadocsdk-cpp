// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoamingNotification.proto

#ifndef PROTOBUF_RoamingNotification_2eproto__INCLUDED
#define PROTOBUF_RoamingNotification_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RoamingNotification_2eproto();
void protobuf_AssignDesc_RoamingNotification_2eproto();
void protobuf_ShutdownFile_RoamingNotification_2eproto();

class RoamingNotification;

// ===================================================================

class RoamingNotification : public ::google::protobuf::Message {
 public:
  RoamingNotification();
  virtual ~RoamingNotification();

  RoamingNotification(const RoamingNotification& from);

  inline RoamingNotification& operator=(const RoamingNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoamingNotification& default_instance();

  void Swap(RoamingNotification* other);

  // implements Message ----------------------------------------------

  RoamingNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoamingNotification& from);
  void MergeFrom(const RoamingNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // optional string Description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.RoamingNotification)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* description_;
  bool success_;
  friend void  protobuf_AddDesc_RoamingNotification_2eproto();
  friend void protobuf_AssignDesc_RoamingNotification_2eproto();
  friend void protobuf_ShutdownFile_RoamingNotification_2eproto();

  void InitAsDefaultInstance();
  static RoamingNotification* default_instance_;
};
// ===================================================================


// ===================================================================

// RoamingNotification

// required bool Success = 1;
inline bool RoamingNotification::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoamingNotification::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoamingNotification::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoamingNotification::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool RoamingNotification::success() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.RoamingNotification.Success)
  return success_;
}
inline void RoamingNotification::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.RoamingNotification.Success)
}

// optional string Description = 2;
inline bool RoamingNotification::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoamingNotification::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoamingNotification::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoamingNotification::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& RoamingNotification::description() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.RoamingNotification.Description)
  return *description_;
}
inline void RoamingNotification::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.RoamingNotification.Description)
}
inline void RoamingNotification::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:Diadoc.Api.Proto.RoamingNotification.Description)
}
inline void RoamingNotification::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Diadoc.Api.Proto.RoamingNotification.Description)
}
inline ::std::string* RoamingNotification::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.RoamingNotification.Description)
  return description_;
}
inline ::std::string* RoamingNotification::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoamingNotification::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.RoamingNotification.Description)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoamingNotification_2eproto__INCLUDED
